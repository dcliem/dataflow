<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.TreeEngine</name>
    </assembly>
    <members>
        <member name="T:CMS.TreeEngine.AttachmentInfo">
            <summary>
            Attachment info data container class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentInfo.mAttachmentUrl">
            <summary>
            Attachment URL - for internal purposes.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentInfo.mAttachmentVersionHistoryID">
            <summary>
            Attachment version history ID.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentInfo.mInputStream">
            <summary>
            Input stream - for file upload.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentInfo.mStreamProcessed">
            <summary>
            True if the input stream has already been processed.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentInfo.mAttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.#ctor">
            <summary>
            Constructor of AttachmentInfo structure.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.#ctor(CMS.DataEngine.IDataClass)">
            <summary>
            Constructor of AttachmentInfo structure, creates a new AttachmentInfo object from the given IDataClass data.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor of AttachmentInfo structure, creates a new AttachmentInfo object from the given DataRow data.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.#ctor(System.Web.HttpPostedFile,System.Int32,System.Guid)">
            <summary>
            Creates a new AttachmentInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.#ctor(System.String,System.Int32,System.Guid)">
            <summary>
            Creates a new AttachmentInfo object based on the file specified by given path.
            </summary>
            <param name="filePath">File path</param>
            <param name="documentId">Document ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.EnsureBinaryData(System.Boolean)">
            <summary>
            Ensures the binary data - loads the binary data from file stream if present.
            </summary>
            <param name="forceLoadFromDB">If true, the data are loaded even from DB</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.LoadDataFromStream">
            <summary>
            Loads the attachment data from the input stream.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentInfo.Clone(System.Boolean)">
            <summary>
            Returns clone object of current attachment info.
            </summary>
            <param name="clear">If true, the attachment is cleared to allow create new object</param>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentUrl">
            <summary>
            Attachment URL - for attachment information transfer purposes, not saved to the database.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentVersionHistoryID">
            <summary>
            Attachment version history ID - for attachment information transfer purposes, not saved to the database.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentID">
            <summary>
            Attachment ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentName">
            <summary>
            Attachment name.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentExtension">
            <summary>
            Attachment extension.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentSize">
            <summary>
            Attachment size.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentMimeType">
            <summary>
            Attachment mime type.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentBinary">
            <summary>
            Attachment binary.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentImageWidth">
            <summary>
            Attachment image width.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentImageHeight">
            <summary>
            Attachment image height.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentDocumentID">
            <summary>
            Attachment document ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentGUID">
            <summary>
            Attachment GUID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentLastHistoryID">
            <summary>
            Attachment last history ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentSiteID">
            <summary>
            Attachment site ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentLastModified">
            <summary>
            Attachment last modified.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentIsUnsorted">
            <summary>
            Indicates if attachment is an unsorted attachment.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentOrder">
            <summary>
            Stores the attachment order.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentGroupGUID">
            <summary>
            Holds the GUID of the document field (group) under which the grouped attachment belongs.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentFormGUID">
            <summary>
            Indicates that the attachment is temporary and it is bound to the specific instance of form with this GUID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.InputStream">
            <summary>
            File input stream (for large files).
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentHash">
            <summary>
            Attachment hash.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentTitle">
            <summary>
            Attachment title.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentDescription">
            <summary>
            Attachment description.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentInfo.AttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.AttachmentManager">
            <summary>
            Class providing attachment management.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentManager.MAXATTACHMENTNAMELENGTH">
            <summary>
            Maximal length of the attachment name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentManager.mConnection">
            <summary>
            General connection.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentManager.mThumbnailQuality">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentManager.mDeletePhysicalFiles">
            <summary>
            Indicates if physical files should be deleted.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentManager.ensureFileLock">
            <summary>
            Lock object for ensuring of the physical files.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AttachmentManager.mDeleteTemporaryAttachmentsOlderThan">
            <summary>
            Specifies how old (in hours) should be attachments deleted by the 'Delete old temporary attachments' scheduled task.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.StoreFilesInFileSystem(System.String)">
            <summary>
            Returns the current settings whether the files should be stored in the filesystem.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.StoreFilesInDatabase(System.String)">
            <summary>
            Returns the current settings whether the files should be stored in the database.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GenerateThumbnails(System.String)">
            <summary>
            Returns the current settings whether the thumbnails should be generated.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.CheckFilesPermissions(System.String)">
            <summary>
            Returns the current settings whether the files should check document permissions.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.CheckPublishedFiles(System.String)">
            <summary>
            Returns the current settings whether the files should check if the document is published.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetDependencyCacheKeys(CMS.TreeEngine.AttachmentInfo)">
            <summary>
            Gets the cache key dependencies array for the attachment (cache item keys affected when the attachment changes).
            </summary>
            <param name="ai">Attachment</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetDependencyCacheKeys(System.Int32)">
            <summary>
            Gets the cache key dependencies array for the attachment order change (cache item keys affected when the attachment order changes).
            </summary>
            <param name="documentId">Attachment document ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.#ctor">
            <summary>
            Empty constructor  - new connection is created inside the AttachmentManager.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.#ctor(CMS.DataEngine.GeneralConnection)">
            <summary>
            Empty constructor  - new connection is created inside the AttachmentManager.
            </summary>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentInfo(System.Int32,System.String,System.Boolean)">
            <summary>
            Gets the attachment by the document ID and file name.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="fileName">File name</param>
            <param name="getBinary">Get the binary data?</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentInfo(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentInfo(System.String,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentInfoWithoutBinary(System.Guid,System.String)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment without binary data.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentInfo(System.Int32,System.Boolean)">
            <summary>
            Returns the AttachmentInfo structure for the specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
            <param name="getBinary">If false, no binary data is retrieved from the database</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.SetAttachmentInfo(CMS.TreeEngine.AttachmentInfo)">
            <summary>
            Sets (updates or inserts) specified attachment.
            </summary>
            <param name="attachment">Attachment to set</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.MoveAttachment(CMS.TreeEngine.AttachmentInfo,System.Int32,System.Int32)">
            <summary>
            Moves the attachment data to the new site.
            </summary>
            <param name="attachment">Attachment object</param>
            <param name="oldSiteID">Old site ID</param>
            <param name="newSiteID">New site ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteAttachmentInfo(CMS.TreeEngine.AttachmentInfo)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="atInfo">Attachment object</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteAttachmentInfo(CMS.TreeEngine.AttachmentInfo,System.Boolean)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="atInfo">Attachment object</param>
            <param name="deletePhysicalFile">Delete physical file</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteAttachmentInfo(System.Int32,System.Boolean)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
            <param name="deletePhysicalFile">Delete physical file</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteAttachmentInfo(System.Int32)">
            <summary>
            Deletes specified attachment.
            </summary>
            <param name="attachmentId">Attachment id</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteAtachments(System.Int32)">
            <summary>
            Deletes all the attachments of specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteAtachments(System.String)">
            <summary>
            Deletes the attachments.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachments(System.Int32,System.Boolean)">
            <summary>
            Returns dataset of attachments with specified document id.
            </summary>
            <param name="documentId">Document id</param>
            <param name="getBinary">If false, no binary data is returned for the attachments</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachments(System.String,System.String,System.Boolean)">
            <summary>
            Returns dataset of all attachments filtered by where condition.
            </summary>
            <param name="whereCondition">Where condition statement</param>
            <param name="orderBy">Order by statement</param>
            <param name="getBinary">If false, no binary data is returned for the attachments</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachments(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns dataset of all attachments filtered by where condition.
            </summary>
            <param name="whereCondition">Where condition statement</param>
            <param name="orderBy">Order by statement</param>
            <param name="getBinary">If false, no binary data is returned for the attachments</param>
            <param name="topN">Top N attachments</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachments(System.String,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Returns dataset of all attachments filtered by where condition.
            </summary>
            <param name="whereCondition">Where condition statement</param>
            <param name="orderBy">Order by statement</param>
            <param name="getBinary">If false, no binary data is returned for the attachments</param>
            <param name="topN">Top N attachments</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetFile(CMS.TreeEngine.AttachmentInfo,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="atInfo">Attachment object</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetFile(System.Guid,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="guid">Guid of the file to get</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentBinary(System.Guid,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns attachment binary and optionaly store it in file system.
            </summary>
            <param name="guid">Guid of the attachment to get</param>
            <param name="id">ID of the attachment to get</param>
            <param name="siteName">Site name</param>
            <param name="storeInFileSystem">If true, given attachment is stored in file system</param>
            <returns>Attachment binary.</returns>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetImageThumbnailFile(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the image thumbnail from the disk.
            </summary>
            <param name="guid">Guid of the file to get</param>
            <param name="siteName">Site name</param>
            <param name="height">Image thumbnail width</param>
            <param name="width">Image thumbnail height</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetImageThumbnail(CMS.TreeEngine.AttachmentInfo,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesnt exist).
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetImageThumbnail(CMS.TreeEngine.AttachmentInfo,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesnt exist).
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
            <param name="searchThumbnailFile">Indicates if thumbnail should be searched on the disk</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetImageThumbnail(System.Guid,System.Byte[],System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesnt exist).
            </summary>
            <param name="guid">File GUID</param>
            <param name="imageData">Image data</param>
            <param name="extension">Image extenstion</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
            <param name="originalWidth">Original width of the image</param>
            <param name="originalHeight">Original height of the image</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.EnsurePhysicalFile(CMS.TreeEngine.AttachmentInfo,System.String)">
            <summary>
            Ensures the file in the file system and returns the path to the file.
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.EnsureThumbnailFile(CMS.TreeEngine.AttachmentInfo,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ensures the thumbnail file.
            </summary>
            <param name="atInfo">Attachment info</param>
            <param name="siteName">Site name</param>
            <param name="width">File width</param>
            <param name="height">File height</param>
            <param name="maxSideSize">Maximum side size</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.SaveFileToDisk(System.String,System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Save file to the disk.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="fileData">File data (byte[] or Stream)</param>   
            <param name="deleteOldFiles">Indicates whether files in destination folder with mask '[guid]*.*' should be deleted</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.SaveFileToDisk(System.String,System.String,System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Saves file to the disk.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="fileData">File data (byte[] or Stream)</param>   
            <param name="deleteOldFiles">Indicates whether files in destination folder with mask '[guid]*.*' should be deleted</param>
            <param name="synchronization">Indicates if this function is called from "ProcessTask"</param>
            <returns>Returns the path to the file on the disk</returns>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteFile(System.Guid,System.String,System.Boolean)">
            <summary>
            Delete all files with the same name ([name].*) in specified directory.
            </summary>
            <param name="fileGuid">Guid of the file to delete</param>
            <param name="siteName">Site name</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteFile(System.Guid,System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete all files with the same name ([name].*) in specified directory.
            </summary>
            <param name="fileGuid">Guid of the file to delete</param>
            <param name="siteName">Site name</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not</param>
            <param name="synchronization">Indicates wehther the method is called due to synchronization</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.CanResizeImage(CMS.TreeEngine.AttachmentInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks whether the image should be processed (resized) by the Image manager (if the destination size is smaller).
            </summary>
            <param name="atInfo">Attachment info to check</param>
            <param name="width">New width</param>
            <param name="height">New height</param>
            <param name="maxSideSize">Max side size</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.ResizeAttachments(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes specified attachments to the required dimensions.
            </summary>
            <param name="where">Where condition</param>        
            <param name="width">Image widht</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Image max side size</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.SetAttachmentsQuality(System.String,System.Int32)">
            <summary>
            Sets image quality of all specified attachments to the required level.
            </summary>
            <param name="where">Where condition to filter attachments</param>        
            <param name="quality">New image quality, from 0 (lowest quality) to 100 (highest quality)</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentSite(CMS.TreeEngine.AttachmentInfo)">
            <summary>
            Gets attachment site.
            </summary>
            <param name="attInfo">Attachment info</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.InitAttachmentOrderAndParameters(System.Guid,System.Int32)">
            <summary>
            Initializes sorting order of attachments.
            </summary>
            <param name="attachmentGuid">GUID of attachment</param>
            <param name="documentId">Document ID (0 for temporary attachments)</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.MoveAttachmentUp(System.Guid,System.Int32)">
            <summary>
            Moves temporary attachment up.
            </summary>
            <param name="attachmentGuid">GUID of attachment</param>
            <param name="documentId">Document ID (0 for temporary attachments)</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.MoveAttachmentDown(System.Guid,System.Int32)">
            <summary>
            Moves temporary attachment down.
            </summary>
            <param name="attachmentGuid">GUID of attachment</param>
            <param name="documentId">Document ID (0 for temporary attachments)</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteOldTemporaryAttachments">
            <summary>
            Deletes old temporary attachments.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteTemporaryAttachments(System.Int32)">
            <summary>
            Deletes old temporary attachments.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.AddTemporaryAttachment(System.Guid,System.String,System.Guid,System.Guid,System.Object,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file (HttpPostedFile or file path)</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.DeleteTemporaryAttachment(System.Guid,System.String)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="attachmentGuid">GUID of the attachment</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.ResizeImageAttachment(CMS.TreeEngine.AttachmentInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes image to specified dimensions.
            </summary>
            <param name="newAttachment">Attachment info</param>
            <param name="width">New width of the attachment</param>
            <param name="height">New height of the attachment</param>
            <param name="maxSideSize">Maximal side size of the attachment</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetUniqueTemporaryAttachmentFileName(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Method gets unique temporary attachment file name in the form scope.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="fileName">Name of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <param name="siteId">Site ID</param>
            <returns>Unique attachment name</returns>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.IsUniqueTemporaryAttachmentName(System.Guid,System.String,System.String,System.Int32)">
            <summary>
             Finds out whether given attachment name is unique
            </summary>
             <param name="formGuid">GUID of the form</param>
             <param name="fileName">Name of file</param>
             <param name="extension">Extension of file</param>
             <param name="currentAttachmentId">Current attachment ID</param>
             <returns>True if attachment name is unique</returns>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,System.String,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file path</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file path</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,System.Web.HttpPostedFile,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.AddTemporaryAttachment(System.Guid,System.Guid,System.Guid,System.Web.HttpPostedFile,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the temporary attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="formGuid">GUID of the form</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file</param>
            <param name="siteId">Site ID</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetFilesFolderPath(System.String)">
            <summary>
            Returns files folder physical path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetFilesFolderRelativePath(System.String)">
            <summary>
            Returns files folder relative path according to 'CMSFilesFolder' settings key is set or not.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetFileFolder(System.String,System.String)">
            <summary>
            Returns physical path to the file folder(files folder path + subfolder).
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>        
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetFilePhysicalPath(System.String,System.String,System.String)">
            <summary>
            Returns physical path to the file.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetThumbnailPhysicalPath(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns physical path to the thumbnail.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetFilePhysicalURL(System.String,System.String,System.String)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetFilePhysicalURL(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetPermanentAttachmentUrl(System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetPermanentAttachmentUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentUrl(System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="attachmentGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetAttachmentUrl(System.String,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="safeFileName">Attachment safe file name</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetPermanentAttachmentUrl(System.String,System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="siteName">Site name</param>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetPermanentFileUrl(System.Guid,System.String)">
            <summary>
            Returns the permanent file URL representation to access the file by Node GUID.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentManager.GetPermanentDocUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns permanent document url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentManager.DeletePhysicalFiles">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentManager.ThumbnailQuality">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentManager.WebApplicationPhysicalPath">
            <summary>
            Full path to the root of the web.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AttachmentManager.DeleteTemporaryAttachmentsOlderThan">
            <summary>
            Specifies how old (in hours) should be attachments deleted by the 'Delete old temporary attachments' scheduled task.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.AttachmentURLProvider">
            <summary>
            URL provider for the attachments.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetFilePhysicalURL(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetPermanentAttachmentUrl(System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetPermanentAttachmentUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetAttachmentUrl(System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="attachmentGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetAttachmentUrl(System.String,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="safeFileName">Attachment safe file name</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetPermanentAttachmentUrl(System.String,System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="siteName">Site name</param>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetPermanentFileUrl(System.Guid,System.String)">
            <summary>
            Returns the permanent file URL representation to access the file by Node GUID.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetAttachmentWebDAVUrl(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets attachment file relative URL for WebDAV module.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Document culture code</param>
            <param name="fieldName">Field name for grouped attachment (optional)</param>
            <param name="fileName">File name</param>
            <param name="groupName">Community group name (optional)</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetContentFileWebDAVUrl(System.String,System.String,System.String)">
            <summary>
            Gets content file relative URL for WebDAV module.
            </summary>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Node culture code</param>
            <param name="groupName">Community group name (optional)</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetFilePhysicalURLInternal(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the URL to the physical file.
            </summary>
            <param name="siteName">File site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetPermanentAttachmentUrlInternal(System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetPermanentAttachmentUrlInternal(System.Guid,System.String,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetAttachmentUrlInternal(System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="attachmentGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetAttachmentUrlInternal(System.String,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="safeFileName">Attachment safe file name</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetPermanentAttachmentUrlInternal(System.String,System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="siteName">Site name</param>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetPermanentFileUrlInternal(System.Guid,System.String)">
            <summary>
            Returns the permanent file URL representation to access the file by Node GUID.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="nodeAlias">Node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetAttachmentWebDAVUrlInternal(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets attachment file relative URL for WebDAV module.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Document culture code</param>
            <param name="fieldName">Field name for grouped attachment (optional)</param>
            <param name="fileName">File name</param>
            <param name="groupName">Community group name (optional)</param>
        </member>
        <member name="M:CMS.TreeEngine.AttachmentURLProvider.GetContentFileWebDAVUrlInternal(System.String,System.String,System.String)">
            <summary>
            Gets content file relative URL for WebDAV module.
            </summary>
            <param name="aliasPath">Node alias path</param>
            <param name="cultureCode">Node culture code</param>
            <param name="groupName">Community group name (optional)</param>
        </member>
        <member name="T:CMS.TreeEngine.TemporaryAttachmentsCleaner">
            <summary>
            Provides an ITask interface for the temporary attachments deletion.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TemporaryAttachmentsCleaner.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the publish action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.TreeEngine.CombinedTreeNodeCollection">
            <summary>
            Combined collection of documents.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.CombinedTreeNodeCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeNodeCollection`1">
            <summary>
            Generic strongly typed info object collection
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeNodeCollection">
            <summary>
            Document collection.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.SiteName">
            <summary>
            Site name of the documents.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.AliasPath">
            <summary>
            Alias path.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.CultureCode">
            <summary>
            Culture of the documents.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.CombineWithDefaultCulture">
            <summary>
            Combine with default culture.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.ClassNames">
            <summary>
            Class names to select.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.MaxRelativeLevel">
            <summary>
            Maximum relative level.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.SelectOnlyPublished">
            <summary>
            Select only published documents.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.SelectAllData">
            <summary>
            If true, the coupled data are retrieved in case class names are specified
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.mProperties">
            <summary>
            Property names
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeCollection.mWithAllData">
            <summary>
            Collection including coupled data
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.#ctor(System.String,CMS.TreeEngine.TreeNode,CMS.SettingsProvider.ICMSStorage)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="parentDocument">Parent document node</param>
            <param name="parentStorage">Parent storage</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.CreateNewObject(System.Data.DataRow)">
            <summary>
            Creates new instance of the ensapsulated object.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.GetObjectName(CMS.TreeEngine.TreeNode)">
            <summary>
            Gets the unique object name from the given object.
            </summary>
            <param name="obj">Object</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.GetData(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the data for the collection.
            </summary>
            <param name="where">Where condition</param>
            <param name="offset">Starting offset for the data</param>
            <param name="maxRecords">Maximum number of records to get</param>
            <param name="totalRecords">Returning total number of records</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.Clone">
            <summary>
            Creates the clone of the collection.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.Clear">
            <summary>
            Clears the current items in the collection.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.GetProperty(System.String)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollection.Properties">
            <summary>
            Returns list of supported columns.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollection.NameColumn">
            <summary>
            Name column name
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollection.DefaultClassName">
            <summary>
            Default class name for the documents (if ClassName column is not available)
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollection.IsDisconnected">
            <summary>
            Returns true if the collection is disconnected from the data source
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollection.ParentDocument">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollection.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollection.WithAllData">
            <summary>
            Collection including coupled data
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection`1.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection`1.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeCollection`1.GetEnumerator">
            <summary>
            Gets the strongly typed enumerator for the collection
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeNodeCollectionSettings">
            <summary>
            Collection settings for TreeNode collection
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.LowerName">
            <summary>
            Lower name of the collection for indexation
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.SiteName">
            <summary>
            Site name
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.AliasPath">
            <summary>
            Alias path
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.CultureCode">
            <summary>
            Culture code
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.CombineWithDefaultCulture">
            <summary>
            Combine the documents with default culture
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.ClassNames">
            <summary>
            Class names of the documents to get
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.MaxRelativeLevel">
            <summary>
            Maximum relative level
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeCollectionSettings.SelectOnlyPublished">
            <summary>
            Select only published documents
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentURLProvider">
            <summary>
            URL provider for the documents.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentURLProvider.NO_EXTENSION">
            <summary>
            No extension constant
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentURLProvider.mDefaultPageURL">
            <summary>
            Default (root) page URL.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentURLProvider.mWildcardDefaultValueDelimiter">
            <summary>
            Default wildcard value delimiter.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentURLProvider.mUseCurrentWildcardValueAsDefaultValue">
            <summary>
            Indicates whether current wildcard query string value should be used as default value.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentURLProvider.mWildcardRegex">
            <summary>
            Regular expression for wildcard.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentURLProvider.mEscapeRegex">
            <summary>
            Regular expression for escaping special regular chars if they are present in URL.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetUrl(System.String)">
            <summary>
            Returns URL for the specified aliasPath.
            </summary>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetUrl(System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url).
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetUrl(System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Lang prefix. If is empty current lang prefix is used</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Lang prefix. If is empty current lang prefix is used</param>
            <param name="extension">Url extension</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetAttachmentUrl(System.Guid,System.String,System.Int32,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="nodeAlias">Node Alias name</param>
            <param name="versionHistoryId">Version history ID</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetAttachmentUrl(System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="nodeAlias">Node Alias name</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetPermanentDocUrl(System.Guid,System.String,System.String,System.String,System.String)">
            <summary>
            Returns permanent document url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
            <param name="extension">Extension for the URL, if null, it is taken from the Friendly URL settings</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetPermanentDocUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns permanent document url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetUrlForPathInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified path.
            </summary>
            <param name="path">Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Language prefix. If is empty, current language prefix is used</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetUrlInternal(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Lang prefix. If is empty, current lang prefix is used</param>
            <param name="extension">Url extension</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetAttachmentUrlInternal(System.Guid,System.String,System.Int32,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="nodeAlias">Node Alias name</param>
            <param name="versionHistoryId">Version history ID</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.GetPermanentDocUrlInternal(System.Guid,System.String,System.String,System.String,System.String)">
            <summary>
            Returns permanent document url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
            <param name="extension">Extension for the URL, if null, it is taken from the Friendly URL settings</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.WildcardMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Replace wildcard match if contain default value definition.
            </summary>
            <param name="m">Regex match</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.EnsureWildcardPath(System.String)">
            <summary>
            Ensures URL path with wildcards. The wildcard with default value are replace to the default value.
            </summary>
            <param name="path">URL path</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentURLProvider.BuildWildcardQueryString(System.String,System.String)">
            <summary>
            Returns query string for wildcard url. Wildcard is in format /{name
            </summary>
            <param name="urlPath">Url path from database</param>
            <param name="currentPath">Current requested url path</param>
        </member>
        <member name="P:CMS.TreeEngine.DocumentURLProvider.EscapeRegex">
            <summary>
            Regular expression for escaping special regular chars if they are present in URL.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentURLProvider.WildcardRegex">
            <summary>
            Gets the regular expression for wildcard rule.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentURLProvider.DefaultPageURL">
            <summary>
            Default (root) page URL.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentURLProvider.WildcardDefaultValueDelimiter">
            <summary>
            Gets the delimiter for default widcard value.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentURLProvider.UseCurrentWildcardValueAsDefaultValue">
            <summary>
            Gets or sets the value that indicates whether current wildcard query string value should be used as default value.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.NodeSelectionParameters">
            <summary>
            Structure to define the selection parameters for a document nodes selection
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodeSelectionParameters.mCombineWithDefaultCulture">
            <summary>
            Combine with default culture
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.NodeSelectionParameters.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.SiteName">
            <summary>
            Nodes site name
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.AliasPath">
            <summary>
            Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.CultureCode">
            <summary>
            Nodes culture code
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.CombineWithDefaultCulture">
            <summary>
            Specifies if return the default culture document when specified culture not found
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.ClassNames">
            <summary>
            List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.Where">
            <summary>
            Where condition to use for the data selection
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.OrderBy">
            <summary>
            Order by clause to use for the data selection
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.MaxRelativeLevel">
            <summary>
            Maximal child level of the selected nodes
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.SelectOnlyPublished">
            <summary>
            Select only published nodes
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.TopN">
            <summary>
            Select top N rows only
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.Columns">
            <summary>
            Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.SelectAllData">
            <summary>
            If true, the coupled data are retrieved in case class names are specified
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.NodeSelectionParameters.SelectSingleNode">
            <summary>
            If true, single node selection takes place (escapes query like patterns)
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeNodeDataSet">
            <summary>
            TreeNode DataSet class. Enhancement to DataSet to provide strongly typed collection side-by-side with the data.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeDataSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeDataSet.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeDataSet.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor, creates new DataSet using data from the given DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeDataSet.NewCollection">
            <summary>
            Creates new collection of the objects
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeDataSet.Clone">
            <summary>
            Clones the DataSet
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeDataSet.DefaultClassName">
            <summary>
            Default class name
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeDataSet.Items">
            <summary>
            Items in the DataSet
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.NodeInfo">
            <summary>
            NodeInfo class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodeInfo.TYPEINFO">
            <summary>
            Type information (Not complete - some information is missing).
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.NodeInfo.#ctor">
            <summary>
            Constructor - Creates an empty NodeInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.NodeInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>        
        </member>
        <member name="M:CMS.TreeEngine.NodeInfo.GetInstance">
            <summary>
            Creates instance of object.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TranslationStatusEnum">
            <summary>
            Translation status enumeration.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TranslationStatusEnum.Translated">
            <summary>
            Translation of document is up to date.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TranslationStatusEnum.Outdated">
            <summary>
            Translation is out of date.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TranslationStatusEnum.NotAvailable">
            <summary>
            Translation is not avialable.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeNodeRepository">
            <summary>
            Repository of the documents without workflow support.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeRepository.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeRepository.mIsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeRepository.mSiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNodeRepository.mRootDocument">
            <summary>
            Root document.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeRepository.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeRepository.#ctor(CMS.TreeEngine.TreeNode)">
            <summary>
            Constructor.
            </summary>
            <param name="parentDocument">Parent document</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeRepository.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeRepository.GetRootDocument">
            <summary>
            Gets the root document from the database.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeRepository.AddCollection(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            Registers the given collection of objects within the repository.
            </summary>
            <param name="name">Collection name</param>
            <param name="className">Default class name</param>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Select top N rows only</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeRepository.LoadCollection(System.Object)">
            <summary>
            Loads the given collection.
            </summary>
            <param name="settings">Collection settings</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeRepository.NewCollection(System.String)">
            <summary>
            Creates new collection for the data.
            </summary>
            <param name="type">Type of the collection</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNodeRepository.NewCombinedCollection">
            <summary>
            Creates new combined collection for the data.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeRepository.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeRepository.IsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeRepository.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeRepository.RootDocument">
            <summary>
            Root document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeRepository.ParentDocument">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNodeRepository.IsDisconnected">
            <summary>
            Returns true if the repository is disconnected from the data source
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.UserDocumentsListInfo.TYPEINFO">
            <summary>
            Type information (Not complete - some information is missing).
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.UserDocumentsListInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserDocumentsListInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.UserDocumentsListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserDocumentsListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.TreeEngine.UserDocumentsListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.TreeEngine.DocumentAuthorizationEventArgs">
            <summary>
            Document authorization event arguments
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAuthorizationEventArgs.User">
            <summary>
            User to check
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAuthorizationEventArgs.Data">
            <summary>
            Data to authorize
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAuthorizationEventArgs.Document">
            <summary>
            Document to authorize
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAuthorizationEventArgs.PermissionName">
            <summary>
            Permission name
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAuthorizationEventArgs.AuthorizationResult">
            <summary>
            Document authorization result
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentAuthorizationHandler">
            <summary>
            Document authorization handler
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAuthorizationHandler.StartEvent(CMS.SiteProvider.UserInfo,CMS.TreeEngine.TreeNode,System.String,CMS.TreeEngine.AuthorizationResultEnum@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="node">Document node</param>
            <param name="permissionName">Permission name</param>
            <param name="authorized">Authorization result</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAuthorizationHandler.StartEvent(CMS.SiteProvider.UserInfo,System.Data.DataSet@,System.String)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="ds">DataSet with the data</param>
            <param name="permissionName">Permission name</param>
        </member>
        <member name="T:CMS.TreeEngine.DocumentEventArgs">
            <summary>
            Document event arguments
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentEventArgs.TreeProvider">
            <summary>
            Tree provider
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentEventArgs.Node">
            <summary>
            Document node
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentEventArgs.Attachment">
            <summary>
            Attachment, where is makes sense: SaveAttachment, DeleteAttachment
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentEventArgs.TargetParentNodeID">
            <summary>
            Target parent node ID, initialized for operations where it makes sense: Copy, Move, Insert
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentEventArgs.IncludeChildren">
            <summary>
            If true the children are included within the operation where it makes sense: Copy
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentEventArgs.Content">
            <summary>
            Document content, used only when it makes sense: GetContent
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentEvents">
            <summary>
            Document events
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.Update">
            <summary>
            Fires when document is updated
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.Insert">
            <summary>
            Fires when new document is created
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.InsertNewCulture">
            <summary>
            Fires when new culture version of document is created
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.InsertLink">
            <summary>
            Fires when new document link is created
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.Delete">
            <summary>
            Fires when document is deleted
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.Move">
            <summary>
            Fires when document is moved
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.Copy">
            <summary>
            Fires when document is copied
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.GetContent">
            <summary>
            Fires when the content of the document for searching is requested
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.SaveAttachment">
            <summary>
            Fires when document attachment is saved
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.DeleteAttachment">
            <summary>
            Fires when document attachment is deleted
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.AuthorizeDocument">
            <summary>
            Fires when the permission for particular document is avaluated
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentEvents.FilterDataSetByPermissions">
            <summary>
            Fires when the given DataSet should be filtered according to the user permissions
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentHandler">
            <summary>
            Document handler
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentHandler.StartEvent(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentHandler.StartEvent(CMS.TreeEngine.TreeNode,CMS.TreeEngine.AttachmentInfo,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="attachment">Attachment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentHandler.StartEvent(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="targetParentNodeId">Target parent node ID, initialized for operations where it makes sense: Copy, Move, Insert</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentHandler.StartEvent(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Tree node (document)</param>
            <param name="targetParentNodeId">Target parent node ID, initialized for operations where it makes sense: Copy, Move, Insert</param>
            <param name="includeChildNodes">If true the children are included within the operation where it makes sense: Copy</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="T:CMS.TreeEngine.SimpleDocumentHandler">
            <summary>
            Simple document handler
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.SimpleDocumentHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.SimpleDocumentHandler.#ctor(CMS.TreeEngine.SimpleDocumentHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.TreeEngine.SimpleDocumentHandler.StartEvent(CMS.TreeEngine.TreeNode,System.String@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="node">Document node</param>
            <param name="content">Content of the document to used by the search index</param>
        </member>
        <member name="F:CMS.TreeEngine.RelationshipListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipListInfo.#ctor">
            <summary>
            Constructor - Creates an empty RelationshipListInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RelationshipListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.TreeEngine.AclInfo">
            <summary>
            AclInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AclInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AclInfo.#ctor">
            <summary>
            Constructor - Creates an empty AclInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AclInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AclInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AclInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.TreeEngine.AclInfo.ACLOwnerNodeID">
            <summary>
            ACL owner node ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclInfo.ACLInheritedACLs">
            <summary>
            ACL inherited ACLs.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclInfo.ACLID">
            <summary>
            ACL ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclInfo.ACLSiteID">
            <summary>
            ACL site ID.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.AclItemInfo">
            <summary>
            AclItemInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AclItemInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AclItemInfo.#ctor">
            <summary>
            Constructor - Creates an empty AclItemInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AclItemInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AclItemInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AclItemInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.TreeEngine.AclItemInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclItemInfo.ACLItemID">
            <summary>
            ACL item ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclItemInfo.ACLID">
            <summary>
            ACL ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclItemInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclItemInfo.LastModifiedByUserID">
            <summary>
            Last modified by user ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclItemInfo.Denied">
            <summary>
            Denied value representing denied permissions.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.AclItemInfo.Allowed">
            <summary>
            Allowed value representing allowed permissions.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.AclProvider">
            <summary>
            ACL management provider.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AclProvider.PERMISSIONS_UNDEFINED">
            <summary>
            Indicates that permission won't be changed.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AclProvider.mTreeProvider">
            <summary>
            TreeProvider to use for DB access.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.#ctor(CMS.TreeEngine.TreeProvider)">
            <summary>
            Constructor.
            </summary>
            <param name="treeProvider">TreeProvider instance</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetACLItems(System.Int32)">
            <summary>
            Returns DataSet containing all ACL items related to the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetACLItems(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet containing all ACL items related to the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetACLItems(System.Int32,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns DataSet containing all ACL items related to the specified node. (The inherited ACL items are not included.).
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
            <param name="includeInherited">If true, includes the inherited ACLs to the list</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetACLItems(System.Int32,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns DataSet containing all ACL items related to the specified ACL and user.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetACLItems(System.Int32,CMS.SiteProvider.UserInfo,System.Int32)">
            <summary>
            Returns DataSet containing all ACL items related to the specified ACL and user.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="userInfo">UserInfo instance</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetACLItems(CMS.TreeEngine.TreeNode,CMS.SiteProvider.UserInfo,System.Int32)">
            <summary>
            Returns DataSet containing ACL items related to the specified node and relevant for given user account (and its roles).
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">UserInfo instance</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.InvalidateACLItems(System.Int32,CMS.TreeEngine.TreeNode)">
            <summary>
            Invalidates ACLs per tree node for given user on given site.
            </summary>
            <param name="userId">User identifier</param>
            <param name="treeNode">Tree node</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.RestoreInheritance(CMS.TreeEngine.TreeNode)">
            <summary>
            Restores inheritance from the parent node and combines parent permissions with original native permissions.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.BreakInherintance(CMS.TreeEngine.TreeNode,System.Boolean)">
            <summary>
            Removes permission inheritance of the selected node.
            </summary>
            <param name="node">Document node</param>
            <param name="copyParentPermissions">Indicates if parent permissions should be copied to the node</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.ClearACLItems(System.Int32)">
            <summary>
            Clears ACL items.
            </summary>
            <param name="aclId">ACL ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.SetUserPermissions(CMS.TreeEngine.TreeNode,System.Int32,System.Int32,CMS.SiteProvider.UserInfo)">
            <summary>
            Sets specified Allowed and Denied permissions to the specified user for given node.
            </summary>
            <param name="node">Document node</param>
            <param name="allowed">Allowed permissions</param>
            <param name="denied">Denied permissions</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.SetRolePermissions(CMS.TreeEngine.TreeNode,System.Int32,System.Int32,System.Int32)">
             <summary>
             Sets specified Allowed and Denied permissions to the specified role for given node.
             </summary>
             <param name="node">Document node</param>
             <param name="allowed">Allowed permissions</param>
             <param name="denied">Denied permissions</param>
            <param name="roleId">Role ID.</param>    
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.EnsureOwnAcl(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns ACLID of the given node. If the node doesn't have its own ACL, it creates a new one.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.RemoveAclIds(CMS.TreeEngine.TreeNode,System.String)">
            <summary>
            Removes specified ACLID values from the ACLs of the specified node and its child nodes.
            </summary>
            <param name="node">Parent document node</param>
            <param name="removeIDs">List of ACLID values to be removed separated with comma (,)</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.ChangeACLID(System.Int32,System.String,System.Int32)">
            <summary>
            Changes the ACLID within the subtree defined by path.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="path">Alias path of node, whose ACL ID will be changed(including node childs)</param>
            <param name="newId">New ACLID</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.RemoveUser(System.Int32,CMS.SiteProvider.UserInfo)">
            <summary>
            Removes specified user from the ACL of the given node if the user has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.RemoveRole(System.Int32,System.Int32)">
            <summary>
            Removes specified role from the ACL of the given node if the role has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="roleId">Role ID</param>    
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetNodeAndAcl(System.Int32)">
            <summary>
            Returns a datarow containing node data and ACL data.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetNodeAndAcl(System.Int32,System.String)">
            <summary>
            Returns a datarow containing node data and ACL data.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.DoesNodeInheritPermissions(System.Int32)">
            <summary>
            Returns true if specified node inherits permissions.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.ClearPermissions(System.Int32,System.Int32)">
            <summary>
            Clears permissions of the specified node(s) and sets their ACLID to the specified value.
            </summary>
            <param name="nodeId">Node ID</param>        
            <param name="newAclId">New ACLID value</param>        
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.CopyAcl(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeNode,System.Boolean)">
            <summary>
            Copies document permissions including the parent document permissions to the target document.
            </summary>
            <param name="sourceNode">Source document</param>
            <param name="targetNode">Target document</param>
            <param name="preserveAclHierarchy">Indicates if target acl should be same as source</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetAllowedRoles(System.Int32,CMS.TreeEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of roles with allowed particular node permission.
            </summary>
            <param name="aclId">ACLID</param>
            <param name="permission">Permission to check</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetAllowedUsers(System.Int32,CMS.TreeEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of roles with allowed particular node permission.
            </summary>
            <param name="aclId">ACLID</param>
            <param name="permission">Permission to check</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetAllowedItems(System.String,System.Int32,CMS.TreeEngine.NodePermissionsEnum,System.String)">
            <summary>
            Returns DataSet of specified objects with allowed particular node permission.
            </summary>
            <param name="objectType">Object type</param>
            <param name="aclId">ACL ID</param>
            <param name="permission">Node permission</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.HasOwnACL(CMS.TreeEngine.TreeNode)">
            <summary>
            Check if node has own ACL.
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.MergeACLs(System.String,System.Int32)">
            <summary>
            Merges ACL items with given ACL.
            </summary>
            <param name="inheritedACLs">ACLs</param>
            <param name="aclId">ACL</param>
            <returns>String with merged ACLs</returns>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.SetOperatorPermissions(CMS.TreeEngine.TreeNode,System.Int32,System.Int32,CMS.SiteProvider.UserInfo,System.Int32)">
            <summary>
            Sets specified Allowed and Denied permissions to the specified user or role for given node.
            </summary>
            <param name="node">Document node</param>
            <param name="allowed">Allowed permissions</param>
            <param name="denied">Denied permissions</param>
            <param name="userInfo">UserInfo instance. ...If you specify roleId value, this value must be zero</param>        
            <param name="roleId">Role ID. If you specify UserInfo, this value must be zero</param>        
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.PropagateAclId(CMS.TreeEngine.TreeNode,System.Int32,System.Int32,System.String)">
            <summary>
            Propagates given ACLID to all underlying nodes that inherit from the specified node.
            </summary>
            <param name="node">Parent document node</param>
            <param name="oldAclId">Original ACLID that will be replaced with new ACLID</param>
            <param name="aclId">New ACLID to be propagated</param>
            <param name="extraAclIds">Additional ACLID values that should be optionally added to the InheritedACLs property of the child ACLs</param>    
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetOperatorNativeAclItems(System.Int32,CMS.SiteProvider.UserInfo,System.Int32)">
            <summary>
            Returns DataSet containing user's native ACL Items for given node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance. If roleId value is specified, this value must be null</param>
            <param name="roleId">Role ID. If userId value is specified, this value must be zero</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetOperatorNativeAclItems(System.Int32,CMS.SiteProvider.UserInfo,System.Int32,System.String)">
            <summary>
            Returns DataSet containing user's native ACL Items for given node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance. If roleId value is specified, this value must be null</param>
            <param name="roleId">Role ID. If userId value is specified, this value must be zero</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.RemoveOperator(System.Int32,CMS.SiteProvider.UserInfo,System.Int32)">
            <summary>
            Removes specified user or role (operator) from the ACL of the given node if the operator has a native ACL Item for that node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="userInfo">UserInfo instance. If roleId value is specified, this value must be null</param>
            <param name="roleId">Role ID. If userId value is specified, this value must be zero</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetACLItemsInternal(System.String,CMS.SiteProvider.UserInfo,System.Int32)">
            <summary>
            Returns DataSet containing ACL items related to the specified ACLs.
            </summary>
            <param name="aclIDs">List of ACL IDs separated by ';'</param>
            <param name="userInfo">UserInfo instance</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.GetACLItemsKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns key for retrieving ACL items from request.
            </summary>
            <param name="userId">User identifier</param>
            <param name="aclId">ACL identifier</param>
            <param name="siteId">Site ID</param>
            <returns>Key to retrieve ACL items from request</returns>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.HasOwnACL(System.Int32,System.Data.DataRow)">
            <summary>
            Check if node has own ACL.
            </summary>
            <param name="nodeId">Node id</param>
            <param name="dr">Data row containing ACLOwnerNodeID column</param>
        </member>
        <member name="M:CMS.TreeEngine.AclProvider.DoesNodeInheritPermissions(System.Data.DataRow)">
            <summary>
            Returns true if specified node inherits permissions.
            </summary>
            <param name="drNodeAcl">Data row containing NodeID, ACLOwnerNodeID and ACLInheritedACLs column</param>
        </member>
        <member name="P:CMS.TreeEngine.AclProvider.TreeProvider">
            <summary>
            TreeProvider instance.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.AuthorizationResultEnum">
            <summary>
            Enumeration of the user authorization result.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AuthorizationResultEnum.Allowed">
            <summary>
            Allowed.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AuthorizationResultEnum.Denied">
            <summary>
            Denied.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.AuthorizationResultEnum.Insignificant">
            <summary>
            Insignificant, does not influence other authorization results.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentInfo">
            <summary>
            DocumentInfo class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentInfo.TYPEINFO">
            <summary>
            Type information (Not complete - some information is missing).
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>        
        </member>
        <member name="M:CMS.TreeEngine.DocumentInfo.GetInstance">
            <summary>
            Creates instance of object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentInfo.GetChildWhereCondition(System.String,System.String)">
            <summary>
            Gets the child object where condition.
            </summary>
            <param name="where">Original where condition</param>
            <param name="objectType">Object type of the child object</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentInfo.GetChildObject(System.String)">
            <summary>
            Gets child object info
            </summary>
            <param name="objectType">Child object type</param>
        </member>
        <member name="T:CMS.TreeEngine.DocumentAliasInfo">
            <summary>
            DocumentAliasInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentAliasInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>      
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentAliasInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentAliasInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasGUID">
            <summary>
            Alias GUID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasLastModified">
            <summary>
            Alias last modified.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasNodeID">
            <summary>
            Node ID of alias.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasCampaign">
            <summary>
            Alias campaign.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasExtensions">
            <summary>
            Alias extensions.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasID">
            <summary>
            Alias ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasCulture">
            <summary>
            Alias culture.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasURLPath">
            <summary>
            Alias URL path.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasWildcardRule">
            <summary>
            Alias wildcard rule.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasPriority">
            <summary>
            Alias priority.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentAliasInfo.AliasSiteID">
            <summary>
            Alias Site ID.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentAliasInfoProvider">
            <summary>
            Class providing DocumentAliasInfo management.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.GetDocumentAliasInfo(System.Int32)">
            <summary>
            Returns the DocumentAliasInfo structure for the specified documentAlias.
            </summary>
            <param name="documentAliasId">DocumentAlias id</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.GetDocumentAliases(System.String,System.Int32)">
            <summary>
            Returns the DataSet with document alises matching specified wildcar rule.
            </summary>
            <param name="url">Wildcard URL</param>     
            <param name="siteID">Site id</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.GetDocumentAliases(System.String,System.String)">
            <summary>
            Returns the DataSet with document alises according to WHERE condition ordered.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY condition</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.GetDocumentAliases(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the DataSet with document alises according to WHERE condition ordered.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY condition</param>
            <param name="topN">Get top N rows</param>
            <param name="columns">Columns to select</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.GetDocumentAliasList(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the DataSet with document aliases from the View_CMS_DocumentAlias_Joined view
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY condition</param>
            <param name="topN">Get top N rows</param>
            <param name="columns">Columns to select</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.DocumentAliasExists(CMS.TreeEngine.DocumentAliasInfo)">
            <summary>
            Returns true if the alias with the same settings as the given alias already exists.
            </summary>
            <param name="dai">Document alias to check</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.SetDocumentAliasInfo(CMS.TreeEngine.DocumentAliasInfo,System.String)">
            <summary>
            Sets (updates or inserts) specified documentAlias.
            </summary>
            <param name="documentAlias">DocumentAlias to set</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.DeleteDocumentAliasInfo(CMS.TreeEngine.DocumentAliasInfo)">
            <summary>
            Deletes specified documentAlias.
            </summary>
            <param name="infoObj">DocumentAlias object</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.DeleteDocumentAliasInfo(System.Int32)">
            <summary>
            Deletes specified documentAlias.
            </summary>
            <param name="documentAliasId">DocumentAlias id</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.DeleteNodeAliases(System.Int32)">
            <summary>
            Deletes node aliases for given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentAliasInfoProvider.CreateWildcardRule(System.String,System.Int32@)">
            <summary>
            Creates wildcard rule for given url.
            </summary>
            <param name="wildcardUrl">Wildcard url</param>
            <param name="wildcardCount">Number of matches</param>
        </member>
        <member name="T:CMS.TreeEngine.DocumentCategoryInfo">
            <summary>
            DocumentCategoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentCategoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentCategoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentCategoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentCategoryInfo.CategoryID">
            <summary>
            Category ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentCategoryInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentCategoryInfoProvider">
            <summary>
            Class providing DocumentCategoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.GetDocumentCategoryInfo(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentCategoryInfo structure for the specified documentCategory.
            </summary>
            <param name="categoryId">CategoryID</param>
            <param name="documentId">DocumentID</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.SetDocumentCategoryInfo(CMS.TreeEngine.DocumentCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified documentCategory.
            </summary>
            <param name="documentCategory">DocumentCategory to set</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.DeleteDocumentCategoryInfo(CMS.TreeEngine.DocumentCategoryInfo)">
            <summary>
            Deletes specified documentCategory.
            </summary>
            <param name="infoObj">DocumentCategory object</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.DeleteDocumentCategoryInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified documentCategory.
            </summary>
            <param name="categoryId">CategoryID</param>
            <param name="documentId">DocumentID</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.AddDocumentToCategory(System.Int32,System.Int32)">
            <summary>
            Adds document (post) to the specified category.
            </summary>
            <param name="documentId">ID of document</param>
            <param name="categoryId">ID of category</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategory(System.Int32,System.Int32)">
            <summary>
            Removes document from category.
            </summary>
            <param name="documentId">ID of document</param>
            <param name="categoryId">ID of category</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategories(System.Int32)">
            <summary>
            Removes document from all categories.
            </summary>
            <param name="documentId">ID of document</param>        
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.RemoveDocumentFromCategories(System.Int32,System.Boolean)">
            <summary>
            Removes document from all categories.
            </summary>
            <param name="documentId">ID of document</param>        
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.GetDocumentCategories(System.String,System.String)">
            <summary>
            Returns all the DocumentCategories.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by condition</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentCategoryInfoProvider.SetCategoryCount(System.Int32)">
            <summary>
            Sets the number of documents associated to given category.
            </summary>
            <param name="categoryId">Category ID</param>
        </member>
        <member name="T:CMS.TreeEngine.DocumentOrderEnum">
            <summary>
            Document order enumeration (for new document).
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentOrderEnum.Unknown">
            <summary>
            Unknown order.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentOrderEnum.Alphabetical">
            <summary>
            Alphabetical order.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentOrderEnum.First">
            <summary>
            First document.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentOrderEnum.Last">
            <summary>
            Last document.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentTagInfo">
            <summary>
            DocumentTagInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.DocumentTagInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentTagInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentTagInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentTagInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.DocumentTagInfo.TagID">
            <summary>
            Tag ID.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.DocumentTagInfoProvider">
            <summary>
            Class providing DocumentTagInfo management.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.GetDocumentTagInfo(System.Int32,System.Int32)">
            <summary>
            Returns the DocumentTagInfo structure for the specified documentTag.
            </summary>
            <param name="documentId">DocumentID</param>
            <param name="tagId">TagID</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.AddTagToDocument(System.Int32,System.Int32)">
            <summary>
            Adds the specific tag to the specified document.
            </summary>
            <param name="tagId">ID of the tag to add</param>
            <param name="documentId">ID of the document the tag is added for</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.RemoveTagFromDocument(System.Int32,System.Int32)">
            <summary>
            Removes tag from the specified document.
            </summary>
            <param name="tagId">ID of the removed tag</param>
            <param name="documentId">ID of the document tag is removed from</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.RemoveTags(System.Int32)">
            <summary>
            Removes all the tags from related to the specified document.
            </summary>        
            <param name="documentId">ID of the document tags are removed from</param>        
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.RemoveTags(System.Int32,System.Int32,System.String)">
            <summary>
            Removes a specified tags from specified group and specified document.
            </summary>
            <param name="groupId">ID of the group holding tags to remove</param>
            <param name="documentId">ID of the document tags are removed from</param>
            <param name="tags">Set of tags to remove</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.AddTags(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts a specified tags of the specified group to the specified document.
            </summary>
            <param name="groupId">ID of the group inserted tags belongs to</param>
            <param name="documentId">ID of the document tags are inserted to</param>
            <param name="tags">Set of tags to insert</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.SetDocumentTagInfo(CMS.TreeEngine.DocumentTagInfo)">
            <summary>
            Sets (updates or inserts) specified documentTag.
            </summary>
            <param name="documentTag">DocumentTag to set</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.DeleteDocumentTagInfo(CMS.TreeEngine.DocumentTagInfo)">
            <summary>
            Deletes specified documentTag.
            </summary>
            <param name="infoObj">DocumentTag object</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.DeleteDocumentTagInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified documentTag.
            </summary>
            <param name="documentId">DocumentID</param>
            <param name="tagId">TagID</param>
        </member>
        <member name="M:CMS.TreeEngine.DocumentTagInfoProvider.GetTagsArray(System.String)">
            <summary>
            Gets tags as an array filtering the multiple occurrence of particular tags.
            </summary>
            <param name="tags">Tags string</param>        
        </member>
        <member name="P:CMS.TreeEngine.DocumentTagInfoProvider.TagsRegex">
            <summary>
            Regular expression for tags.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.EditableItems">
            <summary>
            Editable items container.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.EditableItems.mEditableRegions">
            <summary>
            Collection of the editable regions contents.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.EditableItems.mEditableWebParts">
            <summary>
            Collection of the editable web parts contents.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.EditableItems.LoadContentXml(System.String)">
            <summary>
            Loads the content XML to the content table.
            </summary>
            <param name="contentXml">Content XML to load</param>
        </member>
        <member name="M:CMS.TreeEngine.EditableItems.GetContentXml">
            <summary>
            Returns the xml code of the document contents (Editable regions, web parts).
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.EditableItems.Clone">
            <summary>
            Returns the cloned object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.EditableItems.GetValue(System.String)">
            <summary>
            Gets the value of specific field.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.TreeEngine.EditableItems.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of specific field.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.TreeEngine.EditableItems.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries to get the value of specific column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns value</param>
        </member>
        <member name="M:CMS.TreeEngine.EditableItems.ContainsColumn(System.String)">
            <summary>
            Returns true if the structure contains specific column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.TreeEngine.EditableItems.EditableRegions">
            <summary>
            Editable regions contained within the document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.EditableItems.EditableWebParts">
            <summary>
            Editable WebParts contained within the document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.EditableItems.Item(System.String)">
            <summary>
            Returns the editable value.
            </summary>
            <param name="controlId">Control ID</param>
        </member>
        <member name="P:CMS.TreeEngine.EditableItems.CMS#SettingsProvider#ISimpleDataContainer#Item(System.String)">
            <summary>
            Gets or sets the field value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.TreeEngine.EditableItems.ColumnNames">
            <summary>
            Returns the available column names.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.NodePermissionsEnum">
            <summary>
            Node permissions enumeration.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodePermissionsEnum.Read">
            <summary>
            Read permission.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodePermissionsEnum.Modify">
            <summary>
            Modify permission.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodePermissionsEnum.Create">
            <summary>
            Creates permission.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodePermissionsEnum.Delete">
            <summary>
            Delete permission.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodePermissionsEnum.Destroy">
            <summary>
            Destroy permission.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodePermissionsEnum.ExploreTree">
            <summary>
            Explore tree permission.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.NodePermissionsEnum.ModifyPermissions">
            <summary>
            Permission to change document permissions.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeEngineModule">
            <summary>
            Moduel registration.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeEngineModule.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeEngineModule.ProcessCommand(System.String,System.Object[])">
            <summary>
            Processes the specified command.
            </summary>
            <param name="commandName">Command name</param>
            <param name="parameters">Command parameters</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeEngineModule.GetSearchDocuments(System.Object[])">
            <summary>
            Returns collection of search documents.
            </summary>
            <param name="parameters">Method parameters</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeEngineModule.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.TreeEngine.TreeObjectType">
            <summary>
            Tree engine object types.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.NODE">
            <summary>
            Node.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.DOCUMENT">
            <summary>
            Document.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.USERDOCUMENTSLIST">
            <summary>
            User documents list.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.ACL">
            <summary>
            ACL.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.ACLITEM">
            <summary>
            ACL item.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.RELATIONSHIP">
            <summary>
            Document relationship.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.RELATIONSHIPLIST">
            <summary>
            Document relationship list.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.DOCUMENTALIAS">
            <summary>
            Document alias.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.DOCUMENTCATEGORY">
            <summary>
            Document-category relationship.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.DOCUMENTTAG">
            <summary>
            Document tag.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.ATTACHMENT">
            <summary>
            Code name for attachment info.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeObjectType.FILESYSTEMMAP">
            <summary>
            Code name for filesystem map info.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeObjectType.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.TreeEngine.RelationshipProvider">
            <summary>
            Relationship management methods.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.SetRelationshipInfo(CMS.TreeEngine.RelationshipInfo)">
            <summary>
            Sets relationship info object.
            </summary>
            <param name="relationship">Relationship info</param>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.GetRelationshipInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets relationship info object.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.AddRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the relationship for two nodes.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.RemoveRelationship(CMS.TreeEngine.RelationshipInfo)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="relationshipInfo">Relationship object</param>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.RemoveRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes the relationship between two nodes.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.RelationshipExists(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check whether relationship between two nodes already exists.
            </summary>
            <param name="leftNodeId">ID of left node</param>
            <param name="rightNodeId">ID of right node</param>
            <param name="relationshipNameId">ID of relationship name</param>
            <returns>Returns true if the relationship between two nodes already exists</returns>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.GetRelationships(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns the relationships DataSet for specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, returns the relationships where node is located on the left side</param>
            <param name="nodeRight">If true, returns the relationships where node is located on the right side</param>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.GetRelationships(System.Int32,System.Boolean,System.Boolean,System.String,System.Int32,System.String)">
            <summary>
            Returns the relationships DataSet for specified node.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, returns the relationships where node is located on the left side</param>
            <param name="nodeRight">If true, returns the relationships where node is located on the right side</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipProvider.DeleteRelationships(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Deletes the node relationships.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="nodeLeft">If true, relationships with node on the left side are deleted</param>
            <param name="nodeRight">If trye, relationships with node on the right side are deleted</param>
        </member>
        <member name="T:CMS.TreeEngine.RelationshipInfo">
            <summary>
            RelationshipInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.RelationshipInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.RelationshipInfo.mRelationshipCustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipInfo.#ctor">
            <summary>
            Constructor - Creates an empty RelationshipInfo object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.RelationshipInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RelationshipInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.RelationshipInfo.RightNodeId">
            <summary>
            Right node ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.RelationshipInfo.RelationshipNameId">
            <summary>
            Relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.RelationshipInfo.LeftNodeId">
            <summary>
            Left node ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.RelationshipInfo.RelationshipCustomData">
            <summary>
            Relationship custom data.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeNode">
            <summary>
            Represents a node in the tree.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.EMPTY_NODE">
            <summary>
            Empty tree node for system purposes.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mWildcardRegex">
            <summary>
            Contains compiled regular expression for wildcard macro.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mTreeProvider">
            <summary>
            Tree provider object to use for the database access.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mClassName">
            <summary>
            Node class name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mTreeClass">
            <summary>
            Inner CMS_Tree table record.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mDocumentClass">
            <summary>
            Inner CMS_Document table record.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mCoupleClass">
            <summary>
            Inner coupled table record.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mSKUClass">
            <summary>
            Inner SKU table record.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalNodeAlias">
            <summary>
            Original node alias.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalNodeAliasPath">
            <summary>
            Original node alias path.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalNodeParentID">
            <summary>
            Original node parent ID.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalSiteID">
            <summary>
            Original parent node ID.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalDocumentName">
            <summary>
            Original document name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalNodeLevel">
            <summary>
            Original node level.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalNodeSKUID">
            <summary>
            Original node SKU (product) ID.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalNodeName">
            <summary>
            Original node name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalDocumentTags">
            <summary>
            Original document tags.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalDocumentTagsGroup">
            <summary>
            Original document tags group.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalDocumentExtensions">
            <summary>
            Original document extensions.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalDocumentUrlPath">
            <summary>
            Original document url path.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalDocumentPageTemplateID">
            <summary>
            Original page template ID.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mOriginalValuesLoaded">
            <summary>
            If true, the original node values were loaded.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mNodeCustomData">
            <summary>
            Node custom data.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mDocumentCustomData">
            <summary>
            Document custom data.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mDocumentContent">
            <summary>
            Document editable content.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mWorkflowStepName">
            <summary>
            Workflow step name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mIsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mParent">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mConnectedDocuments">
            <summary>
            Connected documents.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mConnectedObjects">
            <summary>
            Connected objects.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mRelatedDocuments">
            <summary>
            Related documents.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mProperties">
            <summary>
            Hashtable of properties of all object types, pairs [object type -> properties]
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mStatus">
            <summary>
            Status of the object.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeNode.mDisconnectedCount">
            <summary>
            Number of disconnected references for this collection 
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetRelationshipNames">
            <summary>
            Gets the relationship names used by the document
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.RelatedDocuments_OnLoadCollection(CMS.SettingsProvider.ObjectRepository{CMS.TreeEngine.TreeNodeCollection,CMS.TreeEngine.TreeNode},System.String)">
            <summary>
            Handler to provide the related document collection.
            </summary>
            <param name="repository">Parent repository</param>
            <param name="name">Collection name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetRelatedDocumentsCollection(CMS.SettingsProvider.ObjectRepository{CMS.TreeEngine.TreeNodeCollection,CMS.TreeEngine.TreeNode},System.String,System.Boolean,System.Boolean)">
            <summary>
            Handler to provide the related document collection.
            </summary>
            <param name="repository">Parent repository</param>
            <param name="name">Collection name</param>
            <param name="documentIsOnLeftSide">If true, the document can be on left side of the relationship</param>
            <param name="documentIsOnRightSide">If true, the document can be on left side of the relationship</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.#ctor">
            <summary>
            Empty constructor, allowed only if Initialize is called immediately after it.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Initialize(System.Data.DataRow,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing node from data row.
            </summary>
            <param name="dataRow">Data row containing all tree node, document and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Initialize(CMS.SettingsProvider.IDataContainer,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initializes the object created with default constructor. Use it to load existing node from data row.
            </summary>
            <param name="data">Data container containing all tree node, document and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.#ctor(System.String)">
            <summary>
            Constructor. Use it to create a new node.
            </summary>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.#ctor(System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Constructor. Use it to create a new node.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.#ctor(System.Data.DataRow,System.String)">
            <summary>
            Constructor. Use it to load existing node from data row.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.#ctor(System.Data.DataRow,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Constructor. Use it to load existing node from data row.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.EnsureDefaultValues">
            <summary>
            Sets the document default values
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.NewInstanceFromDataRow(System.Data.DataRow,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            This method is used by constructor to load data from provided datarow and split them into internal classes.
            </summary>
            <param name="dataRow">Provided datarow containing all columns</param>
            <param name="className">Class name in format application.class</param>
            <param name="existingTreeProvider">Existing instance of TreeProvider</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.NewInstanceFromDataContainer(CMS.SettingsProvider.IDataContainer,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            This method is used by constructor to load data from provided data container and split them into internal classes.
            </summary>
            <param name="data">Provided data container containing all columns</param>
            <param name="className">Class name in format application.class</param>
            <param name="existingTreeProvider">Existing instance of TreeProvider</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.New(System.String)">
            <summary>
            Creates new TreeNode instance which must inherit the TreeNode class.
            </summary>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.New(System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new TreeNode instance which must inherit the TreeNode class.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.New(System.Data.DataRow,System.String)">
            <summary>
            Creates new TreeNode instance which must inherit the TreeNode class.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.New(System.Data.DataRow,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new TreeNode instance which must inherit the TreeNode class.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.New``1(System.Data.DataRow,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new document instance.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.New``1(CMS.SettingsProvider.IDataContainer,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new document instance.
            </summary>
            <param name="data">Data container containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns value of property.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.HasAutomaticProperty(System.String)">
            <summary>
            Returns true if the given column provides an automatic property to access it's binding.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetProperty(System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetValue(System.String)">
            <summary>
            Returns value of the specified node column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the specified node column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.ContainsColumn(System.String)">
            <summary>
            Returns true if the document contains specified column.
            </summary>
            <param name="columnName">Column to check</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.SetIntegerValue(System.String,System.Int32,System.Boolean)">
            <summary>
            Sets the integer value of the Tree node.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
            <param name="allowZero">If true, only positive values are valid</param>
            <returns>Returns true if the value was changed</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetIntegerValue(System.String)">
            <summary>
            Gets the integer value from the node.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.ItemChanged(System.String)">
            <summary>
            Returns true if the item on specified column name changed.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetOriginalValue(System.String)">
            <summary>
            Gets the original value of the given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.ResetChanges">
            <summary>
            Resets the object changes and keeps the new values as unchanged.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.RevertChanges">
            <summary>
            Reverts the object changes and keeps the new values as unchanged.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.MakeComplete(System.Boolean)">
            <summary>
            Makes the object data complete.
            </summary>
            <param name="loadFromDb">If true, the data to complete the object is loaded from database</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.DataChanged">
            <summary>
            Returns true if the object changed.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.DataChanged(System.String)">
            <summary>
            Returns true if the object changed.
            </summary>
            <param name="excludedColumns">List of columns excluded from change (separated by ';')</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Insert(System.Int32)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Insert(System.Int32,System.Boolean)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="useDocumentHelper">Use document helper</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Insert(CMS.TreeEngine.TreeNode,System.Boolean)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parent">Parent node</param>
            <param name="useDocumentHelper">Use document helper</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Insert(CMS.TreeEngine.TreeNode)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parent">Parent node</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.InsertAsNewCultureVersion(System.Boolean)">
            <summary>
            Inserts current node as a new culture version of the specified document.
            </summary>
            <param name="useDocumentHelper">Use document helper</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.InsertAsNewCultureVersion">
            <summary>
            Inserts current node as a new culture version of the specified document.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.InsertAsLink(System.Int32)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.InsertAsLink(System.Int32,System.Boolean)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="useDocumentHelper">Use document helper</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.InsertAsLink(CMS.TreeEngine.TreeNode)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parent">Parent node</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.InsertAsLink(CMS.TreeEngine.TreeNode,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parent">Parent node</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="useDocumentHelper">If true, the document helper is used</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.InsertAsLink(CMS.TreeEngine.TreeNode,System.Int32,System.Int32)">
            <summary>
            Inserts current node under specified parent node as a document link.
            </summary>
            <param name="parent">Parent node</param>
            <remarks>Use this method only for creating a new node linked to existing document (the node must be existing document). The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Update(System.Boolean)">
            <summary>
            Updates node data in the database.
            </summary>
            <param name="useDocumentHelper">Use document helper</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Update">
            <summary>
            Updates node data in the database.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.SubmitChanges(System.Boolean,CMS.TreeEngine.TreeNode)">
            <summary>
            Submits the changes in the object to the database.
            </summary>
            <param name="withChildren">If true, also submits the changes in the children of the object</param>
            <param name="parentDocument">Parent document, needed for new documents</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.DeleteAllCultures">
            <summary>
            Deletes all the culture versions of the specified node including the child nodes.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Destroy">
            <summary>
            Destroys the document with its version history
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Delete">
            <summary>
            Deletes node from the database. If node is last node culture version, deletes also the child nodes of all culture versions.
            </summary>
            <remarks>If deleted node is the root node it will not be deleted. Only child nodes will be deleted and no exception will be thrown.</remarks>
            <returns>Returns true if last culture (Tree record) has been deleted</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Delete(System.Boolean,System.Boolean)">
            <summary>
            Deletes the document to the recycle bin. Deletes only this culture version of the document to the recycle bin, including the bound product
            </summary>
            <param name="preserveData">Preserve the document data</param>
            <param name="useDocumentHelper">If true, the document helper is used</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Delete(System.Boolean)">
            <summary>
            Deletes node from the database. If node is last node culture version, deletes also the child nodes of all culture versions.
            </summary>
            <param name="preserveData">Preserve the document data</param>
            <remarks>If deleted node is the root node it will not be deleted. Only child nodes will be deleted and no exception will be thrown.</remarks>
            <returns>Returns true if last culture (Tree record) has been deleted</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.CreateDefaultSKU">
            <summary>
            Creates default E-Commerce SKU for the document if configured, does not save the document. Returns true on success, false on error or null when module entry not found.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.ChangeToLink(System.Int32)">
            <summary>
            Changes the document node to the link to another document.
            </summary>
            <param name="linkedNodeId">Node to link</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.EnsureOriginalValues">
            <summary>
            Ensures that the original node values are loaded.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UpdateOriginalValues">
            <summary>
            Updates the node original values.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Clone``1">
            <summary>
            Returns the cloned node object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Clone">
            <summary>
            Returns the cloned node object.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.LoadInheritedValues(System.String[])">
            <summary>
            Loads the inherited values to the node.
            </summary>
            <param name="columns">Columns to load</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.LoadInheritedValues(System.String[],System.Boolean)">
            <summary>
            Loads the inherited values to the node.
            </summary>
            <param name="columns">Columns to load</param>
            <param name="allCultures">All cultures</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetInheritedValue(System.String,System.Boolean)">
            <summary>
            Gets the inherited value for the document.
            </summary>
            <param name="column">Column name</param>
            <param name="allCultures">All cultures</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetSearchID">
            <summary>
            Returns an unique id of current object for search index (documentid;nodeid).
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetSearchDocument(CMS.SettingsProvider.ISearchIndexInfo)">
            <summary>
            Returns iDocument with dependence on current object type and index.
            </summary>
            <param name="info">Search index info</param>        
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.CheckTrackbackStatus">
            <summary>
            Goes through all trackbacks of given blogpost and makes sure that all statuses are corresponding current workflow step.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.MergeTrackbackUrls">
            <summary>
            Compares columns 'BlogPostNotPingedUrls' a 'BlogPostPingedUrls' and copies not pinged urls.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.EnsureBlogPostHierarchy(System.Int32)">
            <summary>
            Ensures that the parent document of the blog post is blog month.
            </summary>
            <param name="currentParentId">ID of the current parent node</param>
            <returns>ID of the new parent (blog month document if CMS.BlogMonth document type exists)</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetDataSet">
            <summary>
            Gets the DataSet of the node data.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetSafeDocumentName(System.String)">
            <summary>
            Replaces back slash in document name.
            </summary>
            <param name="documentName">Document name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetLockObject">
            <summary>
            Gets the global lock object for specified document instance of the node.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetPreviewLink(System.String)">
            <summary>
            Gets document preview link
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetPreviewLink(System.String,System.Boolean)">
            <summary>
            Gets document preview link
            </summary>
            <param name="userName">User name</param>
            <param name="ensureQueryHash">Indicates if query string hash should be added</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Disconnect">
            <summary>
            Disconnects the collection from the database.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Reconnect">
            <summary>
            Reconnects the collection to the database.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.NotSupported(System.String)">
            <summary>
            Throws a not supported exception for the given operation
            </summary>
            <param name="operation">Operation to perform</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.CheckIn(System.String,System.String)">
            <summary>
            Checks-in the document
            </summary>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.CheckOut">
            <summary>
            Checks-out the document
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UndoCheckOut">
            <summary>
            Rolls back the checkout operation of the document
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.MoveToPreviousStep(System.String)">
            <summary>
            Moves the document to a previous step in the worklow (rejects the document)
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.MoveToNextStep(System.String)">
            <summary>
            Moves the document to a next step in the workflow (sends the document to approval, approves or publishes the document based on the current workflow status)
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.Archive(System.String)">
            <summary>
            Archives the document
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetUpperTree(System.String,System.Boolean)">
            <summary>
            Gets the upper tree for given document.
            </summary>
            <param name="columns">Columns to get</param>
            <param name="allCultures">All cultures</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetInheritedValueInternal(System.Data.DataSet,System.String)">
            <summary>
            Returns inherited value.
            </summary>
            <param name="upperTree"></param>
            <param name="column"></param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UpdateSKUColumns">
            <summary>
            Updates the E-Commerce SKU columns with current node data.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UpdateChildNodesCount(System.Int32,System.Int32)">
            <summary>
            Updates the child nodes count of the document.
            </summary>
            <param name="originalParentId">Original parent ID</param>
            <param name="newParentId">New parent ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UpdatePaths(System.String,System.Int32,System.Boolean)">
            <summary>
            Updates the document paths within the tree of documents.
            </summary>
            <param name="siteName">Site name</param>
            <param name="sourceNodeId">Source node ID</param>
            <param name="documentPath">Process document name update</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UpdateDocumentAliases(System.String)">
            <summary>
            Updates the document aliases if the document path changed.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UpdateTags(System.String,System.Boolean,System.Boolean)">
            <summary>
            Update document tag according to tag group only if necessary.
            </summary>
            <param name="sitename">Site name</param>
            <param name="updateInheritedChildTags">Update child tags</param>
            <param name="forceUpdate">Force update of the tags</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UpdateInheritedChildTags(System.String,System.Boolean)">
            <summary>
            Updates the tags of the child documents with inherited tag group.
            </summary>
            <param name="sitename">Site name</param>
            <param name="forceUpdate">Force update of the tags</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.UpdateNodeData">
            <summary>
            Updates the data fields of the document.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.DeleteChildNodes">
            <summary>
            Deletes the child nodes of all culture versions under the specified parent node.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.SendNotifications(System.String)">
            <summary>
            Raises the notificaions events and sends the notifications.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.CreateTrackbackSender">
            <summary>
            Creates scheduled task for pinging trackback URLs in given blog post.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.GetTreeNodeRepository">
            <summary>
            Gets the new repository for the given document.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.RegisterConnectedObjects(CMS.SettingsProvider.InfoObjectRepository)">
            <summary>
            Registers the connected objects for this document.
            </summary>
            <param name="repository">Object repository</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.RegisterConnectedDocuments(CMS.TreeEngine.TreeNodeRepository)">
            <summary>
            Registers the connected documents for this document.
            </summary>
            <param name="repository">Object repository</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.ClearCache">
            <summary>
            Clears the document cache.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.ClearCache(System.String)">
            <summary>
            Clears the document cache.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.ClearOutputCache(System.Boolean)">
            <summary>
            Clears the output cache for current page.
            </summary>
            <param name="allCultures">Clear all cultures cache</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeNode.ClearOutputCache(System.Boolean,System.Boolean)">
            <summary>
            Clears the output cache for current page.
            </summary>
            <param name="allCultures">Clear all cultures cache</param>
            <param name="childNodes">If true, the output cache of the child nodes is cleared as well</param>
        </member>
        <member name="E:CMS.TreeEngine.TreeNode.OnNewNode">
            <summary>
            Fires when the new node is instantiated,.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsDisconnected">
            <summary>
            Returns true if this collection is disconnected from the database
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Status">
            <summary>
            Returns the current status of the object.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Properties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.WildcardRegex">
            <summary>
            Contains compiled regular expression for wildcard macro.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.TreeProvider">
            <summary>
            Tree provider instance used to access data. If no TreeProvider is assigned, a new TreeProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeClassName">
            <summary>
            Class name in format application.class.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsCoupled">
            <summary>
            Returns true if the document contains coupled data.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.HasSKU">
            <summary>
            Returns true if the document contains SKU data.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsLink">
            <summary>
            Returns true if the document is link to another document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.OriginalNodeID">
            <summary>
            Original node ID. Returns NodeID for standard document, LinkedNodeID for linked document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.OriginalNodeSiteID">
            <summary>
            Original node site ID. Returns NodeSiteID for standard document, LinkedNodeSiteID for linked document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeCustomData">
            <summary>
            Node custom data.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentCustomData">
            <summary>
            Document custom data.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentContent">
            <summary>
            Document content.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.CoupledClassIDColumn">
            <summary>
            Returns the name of the coupled class ID column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.SearchType">
            <summary>
            Returns search type.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.HasChanged">
            <summary>
            Returns true if the object changed.
            </summary>        
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsComplete">
            <summary>
            Returns true if the object changed.
            </summary>        
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsDefaultCulture">
            <summary>
            Returns true if the document is in the default culture for the given web site.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Parent">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.ConnectedDocuments">
            <summary>
            Connected documents.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Children">
            <summary>
            Collection of child nodes.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Links">
            <summary>
            Collection of linked nodes, including the original.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.CultureVersions">
            <summary>
            Collection of all culture versions of this document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.ConnectedObjects">
            <summary>
            Connected objects.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Tags">
            <summary>
            Collection of document tags.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Categories">
            <summary>
            Collection of document categories.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.AllAttachments">
            <summary>
            Collection of all document attachments (all field and unsorted).
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Attachments">
            <summary>
            Collection of unsorted document attachments.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Aliases">
            <summary>
            Collection of the document aliases.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.MessageBoards">
            <summary>
            Collection of the message boards for this document
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Forums">
            <summary>
            Collection of the ad-hoc forums for this document
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.RelatedDocuments">
            <summary>
            Related documents.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeDocType">
            <summary>
            Node document type.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeHeadTags">
            <summary>
            Node header tags property - Reflects the "NodeHeadTags" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeBodyElementAttributes">
            <summary>
            Node bode element attributes - attributes of html body tag.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsSecuredNode">
            <summary>
            Node secure property - Reflects the "IsSecuredNode" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.RequiresSSL">
            <summary>
            Node secure property - Reflects the "RequiresSSL" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeName">
            <summary>
            Node name property - Reflects the "NodeName" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeAlias">
            <summary>
            Node alias property - Reflects the "NodeAlias" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeAliasPath">
            <summary>
            Node alias path property - Reflects the "NodeAliasPath" data column - ReadOnly.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeGUID">
            <summary>
            Node GUID property - Reflects the "NodeGUID" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuRedirectUrl">
            <summary>
            Document name - Reflects the "DocumentMenuRedirectUrl" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuJavascript">
            <summary>
            Document name - Reflects the "DocumentMenuJavascript" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentName">
            <summary>
            Document name - Reflects the "DocumentName" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentNamePath">
            <summary>
            Document name path - Reflects the "DocumentNamePath" data column - ReadOnly.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentType">
            <summary>
            Document type - Contains the document extension.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeChildNodesCount">
            <summary>
            Node child nodes count, returns -1 if unknown.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentUrlPath">
            <summary>
            Document URL path property - Reflects the "DocumentUrlPath" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentCulture">
            <summary>
            Document culture property - Reflects the "DocumentCulture" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuCaption">
            <summary>
            Document menu caption property - Reflects the "DocumentMenuCaption" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuStyle">
            <summary>
            Document menu style property - Reflects the "DocumentMenuStyle" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemImage">
            <summary>
            Document menu item image property - Reflects the "DocumentMenuItemImage" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemLeftImage">
            <summary>
            Document menu item left image property - Reflects the "DocumentMenuItemLeftImage" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemRightImage">
            <summary>
            Document menu item right image property - Reflects the "DocumentMenuItemRightImage" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuClass">
            <summary>
            Document menu class property - Reflects the "DocumentMenuClass" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuStyleOver">
            <summary>
            Document menu style over property - Reflects the "DocumentMenuStyleOver" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuClassOver">
            <summary>
            Document menu class over property - Reflects the "DocumentMenuClassOver" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemImageOver">
            <summary>
            Document menu item image over property - Reflects the "DocumentMenuItemImageOver" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemLeftImageOver">
            <summary>
            Document menu item left image over property - Reflects the "DocumentMenuItemLeftImageOver" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemRightImageOver">
            <summary>
            Document menu item right image over property - Reflects the "DocumentMenuItemRightImageOver" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuStyleHighlighted">
            <summary>
            Document menu style highlighted property - Reflects the "DocumentMenuStyleHighlighted" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuClassHighlighted">
            <summary>
            Document menu class highlighted property - Reflects the "DocumentMenuClassHighlighted" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemImageHighlighted">
            <summary>
            Document menu item image highlighted property - Reflects the "DocumentMenuItemImageHighlighted" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemLeftImageHighlighted">
            <summary>
            Document menu item left image highlighted property - Reflects the "DocumentMenuItemLeftImageHighlighted" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemRightImageHighlighted">
            <summary>
            Document menu item right image highlighted property - Reflects the "DocumentMenuItemRightImageHighlighted" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentMenuItemInactive">
            <summary>
            Document menu item inactive property - Reflects the "DocumentMenuItemInactive" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentPageTemplateID">
            <summary>
            Document page template - Reflects the "DocumentPageTemplateID data column".
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentID">
            <summary>
            Document ID property - Reflects the "DocumentID" data column - ReadOnly.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentUseNamePathForUrlPath">
            <summary>
            Automatically use document name path for the UrlPath.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentUseCustomExtensions">
            <summary>
            Use custom document extensions.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeID">
            <summary>
            Document node ID property - Reflects the "NodeID" data column - ReadOnly.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeParentID">
            <summary>
            Document parent node ID property - Reflects the "NodeParentID" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeCacheMinutes">
            <summary>
            Document parent node ID property - Reflects the "NodeParentID" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeLevel">
            <summary>
            Document node level property - Reflects the "NodeLevel" data column - ReadOnly.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeSiteID">
            <summary>
            Node site ID property - Reflects the "NodeSiteID" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeSiteName">
            <summary>
            Returns the document site name.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeOrder">
            <summary>
            Node order property - Reflects the "NodeOrder" data column - ReadOnly.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeOwner">
            <summary>
            Node owner property - Reflects the "NodeOwner" data column - ReadOnly.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentStylesheetID">
            <summary>
            Document Stylesheet property.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeSKUID">
            <summary>
            E-commerce SKU (product) ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.NodeInheritPageLevels">
            <summary>
            Node inherit page levels.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.WorkflowStepName">
            <summary>
            Workflow step name.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsPublished">
            <summary>
            Returns true if the node is published.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsArchived">
            <summary>
            Returns true if the node is archived.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsInPublishStep">
            <summary>
            Returns true if the node is in published step disregarding publish from/to values.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.IsCheckedOut">
            <summary>
            Indicates if the document is checked out.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.PublishedVersionExists">
            <summary>
            Gets the value that indicates whether exists published version for current document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentPublishFrom">
            <summary>
            Document published from field.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentPublishTo">
            <summary>
            Document published to field.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentExtensions">
            <summary>
            Document extensions property - Reflects the "DocumentExtensions" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentCampaign">
            <summary>
            Document campaign property - Reflects the "DocumentCampaign" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentTrackConversionName">
            <summary>
            Document conversion name - Reflects the "TrackConversionName" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentConversionValue">
            <summary>
            Document conversion value - Reflects the "DocumentConversionValue" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentTags">
            <summary>
            Document tags property - Reflects the "DocumentTags" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentTagGroupID">
            <summary>
            Document tag group property - Reflects the "DocumentTagGroupID" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentWildcardRule">
            <summary>
            Document tag group property - Reflects the "DocumentWildcardRule" data column.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentRatingValue">
            <summary>
            Sum of all ratings.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentRatings">
            <summary>
            Number of ratings.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentPriority">
            <summary>
            Document priority.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentCheckedOutVersionHistoryID">
            <summary>
            Document checked out version history ID (latest document version).
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentCheckedOutByUserID">
            <summary>
            Document checked out by user ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentWorkflowStepID">
            <summary>
            Document workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentIsArchived">
            <summary>
            Returns true if the document is archived.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentSearchExcluded">
            <summary>
            Gets or sets the value that indicates whether the document will be excluded from search.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentHash">
            <summary>
            Gets or sets the document hash.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentLogVisitActivity">
            <summary>
            Gets or sets the value that indicates whether page visit activity is tracked for this document.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentGUID">
            <summary>
            Document GUID to identificate document
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.DocumentWorkflowCycleGUID">
            <summary>
            Workflow cycle GUID to obtain preview link for document
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeNode.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="T:CMS.TreeEngine.TreeNode.OnNewNodeEventHandler">
            <summary>
            Handler to provide the document object.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="T:CMS.TreeEngine.TreePathUtils">
            <summary>
            Provides static helper methods for converting and validating paths, aliases and names.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreePathUtils.MAXURLPATHLENGTH">
            <summary>
            Maximal length of the node URLPath.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreePathUtils.MAX_NAME_LENGTH">
            <summary>
            Maximal length of the node document name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreePathUtils.URL_PREFIX_MVC">
            <summary>
            URL prefix for the MVC
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreePathUtils.URL_PREFIX_ROUTE">
            <summary>
            URL prefix for the Routing
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.ForbiddenURLCharacters(System.String)">
            <summary>
            Returns string containing all forbidden characters that cannot be used in node alias and in the file system.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.ForbiddenCharactersReplacement(System.String)">
            <summary>
            Returns string containing all forbidden characters that cannot be used in node alias and in the file system.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetSafeNodeAlias(System.String,System.String)">
            <summary>
            Returns the safe equivalent to the given nodeAlias.
            </summary>
            <param name="nodeAlias">Original node alias</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetSafeNodeAliasPath(System.String,System.String)">
            <summary>
            Returns the safe equivalent to the given node alias path.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUniqueNodeAlias(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the unique node alias for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="nodeAlias">Original node alias</param>
            <param name="siteName">Site name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.EnsureMaxNodeAliasLength(System.String)">
            <summary>
            Ensures maximal allowed node alias length.
            </summary>
            <param name="nodeAlias">Original node alias</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.EnsureMaxNodeNameLength(System.String)">
            <summary>
            Ensures maximal allowed node document name length.
            </summary>
            <param name="nodeName">Original name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUniqueNodeName(System.String,System.Int32,System.Int32)">
            <summary>
            Returns the unique node name for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="nodeName">Original node name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUniqueDocumentName(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Returns the unique document name for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="documentName">Original document name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
            <param name="documentCulture">Document culture</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.ParseUrlPath(System.String@,System.String@,System.Collections.Hashtable)">
            <summary>
            Parses the prefix and default values out of the URL path
            </summary>
            <param name="urlPath">URL path to process</param>
            <param name="prefix">Returning the prefix</param>
            <param name="values">Collection of values</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetSafeUrlPath(System.String,System.String)">
            <summary>
            Returns the safe equivalent to the given URLPath.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetSafeUrlPath(System.String,System.String,System.Boolean)">
            <summary>
            Returns the safe equivalent to the given URLPath.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="siteName">Site name</param>
            <param name="allowLimitReplacements">Indicates whether replacements should be limited if replacement is enabled globally</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUniqueUrlPath(System.String,System.Int32,System.String)">
            <summary>
            Returns the unique URL path for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="currentDocumentId">Current document Id</param>
            <param name="siteName">Parent site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUniqueUrlPath(System.String,System.Int32,System.String,System.String)">
            <summary>
            Returns the unique URL path for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="currentDocumentId">Current document Id</param>
            <param name="siteName">Parent site name</param>
            <param name="cultureSuffix">Culture suffix</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrlPathFromNamePath(System.String,System.Int32)">
            <summary>
            Returns the UrlPath created from the given NamePath.
            </summary>
            <param name="namePath">NamePath to convert</param>
            <param name="nodeLevel">Node level</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrlPathFromNamePath(System.String,System.Int32,System.String)">
            <summary>
            Returns the UrlPath created from the given NamePath.
            </summary>
            <param name="namePath">NamePath to convert</param>
            <param name="nodeLevel">Node level</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetAliasPathByNodeId(System.Int32)">
            <summary>
            Returns the AliasPath equivalent for the given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeByAliasPath(System.String,System.String)">
            <summary>
            Gets the base node record (CMS_Tree) by the alias path and site name.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeIdByAliasPath(System.String,System.String)">
            <summary>
            Returns the node ID corresponding to the given aliasPath.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeGUIDByNodeId(System.Int32)">
            <summary>
            Returns the Node GUID equivalent for the given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeGUIDByNodeId(System.Int32,CMS.DataEngine.GeneralConnection)">
            <summary>
            Returns the Node GUID equivalent for the given node ID.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeIdByNodeGUID(System.Guid,System.String)">
            <summary>
            Returns the Node ID equivalent for the given node GUID.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="siteName">Node site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeIdByNodeGUID(System.Guid,System.String,CMS.DataEngine.GeneralConnection)">
            <summary>
            Returns the Node ID equivalent for the given node GUID.
            </summary>
            <param name="nodeGuid">Node GUID</param>
            <param name="siteName">Node site name</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetDocumentSite(System.Int32)">
            <summary>
            Returns the site info of the specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeSite(System.Int32)">
            <summary>
            Returns the site info of the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeParentId(System.Int32)">
            <summary>
            Returns the parent node ID.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrlExtension">
            <summary>
            Returns URL extension used for friendly URLs for current site.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrlExtension(System.String)">
            <summary>
            Returns URL extension used for friendly URLs for specified site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetFilesUrlExtension">
            <summary>
            Returns files URL extension used for friendly URLs for current site.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetFilesUrlExtension(System.String)">
            <summary>
            Returns files URL extension used for friendly URLs for specified site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.AutomaticallyUpdateDocumentAlias(System.String)">
            <summary>
            Returns true if the document alias should be automatically updated upon document name change.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.KeepChangedDocumentsAccessible(System.String)">
            <summary>
            Returns true if the documents should be accessible after change (if the alias should be automatically generated for them).
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.UseNamePathForUrlPath(System.String)">
            <summary>
            Returns true if the new documents should automatically use the name path for their URL path.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.AllowPermanentPreviewLink(System.String)">
            <summary>
            Returns true if document workflow cycle GUID shouldn't be changed when moving from publish/archive step to edit step.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetAlias(System.String)">
            <summary>
            Returns the alias from the given alias path.
            </summary>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetParentPath(System.String)">
            <summary>
            Returns the parent path for the specified path (any kind of path with "/" as a separator)
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetParentPath(System.String,System.Int32)">
            <summary>
            Returns the parent path for the specified path, with distance of parentLevel from the given path.
            </summary>
            <param name="path">Source path</param>
            <param name="parentLevel">Parent level (distance) from the given path</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetParentPathRestricted(System.String,System.Int32)">
            <summary>
            Returns the parent path for the specified path (any kind of path with "/" as a separator) with restriction on depth of the path
            </summary>
            <param name="path">Original path</param>
            <param name="maximalLevel">Restricts returned path to specified maximal number of parent levels</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.ResolvePath(System.String,System.String)">
            <summary>
            Resolves the given alias path, applies the path segment to the given format string {0} for level 0.
            </summary>
            <param name="format">Path pattern</param>
            <param name="path">Path with the data</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetPathLevel(System.String,System.Int32)">
            <summary>
            Returns the specified path level created from the given path.
            </summary>
            <param name="path">Source path</param>
            <param name="level">Level to return</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.IsMenuItemType(System.String)">
            <summary>
            Returns true, if the class name is considered to be menu item type document (CMS.MenuItem or CMS.Root in basic).
            </summary>
            <param name="className">Class name to analyze</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.NewDocumentOrder(System.String)">
            <summary>
            Returns the new document order settings for the given site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetNodeUpperTree(System.Int32,System.String,System.String,System.String)">
            <summary>
            Gets the inherited value for document node (only values from CMS_Tree).
            </summary>
            <param name="siteId">Site ID</param>
            <param name="nodeAliasPath">Node alias path</param>
            <param name="culture">Culture</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.EnsureSingleNodePath(System.String)">
            <summary>
            Enusres node alias path to be only for single document.
            </summary>
            <param name="path">Original node alias path</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetTreeView(System.String,System.String,System.Int32,System.String)">
            <summary>
            Selects records from View_CMS_Tree_Joined.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to select</param>
            <param name="columns">Columns to select</param>
            <returns>DataSet with view specified by parameters</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetChildNodes(System.Int32)">
            <summary>
            Gets child nodes of node specified by identifier.
            </summary>
            <param name="nodeParentId">Identifier of parent node</param>
            <returns>DataSet with child nodes</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetMenuCaption(System.String,System.String)">
            <summary>
            Returns the menu caption.
            </summary>
            <param name="documentMenuCaption">Document menu caption</param>
            <param name="documentName">Document name</param>
            <returns>If regular menu caption not set, document name is returned instead</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrl(System.String)">
            <summary>
            Returns URL for the specified aliasPath.
            </summary>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrl(System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url).
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrl(System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Lang prefix. If is empty current lang prefix is used</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable if urlpath is not wildcard url) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
            <param name="siteName">Site name</param>
            <param name="langPrefix">Lang prefix. If is empty current lang prefix is used</param>
            <param name="extension">Url extension</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetAttachmentUrl(System.Guid,System.String,System.Int32,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="nodeAlias">Node Alias name</param>
            <param name="versionHistoryId">Version history ID</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetAttachmentUrl(System.Guid,System.String)">
            <summary>
            Returns attachment url.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="nodeAlias">Node Alias name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetPermanentDocUrl(System.Guid,System.String,System.String,System.String,System.String)">
            <summary>
            Returns permanent document url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
            <param name="prefix">URL prefix, if null, "getdoc" is used, the prefix must be supported by the URL rewriting engine</param>
            <param name="extension">Extension for the URL, if null, it is taken from the Friendly URL settings</param>
        </member>
        <member name="M:CMS.TreeEngine.TreePathUtils.GetPermanentDocUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns permanent document url.
            </summary>
            <param name="nodeGuid">Node guid</param>
            <param name="nodeAlias">Node alias</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="P:CMS.TreeEngine.TreePathUtils.UseLimitURLReplacements">
            <summary>
            Gets the value that indicates whether whether multiple, starting and trailing replacements should be limited.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreePathUtils.MaxAliasLength">
            <summary>
            Maximal length of the node alias name.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreePathUtils.MaxNameLength">
            <summary>
            Maximal length of the node document name.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeProvider">
            <summary>
            Provides methods for management of the tree structure.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.ALL_CULTURES">
            <summary>
            Supplementary constant to specify all document cultures.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.ALL_SITES">
            <summary>
            Supplementary constant to specify all sites.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.ALL_CLASSNAMES">
            <summary>
            Suplementary constant to specify all class names.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.ALL_DOCUMENTS">
            <summary>
            Supplementary constant to specify all documents.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.ALL_LEVELS">
            <summary>
            All relative levels.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.DEFAULT_QUERY">
            <summary>
            Default query name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.SELECTNODES_REQUIRED_COLUMNS">
            <summary>
            Columns required for the select nodes operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.SELECTTREE_REQUIRED_COLUMNS">
            <summary>
            Columns required for the select tree operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.SECURITYCHECK_REQUIRED_COLUMNS">
            <summary>
            Columns required for the security check operation to perform successfully in any case.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.NO_TIME">
            <summary>
            Datetime contant representing no time.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mProviderObject">
            <summary>
            Search object instance.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mProviderAssemblyName">
            <summary>
            Provider assembly name.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mProviderAssembly">
            <summary>
            Provider assembly.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUserInfo">
            <summary>
            Current user info object.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mCombineWithDefaultCulture">
            <summary>
            Combine the selection result with the default culture records?
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mPreferredCultureCode">
            <summary>
            Preferred culture code for the data selection.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mSelectQueryName">
            <summary>
            Base query name to use for the document selection.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mQueryParameters">
            <summary>
            Query parameters.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mSelectColumns">
            <summary>
            Select columns.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mSortMergedResults">
            <summary>
            If true, merged results are sorted.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mFilterOutDuplicates">
            <summary>
            If true, duplicated (linked) items are filtered.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUseCustomHandlers">
            <summary>
            If true, custom handlers are used with TreeNode operations.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUseCache">
            <summary>
            If true, cahce is used for documents data.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mGenerateNewGuid">
            <summary>
            If true, new Guid is generated for the inserted nodes where required.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mCheckUniqueNames">
            <summary>
            If true, unique node names and aliases are checked against the database (turn off only when you perform the validation by yourself).
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mCheckUniqueAttachmentNames">
            <summary>
            If true, unique attachment names within one document are checked against the database (turn off only when you perform the validation by yourself).
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUpdateTimeStamps">
            <summary>
            If true, document time stamps are updated.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUpdateUser">
            <summary>
            If true, user IDs of the document (creator, modifier) are updated.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUpdatePaths">
            <summary>
            If true, the paths of the document are updated.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUpdateSKUColumns">
            <summary>
            If true, SKU columns are updated on node update.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUpdateNodeData">
            <summary>
            If true, node data are updated from internal objects (Custom data, Document content ...).
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mLogEvents">
            <summary>
            If true, events are logged on document update.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mDeleteChildNodes">
            <summary>
            If false, child nodes of the document are not deleted when the document is deleted.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mLogSynchronization">
            <summary>
            If true, synchronization tasks are logged on document update.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mLogIntegration">
            <summary>
            If true, integration tasks are logged on document update.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mTouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched on document update.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mLogWebFarmTasks">
            <summary>
            If true, web farm tasks are logged on the object update.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mSelectAllData">
            <summary>
            If true, all data are selected, if false, only base document data are selected.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mEnableBlogPostTrackbacks">
            <summary>
            Indicates if blog post trackbacks are enabled.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mEnableNotifications">
            <summary>
            Indicates if notifications are sent when conten changes occurs (document updated/inserted/deleted,...), by default it is set to TRUE.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mAllowAsyncActions">
            <summary>
            Indicates if asynchronous actions hould be allowed (log synchronization tasks), by default it is set to TRUE.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mEnableDocumentAliases">
            <summary>
            Indicates whether "Remember original URL when moving document" option should be accepted.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mHandleACLs">
            <summary>
            Indicates if the ACL operations should be performed during the document operations.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mUseParentNodeGroupID">
            <summary>
            Indicates if NodeGroupId property should be set according to the parent value.
            </summary>
        </member>
        <member name="F:CMS.TreeEngine.TreeProvider.mPreserveACLHierarchy">
            <summary>
            Indicates if the ACL hierarchy should be preserved on processed documents.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.#ctor">
            <summary>
            Constructor.
            </summary>    
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.#ctor(CMS.SiteProvider.UserInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="userInfo">Current user info object</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.#ctor(CMS.SiteProvider.UserInfo,CMS.DataEngine.GeneralConnection)">
            <summary>
            Constructor.
            </summary>
            <param name="userInfo">Current user info object</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.RemoveCMSExcludeDocumentsFromSearch(System.Data.DataSet@,System.String)">
            <summary>
            Filters those results, which AliasPath is set in CMSExcludeDocumentsFromSearch key.
            </summary>
            <param name="searchResultDS">Search results to filter</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.FilterOutLocalizedVersions(System.Data.DataSet,System.String,System.String)">
            <summary>
            Removes nodes of default culture that are translated to required language.
            </summary>
            <param name="ds">Original DataSet object containing both default and required language versions</param>
            <param name="siteName">Documents site name</param>
            <param name="preferredCulture">Required culture code</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.FilterOutLocalizedRows(System.Data.DataTable,System.String)">
            <summary>
            Removes nodes of any culture that are translated to required language.
            </summary>
            <param name="dt">DataTable to filter</param>
            <param name="preferredCulture">Required culture code</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.FilterOutDuplicateDocuments(System.Data.DataSet)">
            <summary>
            Filters out duplicate documents (linked ones).
            </summary>
            <param name="ds">Dataset with the documents</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.ISearchEngine.SearchModeEnum)">
            <summary>
            Searches specified node and all child nodes and returns results as a dataset with CMS_TREE data.
            </summary>
            <param name="siteName">Name of sitename</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>    
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.ISearchEngine.SearchModeEnum,System.Boolean)">
            <summary>
            Searches specified node and (optionally) all child nodes and returns results as a dataset with CMS_TREE data.
            </summary>
            <param name="siteName">Name of sitename</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>    
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.ISearchEngine.SearchModeEnum,System.Boolean,System.String)">
            <summary>
            Searches data and returns results.
            </summary>
            <param name="siteName">Name of sitename</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">Array of names of the class to be searched in format application.class</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.ISearchEngine.SearchModeEnum,System.Boolean,System.String,System.Boolean)">
            <summary>
            Searches data and returns results.
            </summary>
            <param name="siteName">Name of sitename</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">Array of names of the class to be searched in format application.class</param>
            <param name="filterResultsByReadPermission">Indicates if search results should be filtered by read permission for the current user. The default value is false</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.ISearchEngine.SearchModeEnum,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Searches data and returns results.
            </summary>
            <param name="siteName">Name of sitename</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">Array of names of the class to be searched in format application.class</param>
            <param name="filterResultsByReadPermission">Indicates if search results should be filtered by read permission for the current user. The default value is false</param>
            <param name="searchOnlyPublished">Indicates if only published documents should be searched</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="combineWithDefaultCulture">Indicates if results will be combined with default culture</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.Search(System.String,System.String,System.String,System.String,CMS.ISearchEngine.SearchModeEnum,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Searches data and returns results.
            </summary>
            <param name="siteName">Name of sitename</param>
            <param name="searchNodePath">Path of the starting node</param>
            <param name="cultureCode">Culture code</param>
            <param name="searchExpression">Search expression</param>
            <param name="searchMode">Search mode</param>
            <param name="searchChildNodes">Indicates if child nodes should be searched</param>
            <param name="classNames">Array of names of the class to be searched in format application.class</param>
            <param name="filterResultsByReadPermission">Indicates if search results should be filtered by read permission for the current user. The default value is false</param>
            <param name="searchOnlyPublished">Indicates if only published documents should be searched</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.AttachmentSearch(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.Int32[],CMS.SiteProvider.UserInfo)">
            <summary>
            Searches attachment binary data for search expression.
            </summary>
            <param name="searchExpression">Search expression</param>
            <param name="path">Path to files</param>
            <param name="className">Class name of files</param>
            <param name="where">Custom WHERE condition</param>
            <param name="orderBy">Custom ORDER By condition</param>
            <param name="topN">Custom TOP N condition</param>
            <param name="checkPermissions">Indicates if result DataSet should be filtered by permissions of current user</param>
            <param name="combineWithDefaultCulture">Indicates if result DataSet should be filtered by cultures</param>
            <param name="culture">Preferred culture</param>
            <param name="defaultCulture">Default culture</param>
            <param name="siteIds">Site Ids</param>
            <param name="user">User info</param>
            <returns>DataSet with result</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.Guid,System.String,System.String)">
            <summary>
            Returns single node specified by NodeID, uses the preferred culture. Does not include the coupled data.
            </summary>
            <param name="mGuid">GUID to select</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.Int32)">
            <summary>
            Returns single node specified by NodeID, uses the preferred culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.Int32,System.String)">
            <summary>
            Returns single node specified by NodeID and culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
            <param name="cultureCode">Document culture to select</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.Int32,System.String,System.Boolean)">
            <summary>
            Returns single node specified by NodeID and culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
            <param name="cultureCode">Document culture to select</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document if specified culture not found</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by NodeID and culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
            <param name="cultureCode">Document culture to select</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document if specified culture not found</param>
            <param name="coupledData">If true, coupled data are also returned</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.Int32,System.String,System.String)">
            <summary>
            Selects the document node by specified node ID, culture code and class name. Most efficient way of getting the document.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="culture">Culture code</param>
            <param name="classNames">Class names</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleDocument(System.Int32)">
            <summary>
            Returns the document node specified by the given document ID. If the document has links, it always selects the original document.
            </summary>
            <param name="documentId">Document ID to select</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleDocument(System.Int32,System.Boolean)">
            <summary>
            Returns the document node specified by the given document ID. If the document has links, it always selects the original document.
            </summary>
            <param name="documentId">Document ID to select</param>
            <param name="coupledData">If true, coupled data are also returned</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleDocument(System.Int32,System.Boolean,System.String)">
            <summary>
            Returns the document node specified by the given document ID. If the document has links, it always selects the original document.
            </summary>
            <param name="documentId">Document ID to select</param>
            <param name="coupledData">If true, coupled data are also returned</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String)">
            <summary>
            Returns single document node.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node AliasPath</param>
            <param name="cultureCode">Node culture</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns single document node.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node AliasPath</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document if specified culture not found</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Returns single document node.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node AliasPath</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document if specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Returns single document node.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node AliasPath</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Published nodes only</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns single document node.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node AliasPath</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Published nodes only</param>
            <param name="checkPermissions">Check permissions</param>
            <param name="user">User info for checkpermissions</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns single document node.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node AliasPath</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Published nodes only</param>
            <param name="checkPermissions">Check permissions</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns single document node.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node AliasPath</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Published nodes only</param>
            <param name="checkPermissions">Check permissions</param>
            <param name="selectCoupledData">Indicates if coupled data should be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Selects first tree node matching the provided parameters and returns them as the TreeNode object. If classNames are not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Selects first tree node matching the provided parameters and returns them as the TreeNode object. If classNames are not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode(CMS.TreeEngine.NodeSelectionParameters)">
            <summary>
            Selects first tree node matching the provided parameters and returns them as the TreeNode object. If classNames are not specified, the result does not contain coupled data.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode``1(System.Guid,System.String,System.String)">
            <summary>
            Returns single node specified by NodeID, uses the preferred culture. Does not include the coupled data.
            </summary>
            <param name="mGuid">GUID to select</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode``1(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns single node specified by NodeID and culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
            <param name="cultureCode">Document culture to select</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document if specified culture not found</param>
            <param name="coupledData">If true, coupled data are also returned</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleDocument``1(System.Int32,System.Boolean,System.String)">
            <summary>
            Returns the document node specified by the given document ID. If the document has links, it always selects the original document.
            </summary>
            <param name="documentId">Document ID to select</param>
            <param name="coupledData">If true, coupled data are also returned</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode``1(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns single document node.
            </summary>
            <param name="siteName">Node site name</param>
            <param name="aliasPath">Node AliasPath</param>
            <param name="cultureCode">Node culture</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Published nodes only</param>
            <param name="checkPermissions">Check permissions</param>
            <param name="selectCoupledData">Indicates if coupled data should be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode``1(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Selects first tree node matching the provided parameters and returns them as the TreeNode object. If classNames are not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectSingleNode``1(CMS.TreeEngine.NodeSelectionParameters)">
            <summary>
            Selects first tree node matching the provided parameters and returns them as the TreeNode object. If classNames are not specified, the result does not contain coupled data.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.Int32,System.String,System.String)">
            <summary>
            Returns nodes specified by NodeID. If ALL_CULTURES specified, multiple nodes returned.
            </summary>
            <param name="nodeId">Node ID to select</param>
            <param name="cultureCode">Document culture to select. Can be null, all cultures will be selected</param>
            <param name="siteName">Site name of nodes</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Select top N rows only</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Select top N rows only</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(CMS.TreeEngine.NodeSelectionParameters)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="parameters">Selection parameters</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean)">
            <summary>
            Selects tree nodes without coupled data according to provided parameters and returns them as dataset.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to the Node GUID</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Specify if the related node is located on the left side of the relationship</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Selects tree nodes without coupled data according to provided parameters and returns them as dataset.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to the Node GUID</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Specify if the related node is located on the left side of the relationship</param>
            <param name="topN">Select top N rows</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SelectNodesCount(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns tree nodes count matching the provided parameters.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetEmptyDataSet">
            <summary>
            Gets the empty data set to be filled by the data
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetDocumentCacheDependencies(System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets the cache dependencies for the document data source.
            </summary>
            <param name="siteName">Site name</param>
            <param name="classNames">Class names, null to cover all</param>
            <param name="path">Path</param>
            <param name="groupId">Community group ID, zero if not available</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetDependencyCacheKeys(CMS.TreeEngine.TreeNode,System.String)">
            <summary>
            Gets the cache key dependencies array for the TreeNode object (cache item keys affected when the object changes).
            </summary>
            <param name="node">Document node</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetDefaultCultureCode">
            <summary>
            Returns default culture code specified in the CMSDefaultCultureCode configuration key.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.AllSites(System.String)">
            <summary>
            Returns true if the given site name value means all sites
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetCultureWhereCondition(System.String,System.String,System.Boolean)">
            <summary>
            Gets the culture where condition.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetCompleteWhereCondition(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns the complete where condition based on the given parameters.
            </summary> 
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetClassNamesWhereCondition(System.String)">
            <summary>
            Gets the where condition for the given list of class names separated by semicolon (;).
            </summary>
            <param name="classNames">Class names</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetNodesOnPathWhereCondition(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the where condition for all node on the path to the given alias path.
            </summary>
            <param name="aliasPath">Alias path</param>        
            <param name="includeRoot">Include root item</param>
            <param name="includeCurrent">Include current item (the exact path)</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetRelationshipWhereCondition(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the where condition for the given relationship
            </summary>
            <param name="nodeId">Node ID of the document</param>
            <param name="name">Collection name</param>
            <param name="documentIsOnLeftSide">If true, the document can be on left side of the relationship</param>
            <param name="documentIsOnRightSide">If true, the document can be on left side of the relationship</param>
            <returns>Returns null, if relationship name not found</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.CopyNode(CMS.TreeEngine.TreeNode,System.Int32)">
            <summary>
            Copies the node to the specified location along with its child nodes.
            </summary>
            <param name="node">Node to copy</param>
            <param name="targetParentNodeId">Target location</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.CopyNode(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.CopyNode(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.CopyNode(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="copyPermissions">Indicates if document permissions should be copied</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.CopyNode(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="copyPermissions">Indicates if document permissions should be copied</param>
            <param name="newDocumentName">New document name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.MoveNode(CMS.TreeEngine.TreeNode,System.Int32)">
            <summary>
            Moves the node to the specified location.
            </summary>
            <param name="node">Node to move</param>
            <param name="targetParentNodeId">Target location</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.MoveNode(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean)">
            <summary>
            Moves the node to the specified location.
            </summary>
            <param name="node">Node to move</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="copyPermissions">Indicates if permissions should be preserved</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.InitNodeOrders(System.Int32)">
            <summary>
            Initializes the node order under the specific parent node ID.
            </summary>
            <param name="parentId">Parent ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.MoveNodeUp(System.Int32)">
            <summary>
            Moves node up in the order sequence (up = smaller NodeOrder = soooner in the navigation).
            </summary>
            <param name="nodeId">Node ID to move</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.MoveNodeDown(System.Int32)">
            <summary>
            Moves node down in the order sequence (down = larger NodeOrder = later in the navigation).
            </summary>
            <param name="nodeId">Node ID to move</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SetNodeOrder(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="newOrder">New node order</param>
            <param name="initOrders">Init parent node orders</param>
            <returns>Returns new node order</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SetNodeOrder(System.Int32,CMS.TreeEngine.DocumentOrderEnum)">
            <summary>
            Sets the specified node order.
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="newOrder">New node order</param>
            <returns>Returns new node order</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.OrderNodesAlphabetically(System.Int32,System.Boolean)">
            <summary>
            Initializes the order of the nodes alphabetically.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="ascending">Sort ascending?</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.OrderNodesByDate(System.Int32,System.Boolean)">
            <summary>
            Initializes the order of the nodes by date.
            </summary>
            <param name="parentNodeId">Parent node ID</param>
            <param name="ascending">Sort ascending?</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.DeleteSiteTree(System.String)">
            <summary>
            Deletes site tree with root when site is deleted.
            </summary>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.CreateSiteRoot(System.String)">
            <summary>
            Creates site root when the site is created.
            </summary>
            <param name="siteName">Name of the site</param>
            <returns>Tree node of the root</returns>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ChangeSiteDefaultCulture(System.String,System.String)">
            <summary>
            Change default culture of the site.
            </summary>
            <param name="siteName">Site name</param>
            <param name="newCultureCode">New culture code</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ChangeSiteDefaultCulture(System.String,System.String,System.String)">
            <summary>
            Change culture of the site.
            </summary>
            <param name="siteName">Site name</param>
            <param name="newCultureCode">New culture code</param>
            <param name="oldCultureCode">Old culture code</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ChangeCulture(System.String,System.String,System.String)">
            <summary>
            Change default site culture.
            </summary>
            <param name="siteName">Site name</param>
            <param name="currentCulture">Current culture</param>
            <param name="newCulture">New culture</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.DeleteLinks(System.Int32)">
            <summary>
            Deletes the document links to the specified node.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetLinks(System.Int32)">
            <summary>
            Gets the Dataset of all the document links.
            </summary>
            <param name="nodeId">NodeID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetOriginalNode(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns the original node for the document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetOriginalNode(CMS.TreeEngine.TreeNode,System.String)">
            <summary>
            Returns the original node for the document node.
            </summary>
            <param name="node">Document node</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetTreeNode(CMS.SettingsProvider.IDataContainer,CMS.TreeEngine.TreeProvider)">
            <summary>
            Gets the TreeNode created from given data.
            </summary>
            <param name="data">Node data</param>
            <param name="tree">TreeProvider to use for the object</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetTreeNode``1(CMS.SettingsProvider.IDataContainer,CMS.TreeEngine.TreeProvider)">
            <summary>
            Gets the TreeNode created from given data.
            </summary>
            <param name="data">Node data</param>
            <param name="tree">TreeProvider to use for the object</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetUniqueNodeName(System.String,System.Int32,System.Int32)">
            <summary>
            Returns the unique node name for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="nodeName">Original node name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetUniqueDocumentName(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Returns the unique document name for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="documentName">Original document name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
            <param name="documentCulture">Document culture</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetUniqueNodeAlias(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the unique node alias for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="nodeAlias">Original node alias</param>
            <param name="siteName">Site name</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="currentNodeId">Current node ID</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetUniqueUrlPath(System.String,System.Int32,System.String)">
            <summary>
            Returns the unique URL path for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="currentDocumentId">Current document Id</param>
            <param name="siteName">Parent site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetUniqueUrlPath(System.String,System.Int32,System.String,System.String)">
            <summary>
            Returns the unique URL path for the specified parent node, does not check duplicity if duplicity occurs within the currentNodeId.
            </summary>
            <param name="urlPath">Original URL path</param>
            <param name="currentDocumentId">Current document Id</param>
            <param name="siteName">Parent site name</param>
            <param name="cultureSuffix">Culture suffix</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ChangeCommunityGroup(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
             Sets owner group of specified nodes
            </summary>
            <param name="nodeAliasPath">Alias path of node</param>
            <param name="nodeGroupId">ID of owner group</param>
            <param name="siteId">ID of site</param>
            <param name="inheritOwnerGroup">Inherit group owner settings by child nodes</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.SetRating(CMS.TreeEngine.TreeNode,System.Double,System.Int32)">
            <summary>
            Sets ratings to desired values.
            </summary>
            <param name="tn">Document</param>
            <param name="newRating">New rating value</param>
            <param name="newNumOfRatings">Number of ratings</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ResetRating(CMS.TreeEngine.TreeNode)">
            <summary>
            Reset rating values of specified document.
            </summary>
            <param name="tn">Document</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.AddRating(CMS.TreeEngine.TreeNode,System.Double,System.Boolean)">
            <summary>
            Updates rating value of specified document.
            </summary>
            <param name="tn">Document</param>
            <param name="rating">Rating value</param>
            <param name="rememberRating">If true, rating is stored into cookie</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.HasRated(CMS.TreeEngine.TreeNode)">
            <summary>
            Sets the flag that user rated the document.
            </summary>
            <param name="tn">Document</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.CheckUser">
            <summary>
            Checks the presence of the user.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ClearWorkflowInformation(CMS.TreeEngine.TreeNode)">
            <summary>
            Clears the workflow information from the given Document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ClearCheckoutInformation(CMS.TreeEngine.TreeNode)">
            <summary>
            Clears the checkout information from the given Document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetUseParentNodeGroupID(System.String)">
            <summary>
            Gets value that Indicates if NodeGroupID property should be set according to the parent value.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.GetCombineWithDefaultCulture(System.String)">
            <summary>
            Gets value that indicates if returned nodes should be combined with appropriate nodes of default culture in case they are not localized. It applies only if you're using multilingual support. The default value is false.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.CheckDocumentUIPermissions(System.String)">
            <summary>
            Gets value that indicates if document permissions should be checked in the content management UI.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.EnsureRequiredColumns(System.String)">
            <summary>
            Ensures that the given column list contains the columns required for the selection. Returns the adjusted list
            </summary>
            <param name="columns">List of columns</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,System.String,System.String)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String)">
            <summary>
            Executes query and returns result as a dataset.
            </summary>
            <param name="queryName">Name of the query in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="where">WHERE expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Top N expression</param>
            <param name="columns">Columns expression</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeProvider.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Executes query and returns result as a dataset.
            </summary>
            <param name="queryName">Name of the query in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="where">WHERE expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Top N expression</param>
            <param name="columns">Columns expression</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total records</param>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.DataSetFactory">
            <summary>
            DataSet factory, if set, the DataSet for the queried data is provided by this object
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UserInfo">
            <summary>
            Current user info.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.CombineWithDefaultCulture">
            <summary>
            Indicates if returned nodes should be combined with appropriate nodes of default culture in case they are not localized. It applies only if you're using multilingual support. The default value is false.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.PreferredCultureCode">
            <summary>
            Preferred culture code to use when none set.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.SelectQueryName">
            <summary>
            Base query name to use for the document selection (for the enhanced selection options only).
            </summary>
            <remarks>
            The uncomplete query is compatible only with method SelectNodes. To support all operations, the query must return following columns: 
            </remarks>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.QueryParameters">
            <summary>
            Query parameters for the select query.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.SelectColumns">
            <summary>
            Select columns.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.MergeResults">
            <summary>
            If true, merges the result tables of DataSet to a single table.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.SortMergedResults">
            <summary>
            If true, merged results are sorted.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UseAutomaticOrdering">
            <summary>
            If true, automatic ordering is used for new nodes.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.FilterOutDuplicates">
            <summary>
            If true, duplicated (linked) items are filtered.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.BaseCacheKey">
            <summary>
            Provider base cache key.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UseCustomHandlers">
            <summary>
            If true, custom handlers are used with TreeNode operations.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UseCache">
            <summary>
            If true, cache is used for docuemnts data.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.GenerateNewGuid">
            <summary>
            If true, new GUID is generated for the inserted nodes where required.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.CheckUniqueNames">
            <summary>
            If true, unique node names, document names and aliases are checked against the database (turn off only when you perform the validation by yourself).
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.CheckUniqueAttachmentNames">
            <summary>
            If true, unique attachment names within one document are checked against the database (turn off only when you perform the validation by yourself).
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UpdateTimeStamps">
            <summary>
            If true, time stamps of the document are updated.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UpdateUser">
            <summary>
            If true, user IDs of the document (creator, modifier) are updated.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UpdatePaths">
            <summary>
            If true, paths of the document are updated.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UpdateSKUColumns">
            <summary>
            If true, SKU columns of the document are updated.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UpdateNodeData">
            <summary>
            If true, node data are updated from internal objects (Custom data, Document content ...).
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.LogEvents">
            <summary>
            If true, events are log on document update.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.DeleteChildNodes">
            <summary>
            If false, child nodes of the document are not deleted when the document is deleted.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on document update.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.LogIntegration">
            <summary>
            If true, integration tasks are logged on document update.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched on document update.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.LogWebFarmTasks">
            <summary>
            If true, web farm tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.SelectAllData">
            <summary>
            If true, all data are selected, if false, only base document data are selected.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.EnableBlogPostTrackbacks">
            <summary>
            Indicates if blog post trackbacks are enabled.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.EnableNotifications">
            <summary>
            Indicates if notifications are sent when conten changes occurs (document updated/inserted/deleted,...), by default it is set to TRUE.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.AllowAsyncActions">
            <summary>
            Indicates if asynchronous actions should be allowed (log synchronization tasks), by default it is set to TRUE.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.EnableDocumentAliases">
            <summary>
            Gets or sets the value that indicates whether "Remember original URL when moving document" option should be accepted.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.HandleACLs">
            <summary>
            Indicates if the ACL operations should be performed during the document operations.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.UseParentNodeGroupID">
            <summary>
            Indicates if NodeGroupID property should be set according to the parent value.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.PreserveACLHierarchy">
            <summary>
            Indicates if the ACL hierarchy should be preserved on processed documents.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.KeepCheckedInOnInsert">
            <summary>
            If true, the document stays checked in on the insert operation
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.ProviderAssemblyName">
            <summary>
            Custom Provider library assembly.
            </summary>
        </member>
        <member name="P:CMS.TreeEngine.TreeProvider.ProviderObject">
            <summary>
            Returns the helper object.
            </summary>
        </member>
        <member name="T:CMS.TreeEngine.TreeSecurityProvider">
            <summary>
            Tree provider with an additional security functionality to filter the selection results by the user permissions.
            </summary>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsAuthorizedPerNodeData(System.Object,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="nodeData">Node data row</param>
            <param name="permission">Permission to check</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsAuthorizedPerNodeData(System.Object,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="nodeData">Node data row</param>
            <param name="permission">Permission to check</param>
            <param name="userInfo">UserInfo instance</param> 
            <param name="culture">Document culture code</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.InvalidateTreeNodeAuthorizationResults(CMS.SiteProvider.UserInfo,System.Int32,System.String)">
            <summary>
            Invalidates permission authorization results per node for given user.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="nodeId">Node identifier</param>
            <param name="cultureCode">Document culture code</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsAuthorizedPerNode(CMS.TreeEngine.TreeNode,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission name</param>
            <param name="userInfo">UserInfo instance</param> 
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsAuthorizedPerNode(CMS.TreeEngine.TreeNode,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo,System.Boolean)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission name</param>
            <param name="userInfo">UserInfo instance</param> 
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsAuthorizedPerNode(CMS.TreeEngine.TreeNode,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo,System.String,System.Boolean)">
            <summary>
            Returns true if user is granted with specified permission for particular node.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission name</param>
            <param name="userInfo">UserInfo instance</param> 
            <param name="culture">Document culture to be checked</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsAuthorizedPerACL(System.Int32,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if specified user is granted with given permission for the ACL specified by the ACLID value.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
            <remarks>If specified ACLID does not exist, true is returned.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsAuthorizedPerACL(System.Int32,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo,System.Int32)">
            <summary>
            Returns true if specified user is granted with given permission for the ACL specified by the ACLID value.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="siteId">Site ID</param>
            <remarks>If specified ACLID does not exist, true is returned.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsAuthorizedPerACL(System.Int32,CMS.TreeEngine.NodePermissionsEnum[],CMS.SiteProvider.UserInfo,System.Int32)">
            <summary>
            Returns true if specified user is granted with given permissions for the ACL specified by the ACLID value.
            </summary>
            <param name="aclId">ACLID value</param>
            <param name="permissions">Required list of permissions</param>
            <param name="userInfo">Current user info object</param>
            <param name="siteId">Site ID</param>
            <remarks>If specified ACLID does not exist, true is returned.</remarks>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterDataSetByClassPermissions(System.Data.DataSet,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">UserInfo instance</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterDataSetByClassPermissions(System.Data.DataSet,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo,System.Boolean)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">UserInfo instance</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo,System.Boolean)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.TreeEngine.NodePermissionsEnum,CMS.SiteProvider.UserInfo,System.Boolean,System.Boolean)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permission.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permission">Required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, records with flag columns to indetify if user was granted with required permission are returned</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.TreeEngine.NodePermissionsEnum[],CMS.SiteProvider.UserInfo,System.Boolean,System.Boolean)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, records with flag columns to indetify if user was granted with required permissions are returned</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.TreeEngine.NodePermissionsEnum[],CMS.SiteProvider.UserInfo,System.Boolean,System.String)">
            <summary>
            Filters all tables of the given DataSet and returns records with flag columns to indetify if user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="cultureCodes">Culture codes separated by ';' to preform permissions check separately for each culture</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.CheckPermission(System.Data.DataRow,CMS.TreeEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets result of the given permission and culture from DataRow.
            </summary>
            <param name="dr">DataRow with data</param>
            <param name="permission">Permission to check</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.GetPermissionName(CMS.TreeEngine.NodePermissionsEnum)">
            <summary>
            Returns name of the permission specified by the enumeration value.
            </summary>
            <param name="permission">Enumeration value of the permission</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsCultureSpecificPermission(CMS.TreeEngine.NodePermissionsEnum)">
            <summary>
            Indicates if given document permission is culture specific.
            </summary>
            <param name="permission">Permission</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.GetPermissionColumnName(CMS.TreeEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets name of the column for given permission.
            </summary>
            <param name="permission">Permission</param>
            <param name="cultureCode">Culture code of the permisson</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterSearchResults(Lucene.Net.Documents.Document,System.Int32,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.ArrayList,System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns 1 if current iDocument should be added to the filtered results, returns 2 if current document should be added but
            position should be decreased
            </summary>
            <param name="doc">IDocumnet</param>
            <param name="position">Position in hits collection</param>
            <param name="globalPermissions">Collection of global permissions</param>
            <param name="classIDPermissionsSites">Collection of class ids permissions</param>
            <param name="ACLIDPermissionsSites">ACL Ids permissions</param>
            <param name="cultures">Cultures helper collection</param>
            <param name="results">Filtered collection</param>
            <param name="culture">Required culture</param>
            <param name="defaultCulture">Default culture</param>
            <param name="user">User info</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.FilterDataSetByPermissions(System.Data.DataSet,CMS.TreeEngine.NodePermissionsEnum[],CMS.SiteProvider.UserInfo,System.Boolean,System.Boolean,System.String)">
            <summary>
            Filters all tables of the given DataSet and returns only those records for which the user was granted with required permissions.
            </summary>
            <param name="sourceDataSet">Source DataSet</param>
            <param name="permissions">List of required permission</param>
            <param name="userInfo">Current user info object</param>
            <param name="allowOwner">If true, documents the owner of which is the given user are not filtered out even if the user has not the permission</param>
            <param name="deleteRecords">If true, the filtered records are deleted from the DataSet. If false, the filtered records are marked with a flag</param>
            <param name="cultureCodes">Culture codes separated by ';' to preform permissions check separately for each culture</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.HasUserCultureAllowed(CMS.TreeEngine.NodePermissionsEnum,System.String,CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user has allowed specified culture.
            </summary>
            <param name="permission">Permission</param>
            <param name="cultureCode">Culture code</param>
            <param name="user">User info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.IsDocumentAllowed(CMS.SiteProvider.UserInfo,CMS.TreeEngine.NodePermissionsEnum,System.String,System.String,System.Boolean,CMS.TreeEngine.AuthorizationResultEnum,System.Boolean)">
            <summary>
            Checks whether document is allowed.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="permission">Permission to check</param>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="isAuthorizedByClassName">Indicates if authorized by class permissions</param>
            <param name="isAuthorizedByACL">Indicates ACL permissions authorization result</param>
            <param name="globalPermissions">If user has global permissions</param>
        </member>
        <member name="M:CMS.TreeEngine.TreeSecurityProvider.GetAuthorizationResultKey(CMS.SiteProvider.UserInfo,System.Int32,CMS.TreeEngine.NodePermissionsEnum,System.String)">
            <summary>
            Gets the authorization result key for request.
            </summary>
            <param name="userInfo">User info object</param>
            <param name="nodeId">Node identifier</param>
            <param name="permission">Permission type</param>
            <param name="cultureCode">Culture code of document</param>
            <returns>Key for retrieving authorization result</returns>
        </member>
    </members>
</doc>
