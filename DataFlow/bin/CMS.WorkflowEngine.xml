<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.WorkflowEngine</name>
    </assembly>
    <members>
        <member name="F:CMS.WorkflowEngine.BookingEventListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.BookingEventListInfo.#ctor">
            <summary>
            Constructor - Creates an empty BookingEventListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.BookingEventListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BookingEventListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.BookingEventListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.WorkflowEngine.ContentDocument">
            <summary>
            General container for the content document.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ContentDocument.isInDocumentHelper">
            <summary>
            If true, the document is currently in the document helper and should call normal methods.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.#ctor">
            <summary>
            Constructor. This constructor shouldn't be used by your code, it serves for internal purposes. Use ContentDocument.NewDocument instead.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.#ctor(System.String)">
            <summary>
            Constructor. Use it to create a new node.
            </summary>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.#ctor(System.Data.DataRow,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new TreeNode instance which must inherit the TreeNode class.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.New(System.String)">
            <summary>
            Creates new document instance.
            </summary>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.New(System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new document instance.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.New(System.Data.DataRow,System.String)">
            <summary>
            Creates new document instance.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.New(System.Data.DataRow,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new document instance.
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Insert(CMS.TreeEngine.TreeNode)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parent">Parent node</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Insert(CMS.TreeEngine.TreeNode,System.Boolean)">
            <summary>
            Inserts current node under specified parent node.
            </summary>
            <param name="parent">Parent node</param>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the insert operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.InsertAsNewCultureVersion">
            <summary>
            Inserts current node as new culture version of the same document.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.InsertAsNewCultureVersion(System.Boolean)">
            <summary>
            Inserts current node as new culture version of the same document.
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.InsertAsLink(CMS.TreeEngine.TreeNode,System.Int32,System.Int32)">
            <summary>
            Inserts current node under specified parent node as a link to the document.
            </summary>
            <param name="parent">Parent node</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the InsertAsLink operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.InsertAsLink(CMS.TreeEngine.TreeNode,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Inserts current node under specified parent node as a link to the document.
            </summary>
            <param name="parent">Parent node</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
            <remarks>Use this method only for creating a new node that doesn't exist yet. The standard path properties of the node are not used during the InsertAsLink operation and they are overwritten with new values.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Update">
            <summary>
            Updates node data in the database.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Update(System.Boolean)">
            <summary>
            Updates node data in the database.
            </summary>
            <param name="useDocumentHelper">If true, the document helper is used for the operation to handle workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Destroy">
            <summary>
            Destroys the document with its version history. Deletes only this culture version of the document to the recycle bin, including the bound product
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Delete(System.Boolean)">
            <summary>
            Deletes the document to the recycle bin. Deletes only this culture version of the document to the recycle bin, including the bound product
            </summary>
            <param name="preserveData">Preserve the document data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Delete(System.Boolean,System.Boolean)">
            <summary>
            Deletes the document to the recycle bin. Deletes only this culture version of the document to the recycle bin, including the bound product
            </summary>
            <param name="preserveData">Preserve the document data</param>
            <param name="useDocumentHelper">If true, the document helper is used</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Delete(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Deletes the document
            </summary>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="deleteProduct">Delete product</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.GetTreeNodeRepository">
            <summary>
            Gets the new repository for the given document.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.CheckIn(System.String,System.String)">
            <summary>
            Checks-in the document
            </summary>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.CheckOut">
            <summary>
            Checks-out the document
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.UndoCheckOut">
            <summary>
            Rolls back the checkout operation of the document
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.MoveToPreviousStep(System.String)">
            <summary>
            Moves the document to a previous step in the worklow (rejects the document)
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.MoveToNextStep(System.String)">
            <summary>
            Moves the document to a next step in the workflow (sends the document to approval, approves or publishes the document based on the current workflow status)
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentDocument.Archive(System.String)">
            <summary>
            Rolls back the checkout operation of the document
            </summary>
            <param name="comment">Comment</param>
        </member>
        <member name="E:CMS.WorkflowEngine.ContentDocument.OnNewDocument">
            <summary>
            Fires when the new node is instantiated,.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ContentDocument.Parent">
            <summary>
            Parent document.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ContentDocument.ConnectedObjects">
            <summary>
            Connected objects.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.DocumentCollection`1">
            <summary>
            Generic strongly typed info object collection
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.DocumentCollection">
            <summary>
            Document collection.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentCollection.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentCollection.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentCollection.#ctor(System.String,CMS.TreeEngine.TreeNode,CMS.SettingsProvider.ICMSStorage)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="parentDocument">Parent document node</param>
            <param name="parentStorage">Parent storage</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentCollection.CreateNewObject(System.Data.DataRow)">
            <summary>
            Creates new instance of the ensapsulated object.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentCollection.GetData(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the data for the collection.
            </summary>
            <param name="where">Where condition</param>
            <param name="offset">Starting offset for the data</param>
            <param name="maxRecords">Maximum number of records to get</param>
            <param name="totalRecords">Returning total number of records</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentCollection`1.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentCollection`1.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentCollection`1.GetEnumerator">
            <summary>
            Gets the strongly typed enumerator for the collection
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.DocumentDataSet">
            <summary>
            DocumentDataSet class. Enhancement to DataSet to provide strongly typed collection side-by-side with the data.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentDataSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentDataSet.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentDataSet.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor, creates new DataSet using data from the given DataSet
            </summary>
            <param name="className">Default class name for the documents (if ClassName column is not available)</param>
            <param name="sourceData">Source data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentDataSet.NewCollection">
            <summary>
            Creates new collection of the objects
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentDataSet.Clone">
            <summary>
            Clones the DataSet
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentDataSet.GetEnumerator">
            <summary>
            Gets the strongly typed enumerator for the collection
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.DocumentListInfo.TYPEINFO">
            <summary>
            Type information (Not complete - some information is missing).
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentListInfo.#ctor">
            <summary>
            Constructor - Creates an empty DocumentListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new DocumentListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.WorkflowEngine.DocumentRepository">
            <summary>
            Repository of the documents with workflow support.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentRepository.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentRepository.#ctor(CMS.TreeEngine.TreeNode)">
            <summary>
            Constructor.
            </summary>
            <param name="parentDocument">Parent document</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentRepository.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentRepository.GetRootDocument">
            <summary>
            Gets the root document from the database.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentRepository.NewCollection(System.String)">
            <summary>
            Creates new collection for the data.
            </summary>
            <param name="type">Type of the collection</param>
        </member>
        <member name="T:CMS.WorkflowEngine.NewDocumentEventArgs">
            <summary>
            New document event arguments
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.NewDocumentEventArgs.DataRow">
            <summary>
            DataRow with the data
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.NewDocumentEventArgs.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.NewDocumentEventArgs.TreeProvider">
            <summary>
            Tree provider
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.NewDocumentEventArgs.Document">
            <summary>
            Returning the new document
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.RecycleBinListInfo">
            <summary>
            Data container class for document recycle bin.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.RecycleBinListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.RecycleBinListInfo.#ctor">
            <summary>
            Constructor - Creates an empty RecycleBinListInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.RecycleBinListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the RecycleBinListInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.RecycleBinListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="P:CMS.WorkflowEngine.RecycleBinListInfo.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowEventArgs">
            <summary>
            Workflow event arguments
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEventArgs.TreeProvider">
            <summary>
            Tree provider
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEventArgs.Document">
            <summary>
            Document
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEventArgs.Attachment">
            <summary>
            Document attachment, used where it makes sense: Save attachment version
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEventArgs.PreviousStep">
            <summary>
            Previous workflow step, used where it makes sense: After approve, After reject
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEventArgs.VersionHistory">
            <summary>
            Version history info record, used where it makes sense: Save version
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEventArgs.VersionNumber">
            <summary>
            Version number, used where it makes sense: Save version
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEventArgs.VersionComment">
            <summary>
            Version comment, used where it makes sense: Save version
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowEvents">
            <summary>
            Workflow events
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.CheckOut">
            <summary>
            Fires when the document is checked out
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.CheckIn">
            <summary>
            Fires when the document is checked in
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.UndoCheckOut">
            <summary>
            Fires when the undo checkout is performed
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.Approve">
            <summary>
            Fires when the document is approved (moved to next step)
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.Reject">
            <summary>
            Fires when the document is rejected (moved to previous step)
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.Publish">
            <summary>
            Fires when a version of the document is published
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.SaveVersion">
            <summary>
            Fires when a version of the document is saved (during DocumentHelper.UpdateDocument under workflow etc.)
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.SaveAttachmentVersion">
            <summary>
            Fires when a new attachment is added to the document or and attachment is updated (during DocumentHelper.AddAtachment under workflow etc.)
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEvents.RemoveAttachmentVersion">
            <summary>
            Fires when an attachment is removed from he document (during DocumentHelper.DeleteAtachment under workflow etc.)
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHandler">
            <summary>
            Workflow handler
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHandler.StartEvent(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHandler.StartEvent(CMS.TreeEngine.TreeNode,CMS.TreeEngine.AttachmentInfo,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="attachment">Attachment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHandler.StartEvent(CMS.TreeEngine.TreeNode,System.String@,System.String@,CMS.TreeEngine.TreeProvider)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="T:CMS.WorkflowEngine.SimpleWorkflowHandler">
            <summary>
            Simple Workflow handler
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.SimpleWorkflowHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.SimpleWorkflowHandler.#ctor(CMS.WorkflowEngine.SimpleWorkflowHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.WorkflowEngine.SimpleWorkflowHandler.StartEvent(CMS.TreeEngine.TreeNode)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="document">Document</param>
        </member>
        <member name="T:CMS.WorkflowEngine.AttachmentHistoryInfo">
            <summary>
            AttachmentHistory data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AttachmentHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AttachmentHistoryInfo.mAttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty AttachmentHistory structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the AttachmentHistory object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentSize">
            <summary>
            Size of the attachment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentExtension">
            <summary>
            Extension of the attachment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentName">
            <summary>
            Name of the attachment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentMimeType">
            <summary>
            MIME type of the attachment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentBinary">
            <summary>
            Binary data of the attachment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentDocumentID">
            <summary>
            Related document Document ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentImageWidth">
            <summary>
            Width of the attachment image.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentImageHeight">
            <summary>
            Height of the attachment image.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentGUID">
            <summary>
            GUID of the attachment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentIsUnsorted">
            <summary>
            Indicates if attachment is unsorted attachment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentOrder">
            <summary>
            Stores the attachment order.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentGroupGUID">
            <summary>
            Holds the GUID of the document field (group) under which the grouped attachment belongs.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentHistoryID">
            <summary>
            History ID of the attachment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentHash">
            <summary>
            Attachment hash.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentTitle">
            <summary>
            Attachment title.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentDescription">
            <summary>
            Attachment description.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AttachmentHistoryInfo.AttachmentLastModified">
            <summary>
            Attachment last modified.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AttachmentHistoryInfoProvider">
            <summary>
            Class providing attachment history management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfoProvider.GetAttachmentHistory(System.Int32)">
            <summary>
            Returns the AttachmentHistory structure for the specified attachment history.
            </summary>
            <param name="attachmentHistoryId">ID of attachment history</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfoProvider.SetAttachmentHistory(CMS.WorkflowEngine.AttachmentHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified attachment history.
            </summary>
            <param name="attachmentHistory">AttachmentHistory to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfoProvider.DeleteAttachmentHistory(CMS.WorkflowEngine.AttachmentHistoryInfo)">
            <summary>
            Deletes specified attachment history.
            </summary>
            <param name="attachmentHistoryObj">AttachmentHistory object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfoProvider.DeleteAttachmentHistory(System.Int32)">
            <summary>
            Deletes specified attachment history.
            </summary>
            <param name="attachmentHistoryId">ID of attachment history</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfoProvider.MoveAttachmentUp(System.Guid,System.Int32)">
            <summary>
            Moves attachment history up.
            </summary>
            <param name="attachmentGuid">GUID of attachment history</param>
            <param name="versionHistoryId">ID of version history</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfoProvider.MoveAttachmentDown(System.Guid,System.Int32)">
            <summary>
            Moves attachment history down.
            </summary>
            <param name="attachmentGuid">GUID of attachment history</param>
            <param name="versionHistoryId">ID of version history</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfoProvider.InitAttachmentOrderAndParameters(System.Guid,System.Int32)">
            <summary>
            Initializes sorting order of attachment histories.
            </summary>
            <param name="attachmentGuid">GUID of attachment history</param>
            <param name="versionHistoryId">ID of version history</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AttachmentHistoryInfoProvider.GetAttachmentHistories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all attachment histories.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="T:CMS.WorkflowEngine.ContentPublisher">
            <summary>
            Provides an ITask interface for the content publishing.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ContentPublisher.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the publish action.
            </summary>
            <param name="task">Task to process</param>
        </member>
        <member name="T:CMS.WorkflowEngine.DocumentSynchronizationHelper">
            <summary>
            Class containing document synchronization logic.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.DocumentSynchronizationHelper.mSynchronizeSharedTemplatesWithDocuments">
            <summary>
            Indicates whether shared template should be synchronized with document.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogContentChanges(System.String)">
            <summary>
            Indicates if logging staging tasks for content is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.CheckIntegrationLogging">
            <summary>
            Indicates if the integration task should be logged.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.CheckStagingLogging(System.String,System.Int32,System.Int32)">
            <summary>
            Indicates if the integration task should be logged.
            </summary>
            <param name="siteName"></param>
            <param name="siteId"></param>
            <param name="serverId"></param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.GetTaskTitle(CMS.SettingsProvider.TaskTypeEnum,CMS.TreeEngine.TreeNode)">
            <summary>
            Gets document staging task title.
            </summary>
            <param name="taskType">Task type</param>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.GetDocumentXML(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TranslationHelper,CMS.TreeEngine.TreeProvider,CMS.SettingsProvider.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,CMS.Synchronization.TaskParameters,System.String)">
            <summary>
            Gets XML of a given node.
            </summary>
            <param name="node">Document node</param>
            <param name="th">Translations (if null TranslationHelper will be created and filled)</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteName">Site name corresponding to document</param>
            <returns>XML representing document</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.GetDocumentDataSet(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TranslationHelper,CMS.SettingsProvider.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,CMS.TreeEngine.TreeProvider,CMS.Synchronization.TaskParameters,System.String)">
            <summary>
            Gets a dataset with data of a node and corresponding translation helper.
            </summary>
            <param name="node">Document node</param>
            <param name="th">Translations (if null TranslationHelper will be created and filled)</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="tree">Tree provider</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteName">Documents site name</param>
            <returns>DataSet representing document</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TaskTypeEnum,System.Boolean,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters,System.Boolean)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>List of synchronization tasks</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TaskTypeEnum,CMS.TreeEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters,System.Boolean)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>Returns new synchronization task</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(System.String,System.String,System.Boolean,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,System.Boolean)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the save level as the document).
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.SettingsProvider.TaskTypeEnum,CMS.TreeEngine.TreeProvider,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID</param>
            <param name="keepTaskData">Indicates if task data should be kept in the objects</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <returns>Returns list of the ISynchronizationTasks created</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.SettingsProvider.TaskTypeEnum,System.Boolean,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,System.Boolean,CMS.Synchronization.TaskParameters,System.Boolean,System.String)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="keepTaskData">Indicates if task data should be kept in the objects</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <param name="where">Where condition</param>
            <returns>Returns collection of the tasks created</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(System.String,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the same level as the document).
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TaskTypeEnum,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates the synchronization task for the specified document node, creates the tasks for all the enabled servers when task logging is on.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.SettingsProvider.TaskTypeEnum,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <returns>Returns list of the ISynchronizationTasks created</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChangeOrder(System.String,System.String,System.Boolean,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Logs the synchronization after the node order change (logs all document nodes on the save level as the document).
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="serverId">Server ID</param>
            <param name="tree">Tree provider</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <param name="workerCall">Indicates if the method is called from worker</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChange(System.String,System.String,CMS.SettingsProvider.TaskTypeEnum,System.Boolean,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,System.Boolean,CMS.Synchronization.TaskParameters,System.Boolean,System.String,System.Boolean)">
            <summary>
            Creates the synchronization tasks for the specified document tree.
            </summary>
            <param name="siteName">Documents site name</param>
            <param name="aliasPath">Starting alias path</param>
            <param name="taskType">Task type</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID</param>
            <param name="keepTaskData">Indicates if task data should be kept in the objects</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <param name="taskParams">Additional task parameters</param>
            <param name="where">Where condition</param>
            <param name="workerCall">Indicates if the method is called from worker</param>
            <returns>Returns collection of the tasks created</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogDocumentChange(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TaskTypeEnum,System.Boolean,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters,System.Boolean,System.Boolean)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="logStaging">Indicates if the staging task should be logged</param>
            <param name="logIntegration">Indicates if the integration task should be logged</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="runAsync">Indicates if the logging should run asynchronously</param>
            <param name="workerCall">Indicates if the method is called from worker</param>
            <returns>List of synchronization tasks</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogSynchronization(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TaskTypeEnum,CMS.TreeEngine.TreeProvider,System.Int32,CMS.Synchronization.TaskParameters)">
            <summary>
            Creates the synchronization task for the specified document node and specified server with extra task parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="taskType">Task type</param>
            <param name="tree">Tree provider</param>
            <param name="serverId">Server ID to use for synchronization</param>
            <param name="taskParams">Extra task parameters to use</param>
            <returns>Returns new synchronization task</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.ProcessSyncTasks(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TaskTypeEnum,System.Int32,System.Collections.Generic.Dictionary{System.String,CMS.SynchronizationEngine.TaskProcessTypeEnum})">
            <summary>
            Processes synchronous task subscriptions.
            </summary>
            <param name="node">Document to match</param>
            <param name="siteId">Site identifier</param>
            <param name="taskType">Type of task to match</param>
            <param name="connectors">Connectors to process</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogIntegration(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TaskTypeEnum,CMS.TreeEngine.TreeProvider,CMS.Synchronization.TaskParameters,System.Int32)">
            <summary>
            Logs integration task.
            </summary>
            <param name="node">Document to log</param>
            <param name="taskType">Type of task to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="siteId">Site identifier</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogInternalIntegration(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,CMS.SettingsProvider.TaskTypeEnum,CMS.Synchronization.TaskParameters,CMS.SynchronizationEngine.TaskProcessTypeEnum,System.Collections.Generic.List{System.String})">
            <summary>
            Logs the integration task for the given object.
            </summary>
            <param name="node">Document to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="taskParams">Extra task parameters to use</param>
            <param name="taskProcessType">Processing type</param>
            <param name="connectorNames">Integration connector names for which to log the synchronization (nothing is logged when no connector is specified)</param>
            <returns>Returns new integration task</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationHelper.LogExternalIntegration(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,CMS.SettingsProvider.TaskTypeEnum,CMS.Synchronization.TaskDataTypeEnum,IntegrationProcessTypeEnum,System.String,CMS.SettingsProvider.TranslationHelper,System.String)">
            <summary>
            Logs the integration task for the given object.
            </summary>
            <param name="node">Document to log</param>
            <param name="tree">Tree provider</param>
            <param name="taskType">Task type</param>
            <param name="dataType">Type of data</param>
            <param name="result">What to do when processing fails</param>
            <param name="connectorName">Integration connector names for which to log the synchronization (nothing is logged when no connector is specified)</param>
            <param name="th">Translation helper</param>
            <param name="siteName">Site name of the target site (for site objects)</param>
            <returns>Returns new integration task</returns>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationHelper.SynchronizeSharedTemplatesWithDocuments">
            <summary>
            Gets or sets the value that indicates whether shared templates should be synchronized with documents.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.DocumentSynchronizationWorker">
            <summary>
            Class for asynchronous document synchronization logging.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationWorker.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentSynchronizationWorker.Run">
            <summary>
            Runs the action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.SiteName">
            <summary>
            Site name (optional).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.AliasPath">
            <summary>
            Node alias path (optional).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.TaskType">
            <summary>
            Type of the task.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.Tree">
            <summary>
            Tree provider.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.Node">
            <summary>
            Tree node (optional).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.ServerID">
            <summary>
            Server ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.KeepTaskData">
            <summary>
            Indicates if task data should be kept.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.TaskParameters">
            <summary>
            Additional task parameters.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.WhereCondition">
            <summary>
            Where condition for multiple operations.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.OrderChange">
            <summary>
            If true, the task runs the order change task.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.Multiple">
            <summary>
            If true, the task runs the multiple log tasks.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.LogStaging">
            <summary>
            Indicates if the staging task should be logged.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.DocumentSynchronizationWorker.LogIntegration">
            <summary>
            Indicates if the integration task should be logged.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.VersionHistoryListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryListInfo.#ctor">
            <summary>
            Constructor - Creates an empty VersionHistoryListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new VersionHistoryListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHistoryListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowHistoryListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowHistoryListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowScopeListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowScopeListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowScopeListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowModule">
            <summary>
            Module registration.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowException">
            <summary>
            Special workflow exception.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:CMS.WorkflowEngine.FileImport">
            <summary>
            Class providing methods for file import.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.FileImport.ImportFiles(System.String,System.String,System.String,System.String[],System.String[],System.Int32,System.Boolean)">
            <summary>
            Imports the set of files.
            </summary>
            <param name="siteName">Site name</param>
            <param name="targetAliasPath">Target alias path</param>
            <param name="cultureCode">Culture code</param>
            <param name="fileList">File list</param>
            <param name="relativePathList">List of files paths that are relative to fileimport folder. Used by fileimport to create tree structure that represents sub-tree of fileimport folder. If this feature is not necessary use null value</param>
            <param name="userId">User ID</param>
            <param name="deleteImportedFile">Indicates if physical file should be deleted after import</param>
            <remarks>Path values are filesystem paths (with \ as the path separator)</remarks>
        </member>
        <member name="T:CMS.WorkflowEngine.VersionAttachmentInfo">
            <summary>
            Version attachment binding info.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.VersionAttachmentInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionAttachmentInfo.#ctor">
            <summary>
            Constructor - Creates an empty CultureSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionAttachmentInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CultureSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionAttachmentInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionAttachmentInfo.AttachmentHistoryID">
            <summary>
            Attachment history ID.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.VersionHistoryInfo">
            <summary>
            VersionHistoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.VersionHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty VersionHistoryInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the VersionHistoryInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.NodeXML">
            <summary>
            Node XML.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.PublishFrom">
            <summary>
            Publish from date.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.ToBePublished">
            <summary>
            To be published date.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.ModifiedByUserID">
            <summary>
            Modified by user ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.DeletedByUserID">
            <summary>
            Deleted by user ID (for recycle bin).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.WasPublishedTo">
            <summary>
            Was published to date.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.NodeSiteID">
            <summary>
            Site ID of the node.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.ModifiedWhen">
            <summary>
            Modified when date.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.DeletedWhen">
            <summary>
            Deleted when date (for recycle bin).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.PublishTo">
            <summary>
            Publish to date.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionNumber">
            <summary>
            Version number.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.DocumentNamePath">
            <summary>
            Document name path.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionComment">
            <summary>
            Version comment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.WasPublishedFrom">
            <summary>
            Was published from date.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.DocumentID">
            <summary>
            Document ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionDocumentName">
            <summary>
            Version document name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionDocumentType">
            <summary>
            Version document type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionClassID">
            <summary>
            Version class ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionMenuRedirectUrl">
            <summary>
            Version menu redirection URL.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionWorkflowID">
            <summary>
            Version workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionWorkflowStepID">
            <summary>
            Version workflow step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionHistoryInfo.VersionNodeAliasPath">
            <summary>
            Version node aliaspath.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.VersionHistoryInfoProvider">
            <summary>
            Class providing VersionHistoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.GetVersionHistoryInfo(System.Int32)">
            <summary>
            Returns the VersionHistoryInfo structure for the specified versionHistory.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.SetVersionHistoryInfo(CMS.WorkflowEngine.VersionHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified versionHistory.
            </summary>
            <param name="versionHistory">VersionHistory to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.GetRecycleBin(System.Int32,System.Int32)">
            <summary>
            Gets recycle bin for specified user.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="userId">ID of user</param>
            <returns>Recycle bin for specified user and site</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.GetRecycleBin(System.Int32,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets recycle bin for specified user.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="userId">ID of user</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <returns>Recycle bin for specified user and site</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.GetRecycleBin(System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            Gets recycle bin for specified user.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="userId">ID of user</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <param name="modifiedFrom">Lower time bound</param>
            <param name="modifiedTo">Upper time bound</param>
            <returns>Recycle bin for specified user and site</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.GetRecycleBin(System.Int32)">
            <summary>
            Gets recycle bin for specified site.
            </summary>
            <param name="siteId">ID of site</param>
            <returns>Recycle bin for specified site</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.GetRecycleBin(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets recycle bin for specified site.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select only top N rows</param>
            <param name="columns">Select only specified columns</param>
            <returns>Recycle bin for specified site</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.DeleteVersionHistoryInfo(CMS.WorkflowEngine.VersionHistoryInfo)">
            <summary>
            Deletes specified versionHistory.
            </summary>
            <param name="versionHistoryObj">VersionHistory object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.DeleteVersionHistoryInfo(System.Int32)">
            <summary>
            Deletes specified versionHistory.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionHistoryInfoProvider.GetVersionHistories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all version histories.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHistoryInfo">
            <summary>
            Class to hold the workflow history record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.WorkflowHistoryID">
            <summary>
            Workflow history ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepDisplayName">
            <summary>
            Step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepName">
            <summary>
            Step name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.WorkflowID">
            <summary>
            Wortkflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.ApprovedByUserID">
            <summary>
            Approved by user ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.ApprovedWhen">
            <summary>
            Approved when.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.Comment">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.WasRejected">
            <summary>
            Was rejected.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.DocumentHelper">
            <summary>
            Class providing document management methods.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.DocumentHelper.GETDOCUMENTS_REQUIRED_COLUMNS">
            <summary>
            Columns required for the get documents operation to perform successfully in any case.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocument(System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the current document version, if versioning used, gets the current VersionHistory record, if not, gets the record directly from the database.
            </summary>
            <param name="documentId">Document ID to retrieve</param>
            <param name="tree">TreeProvider to use for the DB access</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocument(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the current document version, if versioning used, gets the current VersionHistory record, if not, gets the record directly from the database.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="columns">Columns to be selected</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocument(CMS.TreeEngine.NodeSelectionParameters,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the current document version, if versioning used, gets the current VersionHistory record, if not, gets the record directly from the database.
            </summary>
            <param name="parameters">Parameters for the node selection</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocument(System.Int32,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the current document version, if versioning used, gets the current VersionHistory record, if not, gets the record directly from the database.
            </summary>
            <param name="nodeId">Node ID to retrieve</param>
            <param name="cultureCode">Document culture code</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocument(System.Int32,System.String,System.Boolean,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the current document version, if versioning used, gets the current VersionHistory record, if not, gets the record directly from the database.
            </summary>
            <param name="nodeId">Node ID to retrieve</param>
            <param name="cultureCode">Document culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document if specified culture not found</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the latest version of the document if versioning is used or the document itself if not.
            </summary>
            <param name="node">Document node</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the DataSet of the documents with latest version data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the DataSet of the documents with latest version data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Top N rows</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the DataSet of the documents with latest version data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Top N rows</param>
            <param name="tree">Tree provider</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocuments(CMS.TreeEngine.NodeSelectionParameters,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the DataSet of the documents with latest version data.
            </summary>
            <param name="parameters">Selection parameters</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the DataSet of the documents with latest version data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to the Node GUID</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Specify if the related node is located on the left side of the relationship</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,System.Int32,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the DataSet of the documents with latest version data.
            </summary>
            <param name="siteName">Nodes site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Nodes culture code</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to the Node GUID</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Specify if the related node is located on the left side of the relationship</param>
            <param name="topN">Top N rows</param>
            <param name="columns"></param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetVersionsSelectQuery(CMS.TreeEngine.TreeProvider,System.String)">
            <summary>
            Gets the versions select query for the given Tree provider.
            </summary>
            <param name="tree">Tree provider</param>
            <param name="classNames">Class names</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.ApplyVersionData(System.Data.DataSet,CMS.TreeEngine.TreeProvider)">
            <summary>
            Applies the version data to the given DataSet. Expects the NodeXML column with the XML version data.
            </summary>
            <param name="ds">Dataset with the data</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.ApplyVersionData(System.Data.DataSet,System.Boolean,CMS.TreeEngine.TreeProvider)">
            <summary>
            Applies the version data to the given DataSet. Expects the NodeXML column with the XML version data.
            </summary>
            <param name="ds">Dataset with the data</param>
            <param name="coupledData">Apply coupled data</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.UpdateDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider)">
            <summary>
            Updates the current version of the document within the database, if versioning used, updates the last version within the VersionHistory, if not, directly updates the database document record.
            </summary>
            <param name="node">Document to update</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.UpdateDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,System.String)">
            <summary>
            Updates the current version of the document within the database, if versioning used, updates the last version within the VersionHistory, if not, directly updates the database document record.
            </summary>
            <param name="node">Document to update</param>
            <param name="tree">TreeProvider to use</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.UpdateDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Updates the current version of the document within the database, if versioning used, updates the last version within the VersionHistory, if not, directly updates the database document record.
            </summary>
            <param name="node">Document to update</param>
            <param name="tree">TreeProvider to use</param>
            <param name="logSynchronization">If true, synchronization task should be logged even when workflow is used</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.UpdateDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,System.Boolean,System.String)">
            <summary>
            Updates the current version of the document within the database, if versioning used, updates the last version within the VersionHistory, if not, directly updates the database document record.
            </summary>
            <param name="node">Document to update</param>
            <param name="tree">TreeProvider to use</param>
            <param name="logSynchronization">If true, synchronization task should be logged even when workflow is used</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertDocument(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Inserts a new document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider)">
            <summary>
            Inserts a new document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNode">Parent node</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Inserts a new document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNode">Parent node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="allowCheckOut">If true, the check out of the document is allowed on the insert action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertNewCultureVersion(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider)">
            <summary>
            Inserts a new document culture version.
            </summary>
            <param name="node">Document node</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertNewCultureVersion(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,System.Boolean,System.Boolean)">
            <summary>
            Inserts a new document culture version.
            </summary>
            <param name="node">Document node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="createVersion">Create new version for document under worflow</param>
            <param name="allowCheckOut">If true, the checkout of the new document is allowed</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertDocumentAsLink(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Inserts a new linked document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertDocumentAsLink(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Inserts a new linked document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeChildNodes">Link also the node child nodes</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertDocumentAsLink(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider,System.Boolean,System.Boolean)">
            <summary>
            Inserts a new linked document.
            </summary>
            <param name="node">Document node</param>
            <param name="parentNodeId">Parent node ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeChildNodes">Link also the node child nodes</param>
            <param name="copyPermissions">Indicates if the document permissions should be copied</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.InsertDocumentAsLink(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Inserts a new linked document.
            </summary>
            <param name="node">Document node</param>
            <param name="parent">Parent node</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeChildNodes">Link also the node child nodes</param>
            <param name="copyPermissions">Indicates if the document permissions should be copied</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Deletes the given document.
            </summary>
            <param name="node">Document node to delete</param>
            <param name="tree">TreeProvider to use</param>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="deleteProduct">Delete product</param>
            <returns>Returns true if last culture (Tree record) has been deleted</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteDocument(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider,System.Boolean,System.Boolean,System.Boolean,System.String,System.Collections.ArrayList)">
            <summary>
            Deletes the given document.
            </summary>
            <param name="node">Document node to delete</param>
            <param name="tree">TreeProvider to use</param>
            <param name="deleteAllCultures">Delete all culture version of the specified document?</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="webRootFullPath">Full path to the web root folder</param>
            <param name="deletedNodeIDs">List of the deleted node IDs</param>
            <param name="deleteProduct">Delete product of the document</param>
            <returns>Returns true if last culture (Tree record) has been deleted</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.LogDocumentChange(CMS.TreeEngine.TreeNode,CMS.SettingsProvider.TaskTypeEnum,CMS.TreeEngine.TreeProvider)">
            <summary>
            If synchronization logging is enabled, disables log context and logs the document change.
            </summary>
            <param name="node">Node to log</param>
            <param name="taskTypeEnum">Task type to log</param>
            <param name="tree">Tree provider object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.RemoveBlogPostDependencies(System.Int32)">
            <summary>
            Removes dependencies on blogs from specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.RemoveForumDependencies(System.Int32)">
            <summary>
            Remove document id from ad-hoc forum.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.RemovePersonalizationDependencies(System.Int32)">
            <summary>
            Removes user personalisation for specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.RemoveMessageBoardsDependencies(System.Int32)">
            <summary>
            Remove message boards.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteEventAttendees(System.Int32)">
            <summary>
            Deletes all event attendees of specified document.
            </summary>
            <param name="nodeId">Node ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteDocumentChildNodes(CMS.TreeEngine.TreeNode,System.Boolean,System.Boolean,CMS.TreeEngine.TreeProvider,System.String,System.Collections.ArrayList)">
            <summary>
            Deletes the child nodes of all culture versions under the specified parent node.
            </summary>
            <param name="node">Parent document node</param>
            <param name="destroyHistory">Destroy the document history?</param>
            <param name="deleteProduct">Delete document products</param>
            <param name="tree">TreeProvider to use</param>
            <param name="webRootFullPath">Path to the root of the web site</param>
            <param name="deletedNodeIDs">List of deleted node IDs</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.ClearWorkflowInformation(CMS.TreeEngine.TreeNode)">
            <summary>
            Clears the workflow information from the given Document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.ClearCheckoutInformation(CMS.TreeEngine.TreeNode)">
            <summary>
            Clears the checkout information from the given Document node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.MoveDocument(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Moves the specified document to the new location.
            </summary>
            <param name="node">Document node to move</param>
            <param name="targetParentNodeId">Target parent node ID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.MoveDocument(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Moves the specified document to the new location.
            </summary>
            <param name="node">Document node to move</param>
            <param name="targetParentNodeId">Target parent node ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="copyPermissions">Indicates if node permissions should be preserved</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.CopyDocument(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean,CMS.TreeEngine.TreeProvider)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Document node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.CopyDocument(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Document node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="tree">TreeProvider to use</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.CopyDocument(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Document node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="tree">TreeProvider to use</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="copyPermissions">Indicates if the document permissions should be copied</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.CopyDocument(CMS.TreeEngine.TreeNode,System.Int32,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Copies the node to the specified location.
            </summary>
            <param name="node">Document node to copy</param>
            <param name="targetParentNodeId">Target location</param>
            <param name="includeChildNodes">Copy also the node child nodes</param>
            <param name="tree">TreeProvider to use</param>
            <param name="newDocumentsOwner">Owner of the new documents</param>
            <param name="newDocumentsGroup">Group of the new documents</param>
            <param name="copyPermissions">Indicates if the document permissions should be copied</param>
            <param name="newDocumentName">New document name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.CopyDocumentCategories(System.Int32,System.Int32)">
            <summary>
            Copies categories from one document to another.
            </summary>
            <param name="originalDocumentId">Original document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.EnsureOwnAttachments(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeNode,System.String,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Creates document attachments for the given document when the attachments are bound to several documents.
            </summary>
            <param name="node">New document node</param>
            <param name="originalNode">Original document node</param>
            <param name="originalSiteName">Original node site name</param>
            <param name="tree">TreeProvider to use</param>
            <param name="processVersionHistory">Indicates if version history of the document should be processed</param>
            <remarks>This method is intended to be used only after the copy operation to separate the documents from each other</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.EnsureOwnVersion(CMS.TreeEngine.TreeNode,System.Collections.Hashtable,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates document version for the given document when the version is bound to several documents.
            </summary>
            <param name="node">Document node</param>
            <param name="guidTable">Attachment GUID conversion table, pairs [OldGUID->NewGUID]</param>
            <param name="tree">TreeProvider to use</param>
            <remarks>This method is intended to be used only after the copy operation to separate the documents from each other</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.ChangeDocumentToLink(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Changes the document to the link to another document.
            </summary>
            <param name="node">Document node</param>
            <param name="linkedNodeId">Node ID to link</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.EnsureBlogPostHierarchy(CMS.TreeEngine.TreeNode,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Ensures that the parent document of the blog post is blog month.
            </summary>
            <param name="blogPostNode">Blog post document</param>
            <param name="currentParentId">Node ID of the current parent node</param>
            <param name="tree">TreeProvider to use</param>
            <returns>ID of the new parent (blog month document)</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.EnsureBlogPostHierarchy(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider)">
            <summary>
            Ensures that the parent document of the blog post is blog month.
            </summary>
            <param name="blogPostNode">Blog post document</param>
            <param name="currentParentNode">Current parent document</param>
            <param name="tree">TreeProvider to use</param>
            <returns>ID of the new parent (blog month document if CMS.BlogMonth document type exists)</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.MoveDocumentToEditStep(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeProvider)">
            <summary>
            Moves document directly to the edit step.
            </summary>
            <param name="node">Document node</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(System.Guid,CMS.TreeEngine.TreeProvider,System.String)">
            <summary>
            Returns the latest version of the required attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID to retrieve</param>
            <param name="tree">TreeProvider to use</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(System.Guid,CMS.TreeEngine.TreeProvider,System.String,System.Boolean)">
            <summary>
            Returns the latest version of the required attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID to retrieve</param>
            <param name="tree">TreeProvider to use</param>
            <param name="siteName">Site name</param>
            <param name="includeBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(System.Guid,CMS.TreeEngine.TreeProvider,System.String,System.Boolean,CMS.TreeEngine.TreeNode@)">
            <summary>
            Returns the latest version of the required attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID to retrieve</param>
            <param name="tree">TreeProvider to use</param>
            <param name="siteName">Site name</param>
            <param name="includeBinary">Indicates if binary data should be included</param>
            <param name="node">Returning the document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(System.Guid,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the latest version of the required attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID to retrieve</param>
            <param name="versionHistoryId">Requires version history ID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(System.Guid,System.Int32,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Returns the latest version of the required attachment.
            </summary>
            <param name="attachmentGuid">Attachment GUID to retrieve</param>
            <param name="versionHistoryId">Requires version history ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeBinary">Indicates if binary column should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(System.Int32,System.String,System.Int32,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Returns the latest version of the required attachment.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="fileName">File name</param>
            <param name="versionHistoryId">Requires version history ID</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeBinary">Indicates if binary column should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(CMS.TreeEngine.TreeNode,System.Guid,CMS.TreeEngine.TreeProvider)">
            <summary>
            Returns the attachment for the given node.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID to retrieve</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(CMS.TreeEngine.TreeNode,System.Guid,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Returns the attachment for the given node.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID to retrieve</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachment(CMS.TreeEngine.TreeNode,System.String,CMS.TreeEngine.TreeProvider,System.Boolean)">
            <summary>
            Returns the attachment for the given node by file name.
            </summary>
            <param name="node">Document node</param>
            <param name="fileName">Attachment file name to retrieve</param>
            <param name="tree">TreeProvider to use</param>
            <param name="includeBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachments(CMS.TreeEngine.TreeNode,System.String,System.String,System.Boolean,CMS.TreeEngine.TreeProvider)">
            <summary>
            Gets attachments for given document filtered by the given parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="getBinary">Indicates if binary data should be included</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachments(CMS.TreeEngine.TreeNode,System.String,System.String,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32)">
            <summary>
            Gets attachments for given document filtered by the given parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="getBinary">Indicates if binary data should be included</param>
            <param name="tree">TreeProvider to use</param>
            <param name="topN">TopN parameter</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachments(CMS.TreeEngine.TreeNode,System.String,System.String,System.Boolean,CMS.TreeEngine.TreeProvider,System.Int32,System.String)">
            <summary>
            Gets attachments for given document filtered by the given parameters.
            </summary>
            <param name="node">Document node</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="getBinary">Indicates if binary data should be included</param>
            <param name="tree">TreeProvider to use</param>
            <param name="topN">TopN parameter</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteDocumentAttachments(System.String,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Deletes the attachments from the given documents, including versioning consideration.
            </summary>
            <param name="className">Document class name</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteAttachment(CMS.TreeEngine.TreeNode,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Deletes the attachment from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteAttachment(CMS.TreeEngine.TreeNode,System.Guid,CMS.TreeEngine.TreeProvider)">
            <summary>
            Deletes the attachment from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteAttachment(CMS.TreeEngine.TreeNode,System.String,System.Guid,CMS.TreeEngine.TreeProvider)">
            <summary>
            Deletes the attachment from the given document node, including versioning consideration.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">Attachment GUID (optional)</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddAttachment(CMS.TreeEngine.TreeNode,System.String,System.Web.HttpPostedFile,CMS.TreeEngine.TreeProvider)">
            <summary>
            Adds the attachment to the document, does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddAttachment(CMS.TreeEngine.TreeNode,System.String,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Adds the attachment to the document, does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddAttachment(CMS.TreeEngine.TreeNode,System.String,System.Web.HttpPostedFile,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the attachment to the document, does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddAttachment(CMS.TreeEngine.TreeNode,System.String,System.String,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the attachment to the document, does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddGroupedAttachment(CMS.TreeEngine.TreeNode,System.Guid,System.Guid,System.String,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the grouped attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="groupGuid">GUID of the attachment group</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddGroupedAttachment(CMS.TreeEngine.TreeNode,System.Guid,System.Guid,System.Web.HttpPostedFile,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the grouped attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="groupGuid">GUID of the attachment group</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddUnsortedAttachment(CMS.TreeEngine.TreeNode,System.Guid,System.String,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the usorted attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddUnsortedAttachment(CMS.TreeEngine.TreeNode,System.Guid,System.Web.HttpPostedFile,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the unsorted attachment to the document, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="file">Attachment file path</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.AddAttachment(CMS.TreeEngine.TreeNode,System.String,System.Guid,System.Guid,System.Object,CMS.TreeEngine.TreeProvider,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the attachment to the document, does not update the document to the database, updates the attachment if currently present.
            </summary>
            <param name="node">Document node</param>
            <param name="guidColumnName">Column containing the Attachment GUID (optional)</param>
            <param name="attachmentGuid">GUID of the attachment (optional)</param>
            <param name="groupGuid">GUID of the attachment group (optional)</param>
            <param name="file">Attachment file (HttpPostedFile, AttachmentInfo or file path)</param>
            <param name="tree">TreeProvider to use</param>
            <param name="width">New width of the image attachment (Use ImageHelper.AUTOSIZE to keep the width)</param>
            <param name="height">New height of the image attachment (Use ImageHelper.AUTOSIZE to keep the height)</param>
            <param name="maxSideSize">Maximal side size of the image attachment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetUniqueAttachmentFileName(CMS.TreeEngine.TreeNode,System.String,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
            Method gets unique attachment file name in the document scope.
            </summary>
            <param name="node">TreeNode object</param>
            <param name="fileName">Name of file</param>
            <param name="currentAttachmentId">Current attachment ID</param>
            <param name="tree">Tree object</param>
            <returns>Unique attachment name</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.IsUniqueAttachmentName(CMS.TreeEngine.TreeNode,System.String,System.String,System.Int32,CMS.TreeEngine.TreeProvider)">
            <summary>
             Finds out whether given attachment name is unique
            </summary>
             <param name="node">TreeNode object</param>
             <param name="fileName">Name of file</param>
             <param name="extension">Extension of file</param>
             <param name="currentAttachmentId">Current attachment ID</param>
             <param name="tree">Tree object</param>
             <returns>True if attachment name is unique</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.SaveTemporaryAttachments(CMS.TreeEngine.TreeNode,System.Guid,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Saves temporary attachments for given form.
            </summary>
            <param name="node">Document node</param>
            <param name="formGuid">GUID of the form</param>
            <param name="siteName">Site name</param>
            <param name="tree">TreeProvider to use</param>
            <returns>True if node was changed, false otherwise</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachmentUrl(CMS.TreeEngine.AttachmentInfo,System.Int32)">
            <summary>
            Returns the URL for the given attachment.
            </summary>
            <param name="attInfo">Attachment info structure</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.GetAttachmentUrl(System.Guid,System.Int32)">
            <summary>
            Returns the URL for the given attachment GUID.
            </summary>
            <param name="attGuid">Attachment GUID</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.UpdateAttachment(CMS.TreeEngine.TreeNode,System.Guid,System.Guid)">
            <summary>
            Updates the attachment reference to the new value within document node. For use with assigning the attachment new GUID value in special operations.
            </summary>
            <param name="node">Document node</param>
            <param name="oldGuid">Old attachment GUID</param>
            <param name="newGuid">New attachment GUID</param>
            <returns>Returns attachment GUID column name</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.MoveAttachmentUp(System.Guid,CMS.TreeEngine.TreeNode)">
            <summary>
            Moves attachment up (supports unordered, grouped and temporary attachments).
            </summary>
            <param name="attachmentGuid">GUID of attachment or attachment history</param>
            <param name="node">TreeNode under which attachments will be sorted</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.MoveAttachmentDown(System.Guid,CMS.TreeEngine.TreeNode)">
            <summary>
            Moves attachment down (supports unordered, grouped and temporary attachments).
            </summary>
            <param name="attachmentGuid">GUID of attachment or attachment history</param>
            <param name="node">TreeNode under which attachments will be sorted</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.CopyDocumentAttachments(CMS.TreeEngine.TreeNode,System.Guid,System.String)">
            <summary>
            Copies attachments of the given document as temporary attachments.
            </summary>
            <param name="node">Original document node</param>
            <param name="formGuid">Form GUID</param>
            <param name="siteName">Name of the site</param>
            <remarks>This method is intended to be used only during new culture version of the document creation</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.CopyNodeData(CMS.TreeEngine.TreeNode,CMS.TreeEngine.TreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Performs the data copying between two nodes.
            </summary>
            <param name="sourceNode">Source node</param>
            <param name="destNode">Destination node</param>
            <param name="treeData">Indicates if CMS_Tree data should be copied</param>
            <param name="documentData">Indicates if CMS_Document data should be copied</param>
            <param name="coupledData">Indicates if Coupled table data should be copied</param>
            <param name="copyNotVersionedData">Indicates if not versioned data columns should be copied</param>
            <param name="copyVersionedData">Indicates if versioned data columns should be copied</param>
            <param name="copySystemTreeData">Indicates if system tree data columns should be copied</param>
            <param name="copySystemDocumentData">Indicates if system document data columns should be copied</param>
            <param name="excludeColumns">Columns to exclude from copying, column names separated by semicolon</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.EnsureDocumentTags(System.Int32,CMS.TreeEngine.TreeNode@)">
            <summary>
            Ensures the move action target contains all of the tag groups and tags related to the document.
            </summary>
            <param name="newSiteID">ID of the target site</param>        
            <param name="movedNode">Node to move</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteSiteTree(System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Deletes the complete site tree including the version history.
            </summary>
            <param name="siteName">Site name</param>
            <param name="tree">Tree to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.DeleteSiteTree(System.String,CMS.TreeEngine.TreeProvider,CMS.WorkflowEngine.DocumentHelper.OnAfterDocumentDeletedEventHandler,System.String)">
            <summary>
            Deletes the complete site tree including the version history.
            </summary>
            <param name="siteName">Site name</param>
            <param name="tree">Tree to delete</param>
            <param name="deleteCallback">Callback function raised when document has been deleted</param>
            <param name="webRootFullPath">Full path to the web root folder</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.ColumnExistsInSystemTable(System.String)">
            <summary>
            Checks whether specified column exists in view 'View_CMS_Tree_Joined'.
            </summary>
            <param name="columnName">Column name to check</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.Init">
            <summary>
            Initializes the workflow engine.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.NewDocument(System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new instance of a document
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.DocumentHelper.NewDocument(System.Data.DataRow,System.String,CMS.TreeEngine.TreeProvider)">
            <summary>
            Creates new instance of a document
            </summary>
            <param name="dataRow">Datarow containing both tree node and coupled table</param>
            <param name="className">Class name in format application.class</param>
            <param name="treeProvider">Tree provider used to access data</param>
        </member>
        <member name="T:CMS.WorkflowEngine.DocumentHelper.OnAfterDocumentDeletedEventHandler">
            <summary>
            Occurs after document is deleted.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="T:CMS.WorkflowEngine.VersionManager">
            <summary>
            Class to provide node versioning management.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.VersionManager.mTreeProvider">
            <summary>
            TreeProvider to use for DB access.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.VersionManager.mWorkflowManager">
            <summary>
            WorkflowManager for workflow managing.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.VersionManager.mNonVersionedCoupledColumns">
            <summary>
            Non-versioned coupled columns list.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.#ctor">
            <summary>
            Constructor - Creates version manager.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.#ctor(CMS.TreeEngine.TreeProvider)">
            <summary>
            Constructor - Creates version manager.
            </summary>
            <param name="tree">TreeProvider instance</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetVersion(System.Int32)">
            <summary>
            Returns specified history version.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetVersion(System.Int32,CMS.TreeEngine.TreeNode)">
            <summary>
            Returns specified history version.
            </summary>
            <param name="versionHistoryId">VersionHistory ID</param>
            <param name="sourceNode">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.ApplyLatestVersion(CMS.TreeEngine.TreeNode)">
            <summary>
            Applies latest version data to the node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.ApplyVersion(CMS.TreeEngine.TreeNode,CMS.WorkflowEngine.VersionHistoryInfo)">
            <summary>
            Applies version data to the node.
            </summary>
            <param name="node">Document node</param>
            <param name="version">Document version</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.SaveVersion(CMS.TreeEngine.TreeNode)">
            <summary>
            Saves history version record to the database without checking in.
            </summary>
            <param name="node">Node object that should be stored in the version history</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.SaveVersion(CMS.TreeEngine.TreeNode,System.String,System.String)">
            <summary>
            Saves history version record to the database without checking in.
            </summary>
            <param name="node">Node object that should be stored in the version history</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.SaveVersion(CMS.TreeEngine.TreeNode,System.String,System.String,System.Boolean)">
            <summary>
            Saves history version record to the database without checking in.
            </summary>
            <param name="node">Node object that should be stored in the version history</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="logSynchronization">Log synchronization task</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.SaveVersion(CMS.TreeEngine.TreeNode,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Saves history version record to the database without checking in.
            </summary>
            <param name="node">Node object that should be stored in the version history</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
            <param name="logSynchronization">Log synchronization task</param>
            <param name="updateColumns">List of columns which should be updated explicitly (separated by ';')</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.CheckOut(CMS.TreeEngine.TreeNode)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.CheckOut(CMS.TreeEngine.TreeNode,System.Boolean)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <param name="nodeIsPublished">Document is published</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.CheckOut(CMS.TreeEngine.TreeNode,System.Boolean,System.Boolean)">
            <summary>
            Checks out specified node and creates a new record in the CMS_VersionHistory table.
            </summary>
            <param name="node">Document to check out</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="isAutomatic">Indicates whether check-in should be performed automatically later on</param>
            <returns>Returns current workflow step of the document</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.DeleteOlderVersions(System.Int32,System.String)">
            <summary>
            Deletes the older document versions to keep specified version history length.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="siteName">Site name</param>
            <returns>Returns the version number of the last version deleted</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.CheckIn(CMS.TreeEngine.TreeNode,System.String,System.String)">
            <summary>
            Checks provided node in and stores it in the versioning history.
            </summary>
            <param name="node">Document node</param>
            <param name="versionNumber">Version number</param>
            <param name="versionComment">Version comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.DestroyDocumentHistory(System.Int32)">
            <summary>
            Deletes complete history of specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetDocumentHistory(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the version history table for the specified document.
            </summary>
            <param name="documentId">Document ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N attachments</param>
            <param name="columns">Selected columns</param>     
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetDocumentHistory(System.Int32)">
            <summary>
            Returns the version history table for the specified document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.DestroyDocumentVersion(System.Int32)">
            <summary>
            Deletes specified record in the node version history.
            </summary>
            <param name="versionHistoryId">Version history ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.PublishVersion(System.Int32)">
            <summary>
            Puts the specified node history version to the front DB tables.
            </summary>
            <param name="versionHistoryId">ID of the version history record</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.PublishVersion(System.Int32,System.Boolean)">
            <summary>
            Puts the specified node history version to the front DB tables.
            </summary>
            <param name="versionHistoryId">ID of the version history record</param>
            <param name="checkPublish">If true, the ToBePublished item is checked to find out whether to publish or not</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.UndoCheckOut(CMS.TreeEngine.TreeNode)">
            <summary>
            Undos all operations made during last checkout.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.RollbackVersion(System.Int32)">
            <summary>
            Adds specified earlier version to the top of the version history.
            </summary>
            <param name="versionHistoryId">Version history ID</param>
            <returns>Returns new version history ID</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.PublishAllScheduled(System.String)">
            <summary>
            Publishes all documents scheduled for the current time.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.RestoreDocument(System.Int32)">
            <summary>
            Restores deleted node and returns the restored node.
            </summary>
            <param name="versionHistoryId">ID of the version to be restored</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.RestoreDocument(System.Int32,CMS.TreeEngine.TreeNode)">
            <summary>
            Restores deleted node and returns the restored node.
            </summary>
            <param name="versionHistoryId">ID of the version to be restored</param>
            <param name="restNode">Node to be restored</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetNewVersion(System.String,System.Boolean,System.String)">
            <summary>
            Returns new version number representation.
            </summary>
            <param name="oldVersionNumber">Old version number</param>
            <param name="isMajorVersion">If true, the version number is considered major</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetNewVersion(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Returns new version number representation.
            </summary>
            <param name="oldVersionNumber">Old version number</param>
            <param name="isMajorVersion">If true, the version number is considered major</param>
            <param name="siteName">Site name</param>
            <param name="useCheckInCheckOut">Indicates if use check-in/check-out</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.EnsureVersion(CMS.TreeEngine.TreeNode,System.Boolean)">
            <summary>
            Ensures that the document version history is present for the given document, returns the VersionHistoryID of the document version.
            </summary>
            <param name="node">Document node</param>
            <param name="nodeIsPublished">Document is published</param>
            <remarks>The document is updated to the database, there is no need to update it after</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.EnsureVersion(CMS.TreeEngine.TreeNode,System.Boolean,System.Boolean)">
            <summary>
            Ensures that the document version history is present for the given document, returns the VersionHistoryID of the document version.
            </summary>
            <param name="node">Document node</param>
            <param name="nodeIsPublished">Document is published</param>
            <param name="nodeDeletion">Indicates if the version should be ensured for the recycle bin</param>
            <remarks>The document is updated to the database, there is no need to update it after</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetEditStep(CMS.TreeEngine.TreeNode)">
            <summary>
            Gets edit step for given node.
            </summary>
            <param name="node">Tree node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.EnsureVersionAttachments(CMS.TreeEngine.TreeNode)">
            <summary>
            Ensures that the document attachments are present within the AttachmentHistory table.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.UseCheckInCheckOut(System.String)">
            <summary>
            Specifies whether the environment is configured to use check-in and check-out actions.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.UseAutomaticVersionNumbering(System.String)">
            <summary>
            Specifies whether the environment is configured to use automatic version numbering.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.IsVersionedCoupledColumn(System.String,System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="className">Class name</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.IsVersionedDocumentColumn(System.String)">
            <summary>
            Returns true if the given column name is a versioned data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.IsSystemNodeColumn(System.String)">
            <summary>
            Returns true if the given column name is a system data column name of the node.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.IsSystemDocumentColumn(System.String)">
            <summary>
            Returns true if the given column name is a system data column name.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.EnsureConsistency(CMS.TreeEngine.TreeNode)">
            <summary>
            Ensures the document consistency with current database content.
            </summary>
            <param name="node">Node to check</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetAttachmentDocumentVersions(System.Int32)">
            <summary>
            Returns the DataSet of all the document versions bound to the specified attachment version.
            </summary>
            <param name="attachmentHistoryId">Attachment history ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.AddAttachmentToVersion(System.Int32,System.Int32)">
            <summary>
            Adds the version - attachment binding to the database.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.RemoveAttachmentFromVersion(System.Int32,System.Int32)">
            <summary>
            Removes the version - attachment binding from the database.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentHistoryId">Attachment version history ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetLastAttachmentVersion(System.Guid,System.String)">
            <summary>
            Returns the last attachment version found in the AttachmentHistoryTable.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetLastAttachmentVersion(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns the last attachment version found in the AttachmentHistoryTable.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetAttachmentVersion(System.Int32,System.Guid)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetAttachmentVersion(System.Int32,System.Guid,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="includeBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetAttachmentVersion(System.Int32,System.String,System.Boolean)">
            <summary>
            Returns the attachment version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="fileName">File name</param>
            <param name="includeBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.SaveAttachmentVersion(CMS.TreeEngine.AttachmentInfo,System.Int32)">
            <summary>
            Saves the attachment version to the database.
            </summary>
            <param name="attInfo">Attachment info object</param>
            <param name="versionHistoryId">Version history ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.RemoveAttachmentVersion(System.Int32,System.Guid)">
            <summary>
            Removes the AttachmentHistory binding to the document version history and deletes the AttachmentHistory object if there is no more bindings to that version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="attachmentGuid">Attachment guid</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.CopyVersionAttachments(System.Int32,System.Int32)">
            <summary>
            Copies the version attachment bindings to the given version.
            </summary>
            <param name="sourceVersionHistoryId">Original version history ID</param>
            <param name="destinationVersionHistoryId">Target version history ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.CopyVersionAttachments(System.Int32,System.Int32,System.Collections.Hashtable)">
            <summary>
            Copies the version attachments to the given version, phisically copies the attachment history records.
            </summary>
            <param name="sourceVersionHistoryId">Source version history ID</param>
            <param name="destinationVersionHistoryId">Destination version history ID</param>
            <param name="guidTable">Attachment GUID conversion table, pairs [OldGUID->NewGUID]</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetVersionAttachments(System.Int32,System.Boolean)">
            <summary>
            Returns the DataSet containing all the attachments for the given document version.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetVersionAttachments(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Returns the DataSet containing all the attachments for the given document version based on where condition and order by clause.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="getBinary">Indicates if binary data should be included</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.GetVersionAttachments(System.Int32,System.String,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Returns the DataSet containing all the attachments for the given document version based on where condition and order by clause.
            </summary>
            <param name="versionHistoryId">Document version history ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="getBinary">Indicates if binary data should be included</param>
            <param name="topN">Top N attachments</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.PublishAttachments(System.Int32,System.String,CMS.TreeEngine.TreeNode)">
            <summary>
            Publishes the attachments for the given versionHistoryId.
            </summary>
            <param name="versionHistoryId">Version history ID</param>
            <param name="siteName">Site name</param>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.RemoveWorkflow(CMS.TreeEngine.TreeNode)">
            <summary>
            Removes all the workflow information from the document and initializes the document as non-workflow.
            </summary>
            <param name="node">Document node (current version)</param>
            <remarks>Intended for use after finishing current workflow cycle to remove workflow scope from the document</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.ApplyDocumentVersionData(System.Data.DataSet)">
            <summary>
            Applies the document version data to the document DataSet (only the document data, not the coupled data).
            </summary>
            <param name="ds">Dataset with the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.VersionManager.ApplyVersionData(System.Data.DataRow,System.String,System.String)">
            <summary>
            Applies the document version data to the document datarow.
            </summary>
            <param name="nodeRow">DataRow with the document data</param>
            <param name="className">Document class name</param>
            <param name="versionXml">Version XML data</param>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionManager.NonVersionedCoupledColumns">
            <summary>
            List of the non-versioned coupled document columns.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionManager.TreeProvider">
            <summary>
            TreeProvider instance.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.VersionManager.WorkflowManager">
            <summary>
            Gets VersionManager instance.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionEnum">
            <summary>
            Workflow action enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Approved">
            <summary>
            The document was approved - send e-mail to the users that are approved within next step and to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Rejected">
            <summary>
            Document was rejected - send e-mail to the user that approved the document and to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Published">
            <summary>
            The document was published - send e-mail to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Archived">
            <summary>
            The document was archived - send e-mail to the document editor.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHistoryInfoProvider">
            <summary>
            Class providing WorkflowHistoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetWorkflowHistoryInfo(System.Int32)">
            <summary>
            Returns the WorkflowHistoryInfo structure for the specified workflowHistory.
            </summary>
            <param name="workflowHistoryId">WorkflowHistory ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.SetWorkflowHistoryInfo(CMS.WorkflowEngine.WorkflowHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified workflowHistory.
            </summary>
            <param name="workflowHistory">WorkflowHistory to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.DeleteWorkflowHistoryInfo(CMS.WorkflowEngine.WorkflowHistoryInfo)">
            <summary>
            Deletes specified workflowHistory.
            </summary>
            <param name="workflowHistoryObj">WorkflowHistory object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.DeleteWorkflowHistoryInfo(System.Int32)">
            <summary>
            Deletes specified workflowHistory.
            </summary>
            <param name="workflowHistoryId">WorkflowHistory id</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetWorkflowHistories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow histories.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowInfo">
            <summary>
            Class to hold the workflow record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.UseCheckInCheckOut(System.String)">
            <summary>
            Indicates if current workflow uses check-in/check-out functionality
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowName">
            <summary>
            Workflow code name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowDisplayName">
            <summary>
            Workflow display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowID">
            <summary>
            Wortkflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowGUID">
            <summary>
            Workflow GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowAutoPublishChanges">
            <summary>
            Indicates if this workflow will automatically publish changes.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowUseCheckinCheckout">
            <summary>
            Indicates if this workflow will use check-in/check-out functionality
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowInfoProvider">
            <summary>
            Class to provide the workflow info management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.SetWorkflowInfo(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Sets the specified workflow data.
            </summary>
            <param name="infoObj">Workflow data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfo(System.String)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow name.
            </summary>
            <param name="workflowName">Workflow name to use for retrieving the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfo(System.Int32)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow ID.
            </summary>
            <param name="workflowId">ID of the workflow to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteWorkflowInfo(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Deletes the specified worfklow.
            </summary>
            <param name="wi">Workflow object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteWorkflowInfo(System.Int32)">
            <summary>
            Deletes the specified worfklow.
            </summary>
            <param name="workflowId">Workflow ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetAllWorkflows">
            <summary>
            Returns DataSet with all workflows.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Check dependencies, return true if is depend.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflows(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflows.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.IsCustomStepAllowed">
            <summary>
            Determines whether custom workflow steps are allowed by license for current domain.
            </summary>
            <returns>
            	<c>true</c> if custom steps are allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.SetWorkflowInfoInternal(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Sets the specified workflow data.
            </summary>
            <param name="infoObj">Workflow data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoInternal(System.String)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow name.
            </summary>
            <param name="workflowName">Workflow name to use for retrieving the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoInternal(System.Int32)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow ID.
            </summary>
            <param name="workflowId">ID of the workflow to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteWorkflowInfoInternal(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Deletes the specified worfklow.
            </summary>
            <param name="wi">Workflow object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflows.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowManager">
            <summary>
            Class for managing the workflow procedure.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowManager.mTreeProvider">
            <summary>
            Inner TreeProvider object for the data access.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.#ctor">
            <summary>
            Constructor - Creates workflow manager.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.#ctor(CMS.TreeEngine.TreeProvider)">
            <summary>
            Constructor - Creates workflow manager.
            </summary>
            <param name="tree">TreeProvider instance to use</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetStepInfo(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns step information for given document.
            </summary>
            <param name="node">Node to process</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetStepInfo(CMS.TreeEngine.TreeNode,System.Boolean)">
            <summary>
            Returns step information for given document.
            </summary>
            <param name="node">Node to process</param>
            <param name="updateDocument">Indicates if document should be updated</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetPreviousStepInfo(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns previous step information for given node.
            </summary>
            <param name="node">Node to process</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetNextStepInfo(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns next step information for given node.
            </summary>
            <param name="node">Node to process</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.MoveToNextStep(CMS.TreeEngine.TreeNode,System.String)">
            <summary>
            Moves the specified node to the next step in the workflow and returns StepID of the new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>
            <remarks>This method also saves info in the workflow history</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.MoveToNextStepInternal(CMS.TreeEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean)">
            <summary>
            Moves the specified node to the next step in the workflow and returns StepID of the new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="currentStep">Current workflow step of the document</param>
            <param name="nextStep">Next workflow step of the document</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
            <remarks>This method also saves info in the workflow history</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.MoveToPreviousStep(CMS.TreeEngine.TreeNode,System.String)">
            <summary>
            Moves the specified node to the previous step in the workflow and returns StepID of the new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="comment">Action comment</param>    
            <remarks>This method also saves info in the workflow history</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.MoveToSpecificStep(CMS.TreeEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns StepID of the new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <remarks>This method also saves info in the workflow history</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.MoveToSpecificStep(CMS.TreeEngine.TreeNode,CMS.WorkflowEngine.WorkflowStepInfo,System.String,System.Boolean)">
            <summary>
            Moves the specified node to the specified step in the workflow and returns StepID of the new step.
            </summary>
            <param name="node">Node to process</param>
            <param name="step">Step to which should be specified document moved</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
            <remarks>This method also saves info in the workflow history</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.AutomaticallyPublish(CMS.TreeEngine.TreeNode,CMS.WorkflowEngine.WorkflowInfo,System.String)">
            <summary>
            Automatically publishes given document.
            </summary>
            <param name="node">Node to process</param>
            <param name="workflow">Workflow (If not specified node workflow is used.)</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.AutomaticallyPublish(CMS.TreeEngine.TreeNode,CMS.WorkflowEngine.WorkflowInfo,System.String,System.Boolean)">
            <summary>
            Automatically publishes given document.
            </summary>
            <param name="node">Node to process</param>
            <param name="workflow">Workflow (If not specified node workflow is used.)</param>
            <param name="comment">Action comment</param>
            <param name="increasePublishVersionNumber">Indicates if the publish version number should be increased</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.LogWorkflowHistory(System.Int32,System.Int32,System.String,System.Int32,System.DateTime,System.String,System.Boolean)">
            <summary>
            Logs specified action in the workflow history record.
            </summary>
            <param name="versionHistoryId">ID of the related version of the node</param>
            <param name="stepId">Step ID</param>
            <param name="stepDisplayName">Step display name</param>
            <param name="approvedByUserId">ID of the user who performed the action</param>
            <param name="approvedWhen">When the action occurred</param>
            <param name="comment">Action comment</param>
            <param name="wasRejected">Indicates if the step was approval (false) or rejection (true)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.LogWorkflowHistory(System.Int32,System.Int32,System.String,System.String,System.Int32,System.DateTime,System.String,System.Boolean)">
            <summary>
            Logs specified action in the workflow history record.
            </summary>
            <param name="versionHistoryId">ID of the related version of the node</param>
            <param name="stepId">Step ID</param>
            <param name="stepDisplayName">Step display name</param>
            <param name="stepName">Step name</param>
            <param name="approvedByUserId">ID of the user who performed the action</param>
            <param name="approvedWhen">When the action occurred</param>
            <param name="comment">Action comment</param>
            <param name="wasRejected">Indicates if the step was approval (false) or rejection (true)</param>    
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.CanUserApprove(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns true if current user can approve or reject given node in its current workflow step.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.CanUserApprove(CMS.TreeEngine.TreeNode,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if given user can approve or reject given node in its current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">Current user info</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetUsersWhoCanApprove(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns list of people who can approve node in the current workflow step. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetUsersWhoCanApprove(CMS.TreeEngine.TreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns list of all the people who can approve node in the current workflow step.
            </summary>
            <param name="node">Document node</param>
            <param name="assigned">Indicates if users assigned to the workflow steps should be get. Users in the generic roles are not included</param>
            <param name="managers">Indicates if users who have the manage workflow permission should be get</param>
            <param name="administrators">Indicates if users who are global administrators should be get</param>
            <returns>Returns defined role users, Global administrators and users who have the Manage workflow permission for the document</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetNodeWorkflowScope(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns the workflow scope info for the given node, or null when the node does not support workflow.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetNodeWorkflow(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns the workflow for the specified node.
            </summary>
            <param name="node">Tree node to analyse for worfklow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetFirstWorkflowStep(CMS.TreeEngine.TreeNode)">
            <summary>
            Returns StepID value of the first workflow step for given node.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.GetFirstWorkflowStep(CMS.TreeEngine.TreeNode,CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Returns StepID value of the first workflow step for given node.
            </summary>
            <param name="node">Document node</param>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.ArchiveDocument(CMS.TreeEngine.TreeNode,System.String)">
            <summary>
            Archives the document, returns the archive step info.
            </summary>
            <param name="node">Document to archive</param>
            <param name="comment">Version comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowManager.SendWorkflowEmails(CMS.TreeEngine.TreeNode,CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowActionEnum,System.String)">
            <summary>
            Sends the workflow email for the specified document node.
            </summary>
            <param name="node">Document node</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="action">Workflow action to process</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowManager.TreeProvider">
            <summary>
            TreeProvider instance.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowManager.SendEmailToModerator">
            <summary>
            Returns whether the e-mails should be sent to the current moderator (reflects the CMSWorkflowSendEmailToModerator web.config settings).
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowObjectType">
            <summary>
            Workflow object types.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOW">
            <summary>
            Code name for workflows.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSCOPE">
            <summary>
            Code name for workflow scope.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSCOPELIST">
            <summary>
            Code name for workflow scope list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSTEP">
            <summary>
            Code name for workflowstep.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWHISTORY">
            <summary>
            Code name for workflowhistory.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWHISTORYLIST">
            <summary>
            Code name for workflow history list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.VERSIONHISTORY">
            <summary>
            Code name for version history.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.VERSIONHISTORYLIST">
            <summary>
            Code name for version history list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.ATTACHMENTHISTORY">
            <summary>
            Code name for attachmenthistory.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.BOOKINGEVENTLIST">
            <summary>
            Code name for booking event list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.DOCUMENTLIST">
            <summary>
            Documents list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.DOCUMENTRECYCLEBINLIST">
            <summary>
            Documents recycle bin list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSTEPROLE">
            <summary>
            Workflow step role binding.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.VERSIONATTACHMENT">
            <summary>
            Version attachment binding.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowObjectType.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowScopeInfo">
            <summary>
            Class to hold the workflow scope data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowScopeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.UpdateData">
            <summary>
            Updates the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.InsertData">
            <summary>
            Inserts the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.DeleteData(System.Boolean)">
            <summary>
            Deletes the object.
            </summary>
            <param name="logObjectChange">Indicates if the object change should be logged</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowScopeInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowScopeInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow scope info data</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeStartingPath">
            <summary>
            Scope starting path - The scope applies to the starting path subtree.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeID">
            <summary>
            Scope ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeClassID">
            <summary>
            Scope class ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeWorkflowID">
            <summary>
            Scope workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeSiteID">
            <summary>
            Scope site ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeGUID">
            <summary>
            Scope step GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeCultureID">
            <summary>
            Scope culture ID.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowScopeInfoProvider">
            <summary>
            Workflow scope info provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.SetWorkflowScopeInfo(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Sets the specified workflow scope data.
            </summary>
            <param name="infoObj">Workflow scope data object</param>
            <exception cref="T:System.Exception">Throws exception if license limitation are not fulfilled</exception>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfo(System.Int32)">
            <summary>
            Returns the WorkflowScopeInfo structure for the specified workflow scope ID.
            </summary>
            <param name="scopeId">ID of the workflow scope to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopeInfo(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Deletes the specified workflow scope.
            </summary>
            <param name="wsi">Workflow scope object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopeInfo(System.Int32)">
            <summary>
            Deletes the specified workflow scope.
            </summary>
            <param name="scopeId">Workflow scope ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopes(System.Int32)">
            <summary>
            Returns the Dataset of all workflow steps for the given workflow.
            </summary>        
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopes(System.String)">
            <summary>
            Returns the Dataset of all workflow steps.
            </summary>        
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopes(System.Int32)">
            <summary>
            Deletes the scopes of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopes(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow scopes.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.LicenseVersionCheck(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Checks if domain has license supporting workflow feature.
            </summary>
            <param name="wfsi">Scope info to check</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfoInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.SetWorkflowScopeInfoInternal(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Sets the specified workflow scope data.
            </summary>
            <param name="infoObj">Workflow scope data object</param>
            <exception cref="T:System.Exception">Throws exception if license limitation are not fulfilled</exception>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfoInternal(System.Int32)">
            <summary>
            Returns the WorkflowScopeInfo structure for the specified workflow scope ID.
            </summary>
            <param name="scopeId">ID of the workflow scope to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopeInfoInternal(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Deletes the specified workflow scope.
            </summary>
            <param name="wsi">Workflow scope object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopesInternal(System.Int32)">
            <summary>
            Deletes the scopes of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow scopes.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepInfo">
            <summary>
            Class to hold the workflow step record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowStepInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowStepInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.#ctor(CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new WorkflowStepInfo object from the given DataClass.
            </summary>
            <param name="si">Source site info</param>
            <param name="keepSourceData">If true, source data are kept</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepName">
            <summary>
            Workflow step code name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepDisplayName">
            <summary>
            Workflow step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepWorkflowID">
            <summary>
            Workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepOrder">
            <summary>
            Step order index.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepID">
            <summary>
            Wortkflow step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepFullName">
            <summary>
            Workflow step full code name in format [workflowcodename].[workflowstepcodename].
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepGUID">
            <summary>
            Worklflow step GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepInfoProvider">
            <summary>
            Workflow step info provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.SetWorkflowStepInfo(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Sets the specified workflow step data.
            </summary>
            <param name="infoObj">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfo(System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step ID.
            </summary>
            <param name="stepId">ID of the workflow step to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfo(System.String,System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step name and workflow.
            </summary>
            <param name="stepName">Step name to retrieve</param>
            <param name="workflowId">Workflow id of the step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowStepInfo(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Deletes the specified worfklow step.
            </summary>
            <param name="wsi">Workflow step object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowStepInfo(System.Int32)">
            <summary>
            Deletes the specified worfklow step.
            </summary>
            <param name="stepId">Workflow step ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.InitStepOrders(System.Int32)">
            <summary>
            Initializes the workflow step orders.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepUp(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step up (decreases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepDown(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step down (increases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetStepRoles(System.Int32)">
            <summary>
            Returns the DataSet of roles assigned to given step.
            </summary>
            <param name="stepId">Step ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetEditStep(System.Int32)">
            <summary>
            Returns the edit step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetPublishedStep(System.Int32)">
            <summary>
            Returns the published step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetArchivedStep(System.Int32)">
            <summary>
            Returns the archived step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.Int32)">
            <summary>
            Returns the Dataset of workflow steps.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the Dataset of workflow steps.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.String,System.String)">
            <summary>
            Returns the Dataset of all workflow steps.
            </summary>        
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow steps.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultWorkflowSteps(System.Int32)">
            <summary>
            Creates default worfklow steps for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowSteps(System.Int32)">
            <summary>
            Deletes all the steps of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTask">Log web farm tasks for this action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.LicenseVersionCheck(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Checks if WorkFlowStep fulfill license limitations.
            </summary>
            <param name="wfsi">Step info to check</param>           
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.SetWorkflowStepInfoInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Sets the specified workflow step data.
            </summary>
            <param name="infoObj">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step ID.
            </summary>
            <param name="stepId">ID of the workflow step to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step name and workflow.
            </summary>
            <param name="stepName">Step name to retrieve</param>
            <param name="workflowId">Workflow id of the step</param>
            <param name="useHashtable">If true, the object is taken through the hashtable</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.String,System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step name and workflow from database.
            </summary>
            <param name="stepName">Step name to retrieve</param>
            <param name="workflowId">Workflow ID of the step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowStepInfoInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Deletes the specified worfklow step.
            </summary>
            <param name="wsi">Workflow step object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.InitStepOrdersInternal(System.Int32)">
            <summary>
            Initializes the workflow step orders.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepUpInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step up (decreases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepDownInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step down (increases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetStepRolesInternal(System.Int32)">
            <summary>
            Returns the DataSet of roles assigned to given step.
            </summary>
            <param name="stepId">Step ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetEditStepInternal(System.Int32)">
            <summary>
            Returns the edit step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetPublishedStepInternal(System.Int32)">
            <summary>
            Returns the published step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetArchivedStepInternal(System.Int32)">
            <summary>
            Returns the archived step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow steps.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultWorkflowStepsInternal(System.Int32)">
            <summary>
            Creates default worfklow steps for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.RegisterObjectInHashtables(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Registeres the object instance within the hashtables.
            </summary>
            <param name="infoObj">Object to register</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteObjectFromHashtables(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Removes the object instance from the hashtables.
            </summary>
            <param name="infoObj">Object to remove</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.UpdateObjectInHashtables(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Updates the object instance in the hashtables.
            </summary>
            <param name="infoObj">Object to update</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepRoleInfo">
            <summary>
            WorkflowStepRoleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepRoleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowStepRoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowStepRoleInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider">
            <summary>
            Class providing WorkflowStepRoleInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoleInfo(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowStepRoleInfo structure for the specified workflowStepRole.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.SetWorkflowStepRoleInfo(CMS.WorkflowEngine.WorkflowStepRoleInfo)">
            <summary>
            Sets (updates or inserts) specified workflowStepRole.
            </summary>
            <param name="workflowStepRole">WorkflowStepRole to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.DeleteWorkflowStepRoleInfo(CMS.WorkflowEngine.WorkflowStepRoleInfo)">
            <summary>
            Deletes specified workflowStepRole.
            </summary>
            <param name="infoObj">WorkflowStepRole object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.RemoveRoleFromWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Deletes specified workflowStepRole.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.AddRoleToWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Adds specified role to the worflow step.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
    </members>
</doc>
