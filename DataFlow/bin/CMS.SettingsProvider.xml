<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.SettingsProvider</name>
    </assembly>
    <members>
        <member name="T:CMS.IDataConnectionLibrary.ReadMe">
            <summary>
            Namespace CMS.IDataConnectionLibrary exists only for backward compatibility reasons. All its classes were moved to library and namespace CMS.SettingsProvider
            </summary>
        </member>
        <member name="T:CMS.FileManager.ReadMe">
            <summary>
            Namespace CMS.FileManager exists only for backward compatibility reasons. All its classes were moved to library and namespace CMS.TreeEngine
            </summary>
        </member>
        <member name="T:CMS.Compatibility.ClassHelperCompatibility">
            <summary>
            Class helper backward compatibility
            </summary>
        </member>
        <member name="F:CMS.Compatibility.ClassHelperCompatibility.OnGetCustomClass">
            <summary>
            Fires when the custom class is required.
            </summary>
        </member>
        <member name="M:CMS.Compatibility.ClassHelperCompatibility.GetCustomClass(System.Object,CMS.SettingsProvider.ClassEventArgs)">
            <summary>
            Gets the custom class object
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event argument</param>
        </member>
        <member name="T:CMS.Compatibility.ClassHelperCompatibility.GetClassEventHandler">
            <summary>
            Event handler to get the class object based on the given class name.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="T:CMS.SettingsProvider.CMSLoaderAttribute">
            <summary>
            Adds action to the page.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSLoaderAttribute.CheckModules">
            <summary>
            Returns true if all required modules are installed
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSLoaderAttribute.Init">
            <summary>
            Initializes the module (registers module methods to macro resolver).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSLoaderAttribute.RequiredModules">
            <summary>
            List of required modules to load this item
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AzureHelper">
            <summary>
            Helper methods and properties for Windows Azure integration.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AzureHelper.QUEUE_TIMEOUT">
            <summary>
            Timeout for getting message from queue.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AzureHelper.AZURE_FILE_PAGE">
            <summary>
            Path to azure file page.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AzureHelper.SQLAZURE_DOMAIN">
            <summary>
            Domain of SQL Azure service.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AzureHelper.SEARCH_INIT_SLEEP">
            <summary>
            Sleep interval between tries for init of smart search worker role.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AzureHelper.SEARCH_PROCESS_SLEEP">
            <summary>
            Sleep interval between starting of task processor.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AzureHelper.DEFAULT_ROOT_CONTAINER">
            <summary>
            Default container name for root of filesystem
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AzureHelper.RestartAzureInstance">
            <summary>
            Restarts Azure instance.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AzureHelper.GetApplicationSettings(System.String)">
            <summary>
            Returns application settings from Azure service configuration file.
            </summary>
            <param name="key">Setting key</param>
        </member>
        <member name="M:CMS.SettingsProvider.AzureHelper.GetConnectionString">
            <summary>
            Returns connection string from Azure service configuration file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.SettingsProvider.AzureHelper.GetDownloadPath(System.String)">
            <summary>
            Returns download path for given path.
            </summary>
            <param name="path">Path</param>
        </member>
        <member name="M:CMS.SettingsProvider.AzureHelper.IsSQLAzureServer(System.String)">
            <summary>
            Returns whether SQL server is SQL Azure according to its name.
            </summary>
            <param name="serverName"></param>
        </member>
        <member name="E:CMS.SettingsProvider.AzureHelper.OnRestartRequired">
            <summary>
            Event which is trown when Azure application should be restarted.
            </summary>
        </member>
        <member name="E:CMS.SettingsProvider.AzureHelper.OnGetApplicationSettings">
            <summary>
            Event which is trown when Azure application wants to read application settings.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.IsRunningOnAzure">
            <summary>
            Returns whether current instance running on Windows Azure.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.CurrentInstanceID">
            <summary>
            Gets or sets current instance id.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.TempPath">
            <summary>
            Gets or sets path to local storage for temp.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.CachePath">
            <summary>
            Gets or sets path to local storage for cache.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.CurrentInternalEndpoint">
            <summary>
            Gets or sets internal endpoint of current instace.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.IsContainerPublic">
            <summary>
            Gets or sets whether blobs inside container are accessible to public users.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.BlobUrl">
            <summary>
            Gets or sets url of blob endpoint. 
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.RootContainer">
            <summary>
            Gets or sets root container name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.DeploymentID">
            <summary>
            Deployment id of instance.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AzureHelper.NumberOfInstances">
            <summary>
            Number of Azure instances within webrole.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AzureHelper.GetAppSettingsEventHandler">
            <summary>
            Delegate for event for reading application's settings.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSConstants">
            <summary>
            Provides access to global constants.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.ROLE_EVERYONE">
            <summary>
            Special role which automatically covers all users.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.ROLE_AUTHENTICATED">
            <summary>
            Special role which automatically covers all authenticated users.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.ROLE_NOTAUTHENTICATED">
            <summary>
            Special role which automatically covers all not authenticated users.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.COMMUNITY_CURRENT_GROUP">
            <summary>
            Community current group.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.OBJECT_CATEGORY_LAYOUT">
            <summary>
            Layouts category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.OBJECT_CATEGORY_FORM_LAYOUT">
            <summary>
            Form layout category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.OBJECT_CATEGORY_THUMBNAIL">
            <summary>
            Thumbnails category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.OBJECT_CATEGORY_TEMPLATE">
            <summary>
            Templates category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.OBJECT_CATEGORY_INVOICE">
            <summary>
            Invoice category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.OBJECT_CATEGORY_ISSUE">
            <summary>
            Issue category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.OBJECT_CATEGORY_IMAGE">
            <summary>
            Image category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSConstants.OBJECT_CATEGORY_EPRODUCT">
            <summary>
            E-product category.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSPerformanceCounter">
            <summary>
            Performance counter.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSPerformanceCounter.globalCounter">
            <summary>
            Global counter.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSPerformanceCounter.mSitesCounters">
            <summary>
            Hash table for site counters.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSPerformanceCounter.mLastLogs">
            <summary>
            Hash table for last log times.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSPerformanceCounter.locker">
            <summary>
            Lock used for loading hash table.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSPerformanceCounter.mSites">
            <summary>
            Collection of site names.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSPerformanceCounter.lastLog">
            <summary>
            Time of last log.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.Increment(System.String)">
            <summary>
            Increments global and site counter. If the parameter siteName is null, increments only global counter.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.Decrement(System.String)">
            <summary>
            Decrements global and site counter. If the parameter siteName is null, decrements only global counter.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.SetValue(System.Int64,System.String)">
            <summary>
            Sets raw value of global or site counter. If the parameter siteName is null, sets global counter.
            </summary>
            <param name="value">Value</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.GetValue(System.String)">
            <summary>
            Gets value of global or site counter. If the parameter siteName is null, get global counter value.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.GetValue(System.String,System.Boolean)">
            <summary>
            Gets value of global or site counter. If the parameter siteName is null, get global counter value.
            </summary>
            <param name="siteName">Site name</param>
            <param name="updateLastLog">Indicates if date time of last log value should be updated.</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.GetLastLog(System.String)">
            <summary>
            Gets time of last log.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.Clear">
            <summary>
            Clears global and sites counters.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.ClearLastLog">
            <summary>
            Clears last log date time.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.Reset(System.Boolean)">
            <summary>
            Resets global and sites values.
            </summary>
            <param name="resetSitesValues">Indicates if sites counters should be reseted.</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSPerformanceCounter.AddSiteName(System.String)">
            <summary>
            Adds site name to collection.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="P:CMS.SettingsProvider.CMSPerformanceCounter.SitesCounters">
            <summary>
            Gets sites counters (key - site name).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSPerformanceCounter.LastLogs">
            <summary>
            Time of last log.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSPerformanceCounter.Sites">
            <summary>
            Gets collection of sites name.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSExtensibilitySection">
            <summary>
            Extensibility section for the web.config.
            </summary> 
        </member>
        <member name="M:CMS.SettingsProvider.CMSExtensibilitySection.LoadProvider``1(``0)">
            <summary>
            Loads the provider object.
            </summary>
            <param name="defaultProvider">Default provider</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSExtensibilitySection.LoadHelper``1(``0)">
            <summary>
            Loads the helper object.
            </summary>
            <param name="defaultHelper">Default helper</param>
        </member>
        <member name="P:CMS.SettingsProvider.CMSExtensibilitySection.Section">
            <summary>
            Configuration section.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSExtensibilitySection.Providers">
            <summary>
            Providers.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSExtensibilitySection.Helpers">
            <summary>
            Helpers.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSExtensibilitySection.ExtensibilityCollection">
            <summary>
            Extensibility collection for classes registration.
            </summary> 
        </member>
        <member name="M:CMS.SettingsProvider.CMSExtensibilitySection.ExtensibilityCollection.CreateNewElement">
            <summary>
            Gets the new configuration element instance.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSExtensibilitySection.ExtensibilityCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key.
            </summary>
            <param name="element">Element to analyze</param>
        </member>
        <member name="T:CMS.SettingsProvider.CMSExtensibilitySection.ExtensibilityElement">
            <summary>
            Extensibility element for class registration.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSExtensibilitySection.ExtensibilityElement.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSExtensibilitySection.ExtensibilityElement.Assembly">
            <summary>
            Assembly.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSExtensibilitySection.ExtensibilityElement.Type">
            <summary>
            Type.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AdvancedConnectionSettings">
            <summary>
            Cache settings container.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AdvancedConnectionSettings.mCacheMinutes">
            <summary>
            Number of minutes for which the the data should be cached.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AdvancedConnectionSettings.mCacheDependency">
            <summary>
            Cache dependency for the cached items.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AdvancedConnectionSettings.CacheMinutes">
            <summary>
            Number of minutes for which the the data should be cached.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AdvancedConnectionSettings.CacheDependency">
            <summary>
            Cache dependency for the cached item.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IDataConnection">
            <summary>
            Data connection interface that must be implemented by data providers.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum,System.Boolean)">
            <summary>
            Returns result of the query.
            </summary>
            <param name="queryText">Query or stored procedure to be run</param>
            <param name="queryParams">Array of query parameters</param>
            <param name="queryType">Indicates it query is a SQL query or stored procedure</param>
            <param name="requiresTransaction">If true, the query should run within transaction</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.ExecuteNonQuery(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum,System.Boolean)">
            <summary>
            Executes the query and returns the number of affected rows.
            </summary>
            <param name="queryText">Query or stored procedure to be run</param>
            <param name="queryParams">Query parameters</param>
            <param name="queryType">Indicates it query is a SQL query or stored procedure</param>
            <param name="requiresTransaction">If true, the query should run within transaction</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.ExecuteReader(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum,System.Data.CommandBehavior)">
            <summary>
            Returns result of the query as a Data reader. Keeps the connection open.
            </summary>
            <param name="queryText">Query or stored procedure to be run</param>
            <param name="queryParams">Array of query parameters</param>
            <param name="queryType">Indicates it query is a SQL query or stored procedure</param>
            <param name="commandBehavior">Command behavior</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.ExecuteScalar(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum,System.Boolean)">
            <summary>
            Returns a single value result of the query.
            </summary>
            <param name="queryText">Query or stored procedure to be run</param>
            <param name="queryParams">Query parameters</param>
            <param name="queryType">Indicates it query is a SQL query or stored procedure</param>
            <param name="requiresTransaction">If true, the query should run within transaction</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.GetXmlSchema(System.String)">
            <summary>
            Returns XML schema for specified table.
            </summary>
            <param name="tableName">Name of a table to get xml schema for</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.NativeDBConnectionExists">
            <summary>
            Returns true if the native connection exists.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.NativeConnectionExists">
            <summary>
            Returns true if the native connection exists.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.IsOpen">
            <summary>
            Returns true if connection to the database is open.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.Open">
            <summary>
            Opens connection to the database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.Close">
            <summary>
            Closes connection to the database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.BeginTransaction">
            <summary>
            Begins a new transaction.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a new transaction with specified isolation level.
            </summary>
            <param name="isolationLevel">Isolation level to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.CommitTransaction">
            <summary>
            Commits current transaction.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.RollbackTransaction">
            <summary>
            Rollbacks current transaction.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.IsTransaction">
            <summary>
            Indicates if transaction is running.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataConnection.GetBlobType">
            <summary>
            Returns blob type for particular provider, such as System.Data.OleDb.OleDbType.Binary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDataConnection.KeepOpen">
            <summary>
            If true, the connection stays open even if close is requested.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDataConnection.AllowTransactions">
            <summary>
            If true, the connection object allows transactions.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDataConnection.NativeConnection">
            <summary>
            Native connection object. It depends on provider type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDataConnection.Transaction">
            <summary>
            Transaction object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDataConnection.ConnectionStringName">
            <summary>
            Connection string for specific provider.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDataConnection.ConnectionString">
            <summary>
            Connection string for specific provider.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDataConnection.AdvancedSettings">
            <summary>
            Advanced connection settings.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IDataProvider">
            <summary>
            Data provider interface.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDataProvider.GetNewConnection(System.String)">
            <summary>
            Returns new data connection.
            </summary>
            <param name="connectionString">Connection string</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDataProvider.ProcessCommand(System.String,System.Object[])">
            <summary>
            Sends the specific command with arguments to the provider.
            </summary>
            <param name="commandName">Command name</param>
            <param name="commandArguments">Command arguments (parameters)</param>
        </member>
        <member name="P:CMS.SettingsProvider.IDataProvider.ConnectionString">
            <summary>
            Connection string.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDataProvider.CurrentConnection">
            <summary>
            Current DB connection to use within current connection scope.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ISqlGenerator">
            <summary>
            Sql generator interface.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ISqlGenerator.GetSqlQuery(System.String,CMS.SettingsProvider.SqlOperationTypeEnum)">
            <summary>
            Generates the given type of query for table specified by its className.
            </summary>
            <param name="className">Class name of the document data</param>
            <param name="queryType">Query type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ISqlGenerator.GetSystemViewSqlQuery(System.String)">
            <summary>
            View name.
            </summary>
            <param name="viewName">View name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ISqlGenerator.GetSqlQuery(System.String,CMS.SettingsProvider.SqlOperationTypeEnum,System.String)">
            <summary>
            Generates the given type of query for table specified by its className.
            </summary>
            <param name="className">Class name of the document data</param>
            <param name="queryType">Query type</param>
            <param name="siteName">CodeName of the site</param>
        </member>
        <member name="M:CMS.SettingsProvider.ISqlGenerator.GetPKName(System.String)">
            <summary>
            Returns name of the primary key.
            </summary>
            <param name="schemaXml">XML Schema of the table</param>
        </member>
        <member name="T:CMS.SettingsProvider.ITableManager">
            <summary>
            Ensures management of database table and table column.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.CreateView(System.String,System.String)">
            <summary>
            Creates specified view in database for given data class.
            </summary>
            <param name="viewName">View name to create</param>
            <param name="selectExpression">Select expression for the view</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.DropView(System.String)">
            <summary>
            Drop specified view from database.
            </summary>
            <param name="viewName">View name to drop</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.RefreshView(System.String)">
            <summary>
            Refreshes specified view in database.
            </summary>
            <param name="viewName">View name to refresh</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.ViewExists(System.String)">
            <summary>
            Determines whether specified DB view exists or not.
            </summary>
            <param name="viewName">View name to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.CreateTable(System.String,System.String)">
            <summary>
            Creates specified table in database.
            </summary>
            <param name="tableName">Table name to create</param>
            <param name="primaryKeyName">Primary key of table to create</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.CreateTable(System.String,System.String,System.Boolean)">
            <summary>
            Creates specified table in database with specified primary key column with or without identity.
            </summary>
            <param name="tableName">Table name to create</param>
            <param name="primaryKeyName">Primary key of table to create</param>
            <param name="setIdentity">If true, sets identity on primary key column</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.RenameTable(System.String,System.String)">
            <summary>
            Changes name of the table with original name according to the new name.
            </summary>
            <param name="oldTableName">Name of the table to rename</param>
            <param name="newTableName">New name of the table</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.DropTable(System.String)">
            <summary>
            Drop specified table from database.
            </summary>
            <param name="tableName">Table name to drop</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.DeleteDataFromTable(System.String,System.String)">
            <summary>
            Deletes data from specified table.
            </summary>
            <param name="tableName">Table name</param>
            <param name="where">Where condition, null if no condition is needed</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.TableExists(System.String)">
            <summary>
            Determines whether specified DB table exists or not.
            </summary>
            <param name="tableName">Table name to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.ChangeDBObjectOwner(System.String,System.String)">
            <summary>
            Changes database object owner.
            </summary>
            <param name="dbObject">Database object name</param>
            <param name="newOwner">New owner name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.GetPrimaryKeyColumns(System.String)">
            <summary>
            Returns list of column names which represent primary keys of the specified database table.
            Returns empty list if primary keys are not found.
            </summary>
            <param name="tableName">Database table name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.GetColumnInformation(System.String,System.String)">
            <summary>
            Returns DataSet with specfied table column information retrieved from database information schema.
            </summary>
            <param name="tableName">Database table name</param>
            <param name="columnName">Database table column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.AddTableColumn(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Add column to specified table.
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Name of a new column</param>
            <param name="columnType">Type of a new column</param>
            <param name="allowNull">Allow NULL values in new column or not</param>
            <param name="defaultValue">Default value of the column. Null if no default value is set</param>
            <param name="forceDefaultValue">Indicates if column default value should be set if column doesn't allow NULL values</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.AddTableColumn(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Add column to specified table.
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Name of a new column</param>
            <param name="columnType">Type of a new column</param>
            <param name="allowNull">Allow NULL values in new column or not</param>
            <param name="defaultValue">Default value of the column. Null if no default value is set</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.DropTableColumn(System.String,System.String,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Remove column from specified table.
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Name of column to remove</param>
            <param name="conn">Opened sql connection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.AlterTableColumn(System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Rename, retype or allow/not allow NULL values in column
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Name of an old column</param>
            <param name="newColumnName">Name of a new column</param>
            <param name="newColumnType">Type of a new column</param>
            <param name="newColumnDefaultValue">Default value of a new column</param>
            <param name="newColumnAllowNull">Allow NULL values in new column or not</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.GetColumnIndexes(System.String,System.String,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Returns the DataSet of column indexes.
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Column name</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.DropColumnIndexes(System.String,System.String,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Drops the column indexes, returns the DataSet of indexes.
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Column name</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.CreateColumnIndexes(System.String,System.String,System.Data.DataSet,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Creates the table indexes.
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Column name</param>
            <param name="ds">DataSet with the indexes information</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.DropDefaultConstraint(System.String,System.String,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Drops the default constraint.
            </summary>
            <param name="tableName">Table name</param>
            <param name="columnName">Column name</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.AlterTableColumnWithDefaultValue(System.String,System.String,System.String,System.String,System.Boolean,System.String,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Alter table column with default value.
            </summary>        
            <param name="tableName">Table name</param>
            <param name="columnName">Column name</param>
            <param name="newColumnName">New column name, null if no new column is created</param>
            <param name="newColumnType">New column type, null if no new column is created</param>
            <param name="newColumnAllowNull">Allow NULL values in new column or not</param>
            <param name="newColumnDefaultValue">Column default value</param>
            <param name="conn">Opened sql connection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.GetPKConstraintName(System.String,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Returns the name of the PK constraint.
            </summary>
            <param name="tableName">Name of the table</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.RecreatePKConstraint(System.String,System.String[],CMS.SettingsProvider.IDataConnection)">
            <summary>
            Drops the current PK constraint and creates new from given columns.
            </summary>
            <param name="tableName">Name of the table</param>
            <param name="primaryKeyColumns">List of columns which should be part of primary key</param>
            <param name="conn">Opened sql connection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.ColumnExistsInView(System.String,System.String)">
            <summary>
            Checks if column name is unique in given view.
            </summary>
            <param name="viewName">Name of the view</param>
            <param name="columnName">Name of the column to be checked</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.GetDateTimeString(System.DateTime)">
            <summary>
            Returns the date time string using the database culture.
            </summary>
            <param name="time">Time to convert</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.EnsureDefaultValue(System.Boolean,System.String,System.String)">
            <summary>
            Add apostrophes around the column default value string according to column type.
            </summary>
            <param name="allowNull">Indicates whether NULL values are allowed</param>
            <param name="columnType">Type of the table column</param>
            <param name="defValue">Default to add apostrophes to</param>
        </member>
        <member name="M:CMS.SettingsProvider.ITableManager.ConvertDefaultValue(System.String,System.String)">
            <summary>
            Returns converted default value of the DB table column according to column type.
            </summary>
            <param name="columnType">Type of the table column</param>
            <param name="defValue">Default value to convert</param>
        </member>
        <member name="P:CMS.SettingsProvider.ITableManager.DatabaseCulture">
            <summary>
            Database culture setting from the web.config.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ITableManager.DatabaseSize">
            <summary>
            Gets database size(including log size).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ITableManager.DatabaseName">
            <summary>
            Gets database name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ITableManager.DatabaseServerName">
            <summary>
            Gets database server name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ITableManager.DatabaseServerVersion">
            <summary>
            Gets database server version.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DataParameter">
            <summary>
            Container for a single query parameter.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataParameter.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataParameter.#ctor(System.String,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name</param>
            <param name="value">Value</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataParameter.Name">
            <summary>
            Parameter name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataParameter.Value">
            <summary>
            Parameter value.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataParameter.Type">
            <summary>
            Parameter type.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.QueryDataParameters">
            <summary>
            Container that holds a list of query parameters.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryDataParameters.mParameters">
            <summary>
            Inner parameters array. 3-dimensional array of query parameters (name, value, optional type).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryDataParameters.mExistingParameters">
            <summary>
            Table of existing parameters [name.ToLower() -> DataParameter]
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.FromArray(System.Object[0:,0:])">
            <summary>
            Constructor.
            </summary>
            <param name="parameters">Array of parameters. 3-dimensional array of query parameters (name, value, optional type)</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.ToArray">
            <summary>
            Converts the data parameters to an array of parameters [[name, value, type], ...].
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.AddDateTime(System.String,System.DateTime)">
            <summary>
            Adds the date time parameter into the list (if the date time is DateTime.MinValue, adds DBNull.Value).
            </summary>
            <param name="name">Parameter name</param>
            <param name="value">Parameter value</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.AddGuid(System.String,System.Guid)">
            <summary>
            Adds the guid parameter into the list (if the guid id Guid.Empty, adds DBNull.Value).
            </summary>
            <param name="name">Parameter name</param>
            <param name="value">Parameter value</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.AddId(System.String,System.Int32)">
            <summary>
            Adds the ID parameter into the list (if the ID is not larger than 0, adds DBNull.Value).
            </summary>
            <param name="name">Parameter name</param>
            <param name="value">Parameter value</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.Add(System.String,System.Object,System.Boolean)">
            <summary>
            Adds the parameter into the list.
            </summary>
            <param name="name">Parameter name</param>
            <param name="value">Parameter value</param>
            <param name="condition">Condition, if false, the NULL value is set</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.Add(System.String,System.Object)">
            <summary>
            Adds the parameter into the list.
            </summary>
            <param name="name">Parameter name</param>
            <param name="value">Parameter value</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.Add(CMS.SettingsProvider.DataParameter)">
            <summary>
            Adds the parameter into the list.
            </summary>
            <param name="param">Parameter to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.Clear">
            <summary>
            Clears the current parameters.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryDataParameters.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.QueryDataParameters.FillDataSet">
            <summary>
            DataSet to be filled by the query. If not given, new DataSet is created
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.QueryDataParameters.Item(System.Int32)">
            <summary>
            Returns the parameter on specified index.
            </summary>
            <param name="index">Index</param>
        </member>
        <member name="T:CMS.SettingsProvider.QueryExecutionTypeEnum">
            <summary>
            Execution type of the query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryExecutionTypeEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryExecutionTypeEnum.ExecuteNonQuery">
            <summary>
            ExecuteNonQuery.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryExecutionTypeEnum.ExecuteQuery">
            <summary>
            ExecuteQuery.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryExecutionTypeEnum.ExecuteReader">
            <summary>
            ExecuteReader.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryExecutionTypeEnum.ExecuteScalar">
            <summary>
            ExecuteScalar.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.QueryTypeEnum">
            <summary>
            Query type enumeration.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryTypeEnum.SQLQuery">
            <summary>
            SQL query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryTypeEnum.StoredProcedure">
            <summary>
            Stored Procedure.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SqlOperationTypeEnum">
            <summary>
            Enumeration of the SQL operations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.UnknownQuery">
            <summary>
            Uknown query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SelectQuery">
            <summary>
            Selection query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.InsertQuery">
            <summary>
            Insertion query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.UpdateQuery">
            <summary>
            Update query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.DeleteQuery">
            <summary>
            Delete query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SelectDocuments">
            <summary>
            Document selection query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SearchTree">
            <summary>
            Tree search query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SelectAll">
            <summary>
            Selection all query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SelectVersions">
            <summary>
            Document versions selection query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SelectView">
            <summary>
            Selection query for view.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.DeleteAll">
            <summary>
            Deletion all query.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SelectModifiedFrom">
            <summary>
            Selection query from specified date of modification.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SelectAllNoBinary">
            <summary>
            Select all columns without the binary data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.SelectNoBinary">
            <summary>
            Select single item by ID without binary columns.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.InsertWithIdentity">
            <summary>
            Insert record with the identity column.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlOperationTypeEnum.UpdateAll">
            <summary>
            Updates multiple items based on the columns and where condition.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SystemViewNames">
            <summary>
            System view name constants.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemViewNames.View_CMS_Tree_Joined">
            <summary>
            View_CMS_Tree_Joined.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemViewNames.View_CMS_Tree_Joined_Versions">
            <summary>
            View_CMS_Tree_Joined_Versions.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemViewNames.View_COM_Order_Joined">
            <summary>
            View_COM_Order_Joined.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemViewNames.View_CMS_User">
            <summary>
            View_CMS_User.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemViewNames.View_Community_Member">
            <summary>
            View_Community_Member.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IInfoDataSet">
            <summary>
            InfoDataSet interface
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.InfoDataSet`1">
            <summary>
            CMS DataSet class. Enhancement to DataSet to provide strongly typed collection side-by-side with the data.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectDataSet`1">
            <summary>
            Base object DataSet class. Enhancement to DataSet to provide strongly typed collection side-by-side with the data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectDataSet`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectDataSet`1.#ctor(System.Data.DataSet)">
            <summary>
            Constructor, creates new DataSet using data from the given DataSet
            </summary>
            <param name="sourceData">Source data</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectDataSet`1.NewCollection">
            <summary>
            Creates new collection of the objects
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectDataSet`1.GetObjectEnumerator">
            <summary>
            Gets the object enumerator for the collection
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectDataSet`1.GetEnumerator">
            <summary>
            Returns the strongly typed enumerator for this collection
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectDataSet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumerator for this collection
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectDataSet`1.Items">
            <summary>
            Items in the DataSet
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.InfoDataSet`1.mObject">
            <summary>ct
            Info object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoDataSet`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoDataSet`1.#ctor(System.Data.DataSet)">
            <summary>
            Constructor, creates new DataSet using data from the given DataSet
            </summary>
            <param name="sourceData">Source data</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoDataSet`1.NewCollection">
            <summary>
            Creates new collection of the objects
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoDataSet`1.Clone">
            <summary>
            Clones the DataSet
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoDataSet`1.GetEnumerator">
            <summary>
            Gets the strongly typed enumerator for the collection
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoDataSet`1.Object">
            <summary>
            Info object instance the provider is working with.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoDataSet`1.Items">
            <summary>
            Items in the DataSet
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.InfoCollectionSettings">
            <summary>
            Settings for the info object collection
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.BaseCollectionSettings">
            <summary>
            Settings for the base object collection
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseCollectionSettings.Index">
            <summary>
            Index of the collection in repository
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseCollectionSettings.Name">
            <summary>
            Name of the collection
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseCollectionSettings.NiceName">
            <summary>
            Nice name of the collection
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseCollectionSettings.Where">
            <summary>
            Where condition
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseCollectionSettings.OrderBy">
            <summary>
            Order by clause
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseCollectionSettings.TopN">
            <summary>
            Top N items to get
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseCollectionSettings.Columns">
            <summary>
            Columns to get from database
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseCollectionSettings.NameColumn">
            <summary>
            Name column
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoCollectionSettings.ObjectType">
            <summary>
            Object type
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoCollectionSettings.SiteID">
            <summary>
            Site ID
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CollectionPropertyTransformation`1">
            <summary>
            Property transformation for a collection. Enumerates the properties of the collection objects and does transformation according to that property.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IHierarchicalObject">
            <summary>
            Interface for the hierarchically accessible object. This object provides the properties to access its connected objects.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.INameIndexable">
            <summary>
            Interface to access collections through string indexers by name
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.INameIndexable.Item(System.String)">
            <summary>
            String indexer, gets or sets the value with the specified name
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="M:CMS.SettingsProvider.IHierarchicalObject.GetProperty(System.String)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.IHierarchicalObject.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="P:CMS.SettingsProvider.IHierarchicalObject.Properties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CollectionPropertyTransformation`1.mCachedResults">
            <summary>
            Cached results of the transformation
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CollectionPropertyTransformation`1.#ctor(CMS.SettingsProvider.InfoObjectCollection,System.Func{CMS.SettingsProvider.InfoObjectCollection,System.String,`0},System.Func{CMS.SettingsProvider.InfoObjectCollection,System.Collections.Generic.List{System.String}})">
            <summary>
            Constructor
            </summary>
            <param name="collection">Parent collection</param>
            <param name="transformation">Transformation function</param>
            <param name="propertiesTransformation">Transformation to get list of properties</param>
        </member>
        <member name="M:CMS.SettingsProvider.CollectionPropertyTransformation`1.GetProperty(System.String)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.CollectionPropertyTransformation`1.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyTransformation`1.CacheResults">
            <summary>
            If true, the results of the transformation are cached
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyTransformation`1.CaseSensitive">
            <summary>
            If true, the transformation is case sensitive (default is case insensitive)
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyTransformation`1.ParentCollection">
            <summary>
            Parent collection
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyTransformation`1.Transformation">
            <summary>
            Transformation function
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyTransformation`1.PropertiesTransformation">
            <summary>
            Transformation function for list of properties
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyTransformation`1.Properties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyTransformation`1.CMS#SettingsProvider#INameIndexable#Item(System.String)">
            <summary>
            Interface to access collections through string indexers by name
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyTransformation`1.Item(System.String)">
            <summary>
            Interface to access collections through string indexers by name
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.Extensions">
            <summary>
            Extensions for the SettingsProvider classes
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.Extensions.GetNamedEnumerator(CMS.SettingsProvider.INamedEnumerable)">
            <summary>
            Name enumerator over a collection
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.Extensions.GetNamedEnumerator``1(CMS.SettingsProvider.INamedEnumerable{``0})">
            <summary>
            Name enumerator over a collection
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.Extensions.StartsWithAny(System.String,System.StringComparison,System.String[])">
            <summary>
            Returns true if the string starts with any of the given strings
            </summary>
            <param name="value">Value to check</param>
            <param name="comparison">Comparison type</param>
            <param name="prefixes">Suffixes to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.Extensions.EndsWithAny(System.String,System.StringComparison,System.String[])">
            <summary>
            Returns true if the string ends with any of the given strings
            </summary>
            <param name="value">Value to check</param>
            <param name="comparison">Comparison type</param>
            <param name="suffixes">Suffixes to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.Extensions.As``1(System.Data.DataSet)">
            <summary>
            Converts the DataSet to a strongly typed one
            </summary>
            <param name="ds">Source data set</param>
        </member>
        <member name="T:CMS.SettingsProvider.ClassEventArgs">
            <summary>
            Class event attributes
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ClassEventArgs.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ClassEventArgs.AssemblyName">
            <summary>
            Assembly name
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ClassEventArgs.Object">
            <summary>
            Returning the object of the given class
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ClassHelper">
            <summary>
            Helper to provide general access to assemblies and classes.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AbstractHelper">
            <summary>
            Abstract helper.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractHelper.LoadHelper``1(``0)">
            <summary>
            Loads the helper based on the given parameters.
            </summary>
            <param name="defaultHelper">Default helper</param>
        </member>
        <member name="F:CMS.SettingsProvider.ClassHelper.ASSEMBLY_APPCODE">
            <summary>
            AppCode constant.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ClassHelper.assemblies">
            <summary>
            Hashtable of loaded assemblies.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ClassHelper.OnGetCustomClass">
            <summary>
            Fires when the custom class is required.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ClassHelper.mHelperObject">
            <summary>
            Helper object.
            </summary> 
        </member>
        <member name="M:CMS.SettingsProvider.ClassHelper.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ClassHelper.GetAssembly(System.String)">
            <summary>
            Loads the given assembly.
            </summary>
            <param name="assemblyName">Assembly name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ClassHelper.GetClass(System.String,System.String)">
            <summary>
            Gets the new object of given class.
            </summary>
            <param name="assemblyName">Assembly name</param>
            <param name="className">Full class name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ClassHelper.GetClass``1(System.String,System.String)">
            <summary>
            Gets the new object of given class.
            </summary>
            <typeparam name="ReturnType">Return class type</typeparam>
            <param name="assemblyName">Assembly name</param>
            <param name="className">Full class name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ClassHelper.GetAssemblyInternal(System.String)">
            <summary>
            Loads the given assembly.
            </summary>
            <param name="assemblyName">Assembly name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ClassHelper.GetClassInternal(System.String,System.String)">
            <summary>
            Gets the new object of given class.
            </summary>
            <param name="assemblyName">Assembly name</param>
            <param name="className">Full class name</param>
        </member>
        <member name="P:CMS.SettingsProvider.ClassHelper.HelperObject">
            <summary>
            Helper object.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSActionContext">
            <summary>
            Action context. Ensures context for the actions block.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSActionContext.#ctor">
            <summary>
            Constructor. Ensures context with special settings for block of actions during the life of this object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSActionContext.#ctor(CMS.SettingsProvider.IUserInfo)">
            <summary>
            Constructor. Ensures that all actions during the life of this object will use the given user context.
            </summary>
            <param name="user">User to use within all actions</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSActionContext.Init">
            <summary>
            Initialize context
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSActionContext.DisableAll">
            <summary>
            Disables logging for synchronization, event log, web farm tasks, versioning and cache dependencies 
            Disables timestamp update 
            Disables object invalidation
            Disables cache usage
            Disables asynchronous actions
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSActionContext.DisableLogging">
            <summary>
            Disables logging of event log, staging and export tasks
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSActionContext.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSActionContext.LogObjectChange">
            <summary>
            Indicates if the object change should be logged.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSActionContext.LogDocumentChange">
            <summary>
            Indicates if the document change should be logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentUser">
            <summary>
            Current user of the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentLogSynchronization">
            <summary>
            Indicates if the staging tasks should be logged within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentLogIntegration">
            <summary>
            Indicates if the integration tasks should be logged within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentEnableLogContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentLogEvents">
            <summary>
            Indicates if the events should be logged within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentLogWebFarmTasks">
            <summary>
            Indicates if the web farm tasks should be logged within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentTouchCacheDependencies">
            <summary>
            Indicates if the objects cache dependencies should be touched within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentUpdateTimeStamp">
            <summary>
            Indicates if the objects time stamps should be updated within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentInvalidateObject">
            <summary>
            Indicates if the objects should be invalidated within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentCreateSearchTask">
            <summary>
            Indicates if the search task should be created for the objects within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentLogExport">
            <summary>
            Indicates if the export tasks should be logged within the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentCreateVersion">
            <summary>
            Indicates if the object version should be created.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentAllowAsyncActions">
            <summary>
            Indicates if the actions can run asynchronously.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentUpdateSystemFields">
            <summary>
            Indicates if the system fields should be updated.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentUseCache">
            <summary>
            Indicates if cache should be used for data operations.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentAllowInitUser">
            <summary>
            Indicates if the current user should be initialized.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentDisconnected">
            <summary>
            Indicates if the objects within current context should behave as disconnected
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CurrentTouchParent">
            <summary>
            Indicates if the objects within current context should touch parent object
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.User">
            <summary>
            User of the context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.LogSynchronization">
            <summary>
            Indicates if the staging tasks should be logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.LogIntegration">
            <summary>
            Indicates if the integration tasks should be logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.EnableLogContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.LogEvents">
            <summary>
            Indicates if the events should be logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.LogWebFarmTasks">
            <summary>
            Indicates if the web farm tasks should be logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.TouchCacheDependencies">
            <summary>
            Indicates if the objects cache dependencies should be touched.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.UpdateTimeStamp">
            <summary>
            Indicates if the objects time stamps should be updated.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.InvalidateObject">
            <summary>
            Indicates if the objects should be invalidated.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CreateSearchTask">
            <summary>
            Indicates if the search task should be created for the objects.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.LogExport">
            <summary>
            Indicates if the export tasks should be logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.CreateVersion">
            <summary>
            Indicates if the object version should be created.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.AllowAsyncActions">
            <summary>
            Indicates if the actions can run asynchronously.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.UpdateSystemFields">
            <summary>
            Indicates if the system fields should be updated.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.UseCache">
            <summary>
            Indicates if cache should be used for data oparations.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.AllowInitUser">
            <summary>
            Indicates if the current user should be initialized.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.Disconnected">
            <summary>
            Indicates if the objects within current context should behave as disconnected
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSActionContext.TouchParent">
            <summary>
            Indicates if the objects within current context should touch parent object
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ContextItems">
            <summary>
            Inserts items into HttpContext.Current.Items.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.Add(System.String,System.Object)">
            <summary>
            Add item.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.Remove(System.String)">
            <summary>
            Remove item.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.Contains(System.String)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.GetItem(System.String)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.Add(System.String,System.Object,System.Boolean)">
            <summary>
            Add item.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.Remove(System.String,System.Boolean)">
            <summary>
            Remove item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.Contains(System.String,System.Boolean)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.GetItem(System.String,System.Boolean)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ContextItems.Clear(System.String)">
            <summary>
            Remove items which start with selected name.
            </summary>
            <param name="startsWith">Starting string of the objects to be removed</param>
        </member>
        <member name="P:CMS.SettingsProvider.ContextItems.CurrentItems">
            <summary>
            Gets the current items.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.LockHelper">
            <summary>
            Class to provide lock objects based on the given key.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.LockHelper.GetLockObject(System.String)">
            <summary>
            Gets the object for lock.
            </summary>
            <param name="key">Lock object key</param>
        </member>
        <member name="T:CMS.SettingsProvider.RequestItems">
            <summary>
            Inserts items into HttpContext.Current.Items.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.Add(System.String,System.Object)">
            <summary>
            Add item.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.Remove(System.String)">
            <summary>
            Remove item.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.Contains(System.String)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.GetItem(System.String)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.Add(System.String,System.Object,System.Boolean)">
            <summary>
            Add item.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.Remove(System.String,System.Boolean)">
            <summary>
            Remove item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.Contains(System.String,System.Boolean)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.GetItem(System.String,System.Boolean)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestItems.Clear(System.String)">
            <summary>
            Remove items which start with selected name.
            </summary>
            <param name="startsWith">Starting string of the objects to be removed</param>
        </member>
        <member name="P:CMS.SettingsProvider.RequestItems.CurrentItems">
            <summary>
            Gets the current items.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ItemsFunctions">
            <summary>
            Items collections functions.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ItemsFunctions.Add(System.Collections.IDictionary,System.String,System.Object,System.Boolean)">
            <summary>
            Add item.
            </summary>
            <param name="items">Items collection</param>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ItemsFunctions.Remove(System.Collections.IDictionary,System.String,System.Boolean)">
            <summary>
            Remove item.
            </summary>
            <param name="items">Items collection</param>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ItemsFunctions.Contains(System.Collections.IDictionary,System.String,System.Boolean)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="items">Items collection</param>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ItemsFunctions.GetItem(System.Collections.IDictionary,System.String,System.Boolean)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="items">Items collection</param>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ItemsFunctions.Clear(System.Collections.IDictionary,System.String)">
            <summary>
            Remove items which start with selected name.
            </summary>
            <param name="items">Items collection</param>
            <param name="startsWith">Starting string of the objects to be removed</param>
        </member>
        <member name="T:CMS.SettingsProvider.RequestLog">
            <summary>
            Contains the log information for the request.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.RequestGUID">
            <summary>
            Request GUID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.ParentLogs">
            <summary>
            Parent logs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.LogTable">
            <summary>
            Logs table.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.RequestURL">
            <summary>
            Request URL.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.RequestTime">
            <summary>
            Request time.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.CurrentLogItem">
            <summary>
            Currently active log item.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.CurrentContextItem">
            <summary>
            Currently active context item.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.Value">
            <summary>
            Value for general single value purposes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.ValueCollections">
            <summary>
            Value collections for multiple values purposes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.mLastLogs">
            <summary>
            Last logs array.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.mLogLength">
            <summary>
            Logs length.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLog.mLogRegistered">
            <summary>
            True if the log has been already registered.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.RequestLog.#ctor(CMS.SettingsProvider.RequestLogs,System.Data.DataTable,System.Collections.ArrayList,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="parentLogs">Parent logs container</param>
            <param name="logTable">DataTable for the log</param>
            <param name="lastLogs">Last logs array</param>
            <param name="logLength">Maximum log length</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestLog.Register">
            <summary>
            Registers the log within the log list.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.RequestLog.FindByGUID(System.Collections.ArrayList,System.Guid)">
            <summary>
            Attempts to find the log by the GUID.
            </summary>
            <param name="logs">Logs to search</param>
            <param name="guid">Guid to search</param>
        </member>
        <member name="T:CMS.SettingsProvider.RequestLogs">
            <summary>
            Class encapsulating the request logs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.mRegisterNewLogs">
            <summary>
            True if new logs should be registered within their lists.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.RequestGUID">
            <summary>
            Request GUID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.QueryLog">
            <summary>
            Query log for the request.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.SecurityLog">
            <summary>
            Security log for the request.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.CacheLog">
            <summary>
            Cache log for the request.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.FilesLog">
            <summary>
            Files log for the request.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.ViewStateLog">
            <summary>
            ViewState log for the request.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.OutputLog">
            <summary>
            Output log.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.WebFarmLog">
            <summary>
            Web farm log.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.RequestLog">
            <summary>
            Request log.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.MacrosLog">
            <summary>
            Macros log for the request.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.AnalyticsLog">
            <summary>
            Analytics log for the request.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.RequestTime">
            <summary>
            Request time.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestLogs.RequestURL">
            <summary>
            Request URL.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.RequestLogs.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.RequestLogs.CreateLog(System.Data.DataTable,System.Collections.ArrayList,System.Int32)">
            <summary>
            Creates new request log.
            </summary>
            <param name="dt">Log table</param>
            <param name="lastLogs">Last logs array</param>
            <param name="logLength">Maximum log length</param>
        </member>
        <member name="M:CMS.SettingsProvider.RequestLogs.RegisterLogs">
            <summary>
            Registers all request logs to the appropriate log lists.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.RequestSettings">
            <summary>
            Container containing current request settings.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugSQLQueries">
            <summary>
            Debug current request queries.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugSecurity">
            <summary>
            Debug current request security operations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugCache">
            <summary>
            Debug current request cache access.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugFiles">
            <summary>
            Debug current request files access.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugRequest">
            <summary>
            Debug current request processing.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugOutput">
            <summary>
            Debug current request output.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugMacros">
            <summary>
            Debug current request macros.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugWebFarm">
            <summary>
            Debug current request web farm.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.RequestSettings.DebugAnalytics">
            <summary>
            Debug current request web analytics.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.RequestSettings.Current">
            <summary>
            Returns current request settings.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ThreadItems">
            <summary>
            Thread items collection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ThreadItems.mAllThreadsItems">
            <summary>
            Dictionaries of all the threads.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.Add(System.String,System.Object)">
            <summary>
            Add item.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.Remove(System.String)">
            <summary>
            Remove item.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.Contains(System.String)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.GetItem(System.String)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.Add(System.String,System.Object,System.Boolean)">
            <summary>
            Add item.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.Remove(System.String,System.Boolean)">
            <summary>
            Remove item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.Contains(System.String,System.Boolean)">
            <summary>
            Check if stock contain item.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.GetItem(System.String,System.Boolean)">
            <summary>
            Returns object which matches by key.
            </summary>
            <param name="key">Object key</param>
            <param name="caseSensitive">If true, the key is case sensitive</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.Clear(System.String)">
            <summary>
            Remove items which start with selected name.
            </summary>
            <param name="startsWith">Starting string of the objects to be removed</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.EnsureItems(System.Int32)">
            <summary>
            Ensures the items collection of the given thread.
            </summary>
            <param name="threadId">Thread ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ThreadItems.DeleteThreadItems(System.Int32)">
            <summary>
            Removes the thread items array for the given thread.
            </summary>
            <param name="threadId">Thread ID</param>
        </member>
        <member name="P:CMS.SettingsProvider.ThreadItems.AllThreadsItems">
            <summary>
            Dictionaries of all the threads.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ThreadItems.CurrentItems">
            <summary>
            Current items collection.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ThreadItems.ThreadItemsDictionary">
            <summary>
            Thread items dictionary.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SafeDictionary`2">
            <summary>
            Thread safe dictionary template.
            </summary>
            <typeparam name="KeyType">Key type</typeparam>
            <typeparam name="ValueType">Value type</typeparam>
        </member>
        <member name="F:CMS.SettingsProvider.SafeDictionary`2.mDefaultValue">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SafeDictionary`2.mAllowNulls">
            <summary>
            If true, the dictionary allows null values.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SafeDictionary`2.mNullValue">
            <summary>
            Null value.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SafeDictionary`2.#ctor">
            <summary>
            SafeDictionary constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SafeDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SettingsProvider.SafeDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Tries to get the value, returns true if the retrieval was successful.
            </summary>
            <param name="key">Value key</param>
            <param name="value">Returning value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SafeDictionary`2.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization method.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="P:CMS.SettingsProvider.SafeDictionary`2.Item(`0)">
            <summary>
            Items indexer. Gets or sets the value in the dictionary.
            </summary>
            <param name="key">Value key</param>
        </member>
        <member name="P:CMS.SettingsProvider.SafeDictionary`2.AllowNulls">
            <summary>
            If true, the dictionary allows null values as valid.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SafeDictionary`2.NullValue">
            <summary>
            Null value.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ThreadItems.ThreadsDictionary">
            <summary>
            Threads dictionary.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.RequestSettingsOnDemand">
            <summary>
            Encapsulates the view mode but doesn't request it until it is demanded by Value.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.RequestSettingsOnDemand.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DateTimeContainer">
            <summary>
            Object encapsulating DateTime objects to be accessible via macro engine.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IDataContainer">
            <summary>
            General data container interface.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ISimpleDataContainer">
            <summary>
            Simple data container interface (does not provide any information about the columns).
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ISimpleDataContainer.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ISimpleDataContainer.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="P:CMS.SettingsProvider.ISimpleDataContainer.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDataContainer.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.IDataContainer.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.IDataContainer.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DateTimeContainer.#ctor(System.DateTime)">
            <summary>
            Creates new instance of DateTimeContainer.
            </summary>
            <param name="dt">DateTime object to be encapsulated</param>
        </member>
        <member name="M:CMS.SettingsProvider.DateTimeContainer.GetValue(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DateTimeContainer.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SettingsProvider.DateTimeContainer.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DateTimeContainer.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DateTimeContainer.ToString">
            <summary>
            Returns string representation of datetime.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CMS.SettingsProvider.DateTimeContainer.DateTime">
            <summary>
            Gets the encapsulated DateTime.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DateTimeContainer.Item(System.String)">
            <summary>
            Gets the value of the column, setter is not implemented.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DateTimeContainer.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DictionaryContainer">
            <summary>
            Container to wrap the IDictionary[string, object] structure
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DictionaryContainer.mInnerDictionary">
            <summary>
            Wrapped dictionary
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DictionaryContainer.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Constructor
            </summary>
            <param name="dict">Wrapped dictionary</param>
        </member>
        <member name="M:CMS.SettingsProvider.DictionaryContainer.GetValue(System.String)">
            <summary>
            Gets the value from QueryString.
            </summary>
            <param name="key">QueryString key</param>
        </member>
        <member name="M:CMS.SettingsProvider.DictionaryContainer.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="key">QueryString key</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SettingsProvider.DictionaryContainer.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DictionaryContainer.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DictionaryContainer.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DictionaryContainer.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AbstractObjectCollection">
            <summary>
            Base class for the object collection.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AbstractQueryProvider">
            <summary>
            Provides base methods for the LINQ expression processing.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessExpression(System.Linq.Expressions.Expression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the given expression.
            </summary>
            <param name="exp">Expression to process</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessBinding(System.Linq.Expressions.MemberBinding,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the member binding.
            </summary>
            <param name="binding">Binding to process</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessElementInitializer(System.Linq.Expressions.ElementInit,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the element initializer.
            </summary>
            <param name="initializer">Initializer to process</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessUnary(System.Linq.Expressions.UnaryExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the unary expression.
            </summary>
            <param name="u">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessBinary(System.Linq.Expressions.BinaryExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the binary expression.
            </summary>
            <param name="b">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessTypeIs(System.Linq.Expressions.TypeBinaryExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the type IDs.
            </summary>
            <param name="b">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessConstant(System.Linq.Expressions.ConstantExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Constant expression.
            </summary>
            <param name="c">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessConditional(System.Linq.Expressions.ConditionalExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the conditional expression.
            </summary>
            <param name="c">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessParameter(System.Linq.Expressions.ParameterExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the parameter.
            </summary>
            <param name="p">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessMemberAccess(System.Linq.Expressions.MemberExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the member access.
            </summary>
            <param name="m">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessMethodCall(System.Linq.Expressions.MethodCallExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the method call.
            </summary>
            <param name="m">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression},CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the list of expressions.
            </summary>
            <param name="original">List</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessMemberAssignment(System.Linq.Expressions.MemberAssignment,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the member assignment.
            </summary>
            <param name="assignment">Assignment</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the member member binding.
            </summary>
            <param name="binding">Binding</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessMemberListBinding(System.Linq.Expressions.MemberListBinding,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the member list binding.
            </summary>
            <param name="binding">Binding</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding},CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the binding list.
            </summary>
            <param name="original">List</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessElementInitializerList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit},CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Process list of element initializers.
            </summary>
            <param name="original">List</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessLambda(System.Linq.Expressions.LambdaExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the lambda expression.
            </summary>
            <param name="lambda">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessNew(System.Linq.Expressions.NewExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the new expression.
            </summary>
            <param name="nex">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessMemberInit(System.Linq.Expressions.MemberInitExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes initialization of the member.
            </summary>
            <param name="init">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessListInit(System.Linq.Expressions.ListInitExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the initialization of the list.
            </summary>
            <param name="init">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessNewArray(System.Linq.Expressions.NewArrayExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the array.
            </summary>
            <param name="na">Array</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractQueryProvider.ProcessInvocation(System.Linq.Expressions.InvocationExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Process the invocation of the method.
            </summary>
            <param name="iv">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractObjectCollection.mCount">
            <summary>
            Total number of items.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractObjectCollection.mDisconnectedCount">
            <summary>
            Number of disconnected references for this collection 
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractObjectCollection.mLoadBinaryData">
            <summary>
            Indicates whether to load binary data into the collections.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractObjectCollection.Columns">
            <summary>
            Columns to get.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractObjectCollection.WhereCondition">
            <summary>
            Where condition.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractObjectCollection.TopN">
            <summary>
            Select top N objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractObjectCollection.mName">
            <summary>
            Collection name
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractObjectCollection.Disconnect">
            <summary>
            Disconnects the collection from the database
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractObjectCollection.Reconnect">
            <summary>
            Reconnects the collection to the database
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractObjectCollection.MakeEmpty">
            <summary>
            Makes the collection empty.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractObjectCollection.CloneCollection">
            <summary>
            Creates the clone of the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractObjectCollection.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">Object to compare</param>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractObjectCollection.ParentStorage">
            <summary>
            Parent storage
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractObjectCollection.OrderBy">
            <summary>
            Order by expression.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractObjectCollection.LoadBinaryData">
            <summary>
            Gets or sets the value which indicates whether to load binary data into the collections.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractObjectCollection.IsDisconnected">
            <summary>
            Returns true if this collection is disconnected from the database
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractObjectCollection.IsLastVersion">
            <summary>
            If true, the document is the last version (retrieved using DocumentHelper.GetDocument).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractObjectCollection.EnforceReadOnlyDataAccess">
            <summary>
            If true, the read only access to the data is enforced within the transaction.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractObjectCollection.Name">
            <summary>
            Collection name
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ExpressionBuilderSettings">
            <summary>
            Object to encapsulate the expression builder settings
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ExpressionBuilderSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExpressionBuilderSettings.Result">
            <summary>
            String builder where to collect results
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExpressionBuilderSettings.MemberSeparator">
            <summary>
            Separator for member access
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DataRowContainer">
            <summary>
            Object encapsulating DataRow objects to be accessible via macro engine.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataRowContainer.#ctor(System.Data.DataRow)">
            <summary>
            Creates new instance of DataRowContainer.
            </summary>
            <param name="dr">DataRow object to be encapsulated</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataRowContainer.#ctor(System.Data.DataRowView)">
            <summary>
            Creates new instance of DataRowContainer from DataRowView.
            </summary>
            <param name="dr">DataRowView to be encapsulated</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataRowContainer.GetValue(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataRowContainer.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataRowContainer.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataRowContainer.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataRowContainer.DataRow">
            <summary>
            Gets the encapsulated DataRow.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataRowContainer.AddTableProperty">
            <summary>
            If true, Table property of DataRow will be included in the supported columns of this container.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataRowContainer.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataRowContainer.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DataSetContainer">
            <summary>
            Object encapsulating DataSet objects to be accessible via macro engine.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataSetContainer.#ctor(System.Data.DataSet)">
            <summary>
            Creates new instance of DataSetContainer.
            </summary>
            <param name="ds">DataSet object to be encapsulated</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataSetContainer.GetValue(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataSetContainer.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataSetContainer.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataSetContainer.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataSetContainer.DataSet">
            <summary>
            Gets the encapsulated DataSet.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataSetContainer.Item(System.String)">
            <summary>
            Gets the value of the column, setter is not implemented.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataSetContainer.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DataTableContainer">
            <summary>
            Object encapsulating DataTable objects to be accessible via macro engine.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataTableContainer.#ctor(System.Data.DataTable)">
            <summary>
            Creates new instance of DataTableContainer.
            </summary>
            <param name="dt">DataTable object to be encapsulated</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataTableContainer.GetValue(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataTableContainer.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataTableContainer.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataTableContainer.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataTableContainer.DataTable">
            <summary>
            Gets the encapsulated DataTable.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataTableContainer.Item(System.String)">
            <summary>
            Gets the value of the column, setter is not implemented.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataTableContainer.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.GroupedDataSource">
            <summary>
            Class providing DataSource grouping - one pass DataSource grouping.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.GroupedDataSource.mDataSource">
            <summary>
            Data source.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.GroupedDataSource.mColumnName">
            <summary>
            Column name for grouping.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.GroupedDataSource.mLevelColumnName">
            <summary>
            Column name for level value.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.GroupedDataSource.mTopItem">
            <summary>
            Top item object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.GroupedDataSource.firstLevel">
            <summary>
            Top level of the collection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.GroupedDataSource.mGroups">
            <summary>
            Resulting groups.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.#ctor(System.Object,System.String)">
            <summary>
            Constructor, initializes the GroupedDataSource.
            </summary>
            <param name="dataSource">Data source</param>
            <param name="columnName">Column name to use for item grouping</param>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructor, initializes the GroupedDataSource.
            </summary>
            <param name="dataSource">Data source</param>
            <param name="columnName">Column name to use for item grouping</param>
            <param name="levelColumnName">Column name to use for level item</param>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.LoadGroups">
            <summary>
            Loads the data groups.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.AddDataRow(System.Collections.Hashtable,System.Data.DataRowView)">
            <summary>
            Adds the item to the group table.
            </summary>
            <param name="groupTable">Group table</param>
            <param name="dr">DataRowView to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.EnsureList(System.Collections.Hashtable,System.Object)">
            <summary>
            Ensures the list with specified key value.
            </summary>
            <param name="groupTable">Group table</param>
            <param name="key">List key</param>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.GetGroupView(System.Object)">
            <summary>
            Returns the array list of items from specified group, type of the item depends on the DataSource
            DataSet, DataView, DataTable -> DataRowView
            </summary>
            <param name="itemValue">Key item value</param>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.GetGroup(System.Object)">
            <summary>
            Returns the array list of items from specified group, type of the item depends on the DataSource
            DataSet, DataView, DataTable -> DataRow
            </summary>
            <param name="itemValue">Key item value</param>
            <remarks>This method is slower than GetGroupView and creates a copy of the group</remarks>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.GetGroupArray(System.Object)">
            <summary>
            Returns the item group as an array.
            </summary>
            <param name="itemValue">Item value</param>
            <remarks>This method is slower than GetGroupView and creates a copy of the group</remarks>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.GetGroupDataTable(System.Object)">
            <summary>
            Returns the item group as an DataTable.
            </summary>
            <param name="itemValue">Item value</param>
            <remarks>This method is slower than GetGroupView and creates a copy of the group</remarks>
        </member>
        <member name="M:CMS.SettingsProvider.GroupedDataSource.GetEnumerator">
            <summary>
            Returns grouped datasource enumerator.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.GroupedDataSource.DataSource">
            <summary>
            Data source.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.GroupedDataSource.ColumnName">
            <summary>
            Column name for grouping.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.GroupedDataSource.LevelColumnName">
            <summary>
            Column name for level value.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.GroupedDataSource.TopItem">
            <summary>
            Gets the first available item.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.MissingValue">
            <summary>
            Missing value.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.MissingValue.ToString">
            <summary>
            ToString, returns (missing).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CombinedInfoObjectCollection">
            <summary>
            Collection that combines several info object collections of specific type.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CombinedObjectCollection`2">
            <summary>
            Collection that combines several object collections of specific type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CombinedObjectCollection`2.mCollections">
            <summary>
            List of inner collections.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CombinedObjectCollection`2.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CombinedObjectCollection`2.Add(`0)">
            <summary>
            Adds the collection to the combined collection.
            </summary>
            <param name="collection">Collection to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.CombinedObjectCollection`2.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CombinedObjectCollection`2.GetEnumerator">
            <summary>
            Gets the enumerator over the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CombinedObjectCollection`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator over the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CombinedInfoObjectCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.FilteredInfoObjectCollection">
            <summary>
            Provides filtering over the collection.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.InfoObjectCollection">
            <summary>
            Collection of GeneralizedInfos.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectCollection`1">
            <summary>
            Object list.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IIndexable`1">
            <summary>
            Interface to access collections through int and string indexers
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.INameIndexable`1">
            <summary>
            Interface to access collections through string indexers by name - Generic variant
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.INameIndexable`1.Item(System.String)">
            <summary>
            String indexer, gets or sets the value with the specified name
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="P:CMS.SettingsProvider.IIndexable`1.Item(System.Int32)">
            <summary>
            Integer indexer, gets or sets the value on the specified index
            </summary>
            <param name="index">Index</param>
        </member>
        <member name="T:CMS.SettingsProvider.INamedEnumerable`1">
            <summary>
            Sorted enumerable interface
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.INamedEnumerable">
            <summary>
            Sorted enumerable interface
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.INamedEnumerable.GetObjectName(System.Object)">
            <summary>
            Returns the name of the given object
            </summary>
            <param name="obj">Object for which to get the name</param>
        </member>
        <member name="P:CMS.SettingsProvider.INamedEnumerable.ItemsHaveNames">
            <summary>
            Returns true if the items in the collection have names
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.INamedEnumerable.SortNames">
            <summary>
            Specifies whether the names should be sorted or not
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectCollection`1.mSourceData">
            <summary>
            Source data for the collection
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectCollection`1.mPageSize">
            <summary>
            Page size for loading of the items.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectCollection`1.mItems">
            <summary>
            Items collection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectCollection`1.mAllowPaging">
            <summary>
            If true, the paging of the data is allowed (data is loaded in batches).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectCollection`1.mNewItems">
            <summary>
            New items added to the collection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectCollection`1.mDeletedItems">
            <summary>
            Deleted items removed from the collection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectCollection`1.mObjectsByName">
            <summary>
            Objects by name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectCollection`1.mColumnNames">
            <summary>
            Column names
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.#ctor">
            <summary>
            Constructor, creates the list.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.#ctor(System.Data.DataSet)">
            <summary>
            Constructor, creates the static collection built from the given source data
            </summary>
            <param name="sourceData">Source data for the collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.EnsureItems(System.Int32)">
            <summary>
            Ensures the specified number of items in the item list.
            </summary>
            <param name="count">Number of items</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetObjectByName(System.String)">
            <summary>
            Gets the object by its name.
            </summary>
            <param name="name">Name of the object</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetItem(System.Int32)">
            <summary>
            Gets the item on the specified index.
            </summary>
            <param name="index">Item index to get</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetDataFromDB(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the data for the collection.
            </summary>
            <param name="where">Where condition</param>
            <param name="offset">Starting offset for the data</param>
            <param name="maxRecords">Maximum number of records to get</param>
            <param name="totalRecords">Returning total number of records</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetData(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the data for the collection.
            </summary>
            <param name="where">Where condition</param>
            <param name="offset">Starting offset for the data</param>
            <param name="maxRecords">Maximum number of records to get</param>
            <param name="totalRecords">Returning total number of records</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.CreateNewObject(System.Data.DataRow)">
            <summary>
            Creates new object for this collection.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetObjectName(`0)">
            <summary>
            Registers new object in this collection.
            </summary>
            <param name="obj">Object</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetNameWhereCondition(System.String)">
            <summary>
            Gets the where condition for the given object name.
            </summary>
            <param name="name">Object name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.Clone">
            <summary>
            Creates the clone of the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.CloneCollection">
            <summary>
            Creates the clone of this collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.Add(`0[])">
            <summary>
            Adds new object to the collection.
            </summary>
            <param name="objects">Object to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.Remove(`0)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="obj">Object to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetObjectEnumerator">
            <summary>
            Gets the object enumerator for the collection
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetEnumerator">
            <summary>
            Gets the enumerator for the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the general enumerator for the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Creates the query from given expression.
            </summary>
            <param name="expression">Expression to parse</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>
            Creates the query from given expression.
            </summary>
            <param name="expression">Expression to parse</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.Execute``1(System.Linq.Expressions.Expression)">
            <summary>
            Executes the query.
            </summary>
            <param name="expression">Query expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executes the query.
            </summary>
            <param name="expression">Query expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.LoadExpression(System.Linq.Expressions.Expression)">
            <summary>
            Loads the given expression.
            </summary>
            <param name="ex">Expression to load</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.ProcessUnary(System.Linq.Expressions.UnaryExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the unary expression.
            </summary>
            <param name="u">Expression</param>
            <param name="sb">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.ProcessBinary(System.Linq.Expressions.BinaryExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the binary expression.
            </summary>
            <param name="b">Expression</param>
            <param name="s">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.ProcessConstant(System.Linq.Expressions.ConstantExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Constant expression.
            </summary>
            <param name="c">Expression</param>
            <param name="s">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.ProcessMemberAccess(System.Linq.Expressions.MemberExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the member access.
            </summary>
            <param name="m">Expression</param>
            <param name="s">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.ProcessMethodCall(System.Linq.Expressions.MethodCallExpression,CMS.SettingsProvider.ExpressionBuilderSettings)">
            <summary>
            Processes the method call.
            </summary>
            <param name="m">Expression</param>
            <param name="settings">ExpressionBuilderSettings for processing of children</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.StripQuotes(System.Linq.Expressions.Expression)">
            <summary>
            Removes the quotes from the expression.
            </summary>
            <param name="e">Expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns true if given column name exists and the value can be returned.
            </summary>
            <param name="columnName">Name of the column</param>
            <param name="value">Here the result of GetValue is returned</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.ContainsColumn(System.String)">
            <summary>
            Returns true if given column name exists.
            </summary>
            <param name="columnName">Name of the column</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetValue(System.String)">
            <summary>
            Returns the value for specified column name
            </summary>
            <param name="columnName">Name of the column</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName"></param>
            <param name="value"></param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectCollection`1.GetObjectName(System.Object)">
            <summary>
            Returns the name of the given object
            </summary>
            <param name="obj">Object for which to get the name</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.Items">
            <summary>
            Returns the items collection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.ObjectsByName">
            <summary>
            Objects by name collection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.Item(System.String)">
            <summary>
            Returns the object registered by the specific name.
            </summary>
            <param name="name">Object name (indexer)</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the object on specific index.
            </summary>
            <param name="index">Object index to get</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.Count">
            <summary>
            Returns the number of items.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.AllowPaging">
            <summary>
            If true, the paging of the data is allowed (data is loaded in batches).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.LoadBinaryData">
            <summary>
            Gets or sets the value which indicates whether to load binary data into the collections.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.NameColumn">
            <summary>
            Name column name
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.ElementType">
            <summary>
            Returns the element type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.Expression">
            <summary>
            Returns the expression.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.Provider">
            <summary>
            Query provider.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.CMS#SettingsProvider#INameIndexable#Item(System.String)">
            <summary>
            Returns the object registered by the specific name.
            </summary>
            <param name="name">Object name (indexer)</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.ColumnNames">
            <summary>
            Returns list of supported columns.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.CMS#SettingsProvider#ISimpleDataContainer#Item(System.String)">
            <summary>
            Gets the value for specified column name. Setter is not implemented.
            </summary>
            <param name="columnName">Name of the column</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.SortNames">
            <summary>
            If true, the names in enumeration are sorted
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectCollection`1.ItemsHaveNames">
            <summary>
            Returns true if the items in the collection have names
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.InfoObjectCollection.mObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.InfoObjectCollection.mObject">
            <summary>
            Object instance of specified type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.InfoObjectCollection.mOrderBy">
            <summary>
            Order by expression.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.InfoObjectCollection.mFieldsAsObjects">
            <summary>
            Related objects wrappers
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.InfoObjectCollection.mItemsAsFields">
            <summary>
            Fields wrappers
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.InfoObjectCollection.mProperties">
            <summary>
            Property names
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="objectType">Object type</param>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.#ctor(System.String,CMS.SettingsProvider.BaseInfo,CMS.SettingsProvider.ICMSStorage)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="parentObject">Parent object</param>
            <param name="parentStorage">Parent storage</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.CreateNewObject(System.Data.DataRow)">
            <summary>
            Creates new instance of the ensapsulated object.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.GetObjectName(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Gets the unique object name from the given object.
            </summary>
            <param name="infoObj">Object</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.GetNameWhereCondition(System.String)">
            <summary>
            Gets the where condition for the given object name.
            </summary>
            <param name="name">Object name</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.GetData(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the data for the collection.
            </summary>
            <param name="where">Where condition</param>
            <param name="offset">Starting offset for the data</param>
            <param name="maxRecords">Maximum number of records to get</param>
            <param name="totalRecords">Returning total number of records</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.CopyPropertiesTo(CMS.SettingsProvider.InfoObjectCollection)">
            <summary>
            Copies the properties of this collection to the other collection
            </summary>
            <param name="col">Target collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.Clone">
            <summary>
            Creates the clone of the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.SubmitChanges">
            <summary>
            Submits the changes in the collection to the database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.Clear">
            <summary>
            Clears the current items in the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.Add(CMS.SettingsProvider.BaseInfo[])">
            <summary>
            Adds new object to the collection.
            </summary>
            <param name="objects">Objects to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.As``1">
            <summary>
            Makes a wrapper of the collection with specified type of the items.
            </summary>
            <typeparam name="TargetType">Target type of the items</typeparam>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.GetItemsAsFields(System.String)">
            <summary>
            Returns the updatable collection of fields of collection items
            </summary>
            <param name="propertyName">Name of the properties to extract</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.GetFieldsAsObjects(System.String)">
            <summary>
            Gets the collection of objects that are referenced by the given property
            </summary>
            <param name="propertyName">Property name</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.GetFieldsAsObjects(System.String,System.String)">
            <summary>
            Gets the collection of objects that are referenced by the given property
            </summary>
            <param name="propertyName">Property name</param>
            <param name="objectType">Object type of the target objects</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.Load(System.Collections.Generic.List{CMS.SettingsProvider.BaseInfo})">
            <summary>
            Clears the data in the collection and loads objects from the given list.
            </summary>
            <param name="objects">Objects data to load</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.RegisterProperties(System.Collections.Generic.List{System.String})">
            <summary>
            Registers supported properties
            </summary>
            <param name="properties">List with supported properties</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.GetProperty(System.String)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.Properties">
            <summary>
            Returns list of supported properties.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.FieldsAsObjects">
            <summary>
            Related objects wrappers
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.ItemsAsFields">
            <summary>
            Fields wrappers
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.IsDisconnected">
            <summary>
            Returns true if the collection is disconnected from the data source
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.ParentObject">
            <summary>
            Parent object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.ObjectType">
            <summary>
            Returns the object type of the objects stored within the collection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.Object">
            <summary>
            Object instance of the specified type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.OrderBy">
            <summary>
            Order by expression.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.TypeInfo">
            <summary>
            Type info for the collection object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.Name">
            <summary>
            Collection name. Returns object type if name is not defined
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection.NameColumn">
            <summary>
            Name column name
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.FilteredInfoObjectCollection.#ctor(System.String,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="parentObject">Parent object</param>
        </member>
        <member name="M:CMS.SettingsProvider.FilteredInfoObjectCollection.GetWhereCondition(System.String)">
            <summary>
            Gets the where condition for the given filter.
            </summary>
            <param name="filterName">Filter name</param>
        </member>
        <member name="P:CMS.SettingsProvider.FilteredInfoObjectCollection.Item(System.String)">
            <summary>
            Name for the filtering.
            </summary>
            <param name="filterName">Filter name</param>
        </member>
        <member name="T:CMS.SettingsProvider.CollectionPropertyWrapper`1">
            <summary>
            Wrapper that transforms the collection to values of its object properties
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CollectionPropertyWrapper`1.#ctor(CMS.SettingsProvider.ObjectCollection{`0},System.String)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection to wrap</param>
            <param name="propertyName">Property to extract</param>
        </member>
        <member name="M:CMS.SettingsProvider.CollectionPropertyWrapper`1.GetProperty(`0)">
            <summary>
            Gets the property value for the given object
            </summary>
            <param name="obj">Obj from which to take the property</param>
        </member>
        <member name="M:CMS.SettingsProvider.CollectionPropertyWrapper`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the general enumerator for the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CollectionPropertyWrapper`1.GetEnumerator">
            <summary>
            Gets the enumerator for the collection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyWrapper`1.Collection">
            <summary>
            Collection to wrap
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyWrapper`1.PropertyName">
            <summary>
            Property name to extract
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyWrapper`1.Item(System.String)">
            <summary>
            Returns the property of an object registered by the specific name.
            </summary>
            <param name="name">Object name (indexer)</param>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyWrapper`1.Item(System.Int32)">
            <summary>
            Gets or sets the object on specific index.
            </summary>
            <param name="index">Object index to get</param>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyWrapper`1.Count">
            <summary>
            Returns the number of items.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CollectionPropertyWrapper`1.CMS#SettingsProvider#INameIndexable#Item(System.String)">
            <summary>
            Indexer returning value as object
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectProperty">
            <summary>
            Object property wrapper
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectProperty.mValue">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectProperty.#ctor(System.Object)">
            <summary>
            Constructor - Anonymous object property
            </summary>
            <param name="value">Property value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectProperty.#ctor(CMS.SettingsProvider.IDataContainer,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="infoObj">Info object</param>
            <param name="propertyName">Property name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectProperty.ToString">
            <summary>
            Converts the object value to string
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectProperty.InjectValue(System.Object)">
            <summary>
            Injects the specified value to the property without modifying the object
            </summary>
            <param name="value">Value to inject</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectProperty.op_Implicit(CMS.SettingsProvider.ObjectProperty)~System.String">
            <summary>
            Implicit operator for conversion from object property to string
            </summary>
            <param name="op">Object property</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectProperty.PropertyName">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectProperty.Object">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectProperty.Value">
            <summary>
            Property value
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectRelationshipsCollection">
            <summary>
            Collection of object relationships filtered by relationship name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRelationshipsCollection.#ctor(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRelationshipsCollection.GetWhereCondition(System.String)">
            <summary>
            Gets the where condition for filtering.
            </summary>
            <param name="filterName">Filter name</param>
        </member>
        <member name="T:CMS.SettingsProvider.SelectConditionList">
            <summary>
            List of select conditions.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SelectConditionList.mList">
            <summary>
            Inner list of select conditions.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SelectConditionList.Dispose">
            <summary>
            Disposes the list.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SelectConditionList.Add(CMS.SettingsProvider.SelectCondition)">
            <summary>
            Adds the condition into the list.
            </summary>
            <param name="condition">Condition to add</param>
        </member>
        <member name="T:CMS.Security.Dummy">
            <summary>
            DO NOT DELETE THIS CLASS - This class prevents the compiler from dropping entire namespace under .NET 4.0.
            </summary>
        </member>
        <member name="M:CMS.Security.Dummy.#ctor">
            <summary>
            DO NOT DELETE THIS CLASS - This class prevents the compiler from dropping entire namespace under .NET 4.0.
            </summary>
        </member>
        <member name="T:CMS.Security.SecurityRulesAttribute">
            <summary>
            Security rules attribute to provide backward compatibility with .NET 4 security
            </summary>
        </member>
        <member name="M:CMS.Security.SecurityRulesAttribute.#ctor(CMS.Security.SecurityRuleSet)">
            <summary>
            Constructor
            </summary>
            <param name="level">Security level to use</param>
        </member>
        <member name="T:CMS.Security.SecurityRuleSet">
            <summary>
            Security ruleset enum to provide backward compatibility with .NET 4 security
            </summary>
        </member>
        <member name="F:CMS.Security.SecurityRuleSet.Level1">
            <summary>
            Level 1 - .NET 2.0 security
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IDNotTranslatedException">
            <summary>
            Thrown when identifier was required and was not translated
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSException">
            <summary>
            Base class for the CMS exceptions.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Exception meesage</param>
        </member>
        <member name="P:CMS.SettingsProvider.CMSException.CustomMessage">
            <summary>
            Custom message.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSException.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDNotTranslatedException.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="columnName">Column name of not translated object</param>
            <param name="codeName">Code name of not translated object</param>
            <param name="className">Class name of not translated object</param>
            <param name="id">Identifier of not translated object</param>
        </member>
        <member name="M:CMS.SettingsProvider.IDNotTranslatedException.GetErrorMessage(System.String,System.String,System.String,System.Int32)">
            <summary>
            Builds exception error message.
            </summary>
            <param name="columnName">Column name of not translated object</param>
            <param name="codeName">Code name of not translated object</param>
            <param name="className">Class name of not translated object</param>
            <param name="id">Identifier of not translated object</param>
            <returns>Error message based on given parameters</returns>
        </member>
        <member name="P:CMS.SettingsProvider.IDNotTranslatedException.ClassName">
            <summary>
            Class name of not translated object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDNotTranslatedException.CodeName">
            <summary>
            Code name of not translated object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDNotTranslatedException.ColumnName">
            <summary>
            Column name of not translated object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDNotTranslatedException.ID">
            <summary>
            Identifier of not translated object.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ExportFormatEnum">
            <summary>
            Export format enumeration.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ExportFormatEnum.XML">
            <summary>
            XML format
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ExportFormatEnum.JSON">
            <summary>
            JSON format
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ExportFormatEnum.ATOM10">
            <summary>
            Atom 1.0 format
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ExportFormatEnum.RSS20">
            <summary>
            RSS 2.0 format
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TraverseObjectSettings">
            <summary>
            Class encapsulating parameters for GeneralizedInfo serialization (export).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.RequestStockKey">
            <summary>
            Returns key for request stock helper caching.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.TranslationHelper">
            <summary>
            Translation helper to pass to the callback methods.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.Parameter">
            <summary>
            Custom object passed as a parameter to export settings.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.Operation">
            <summary>
            Operation type (Export / Synchronization / etc.). According to this parameter export determines which child / binding objects to include in the export.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.CreateHierarchy">
            <summary>
            If true, result will be hierarchical (children, bindings in lower level than parent etc.).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.HandleBoundObjects">
            <summary>
            If false, all bound objects (such as children or all types of bindings) are not being handled.
            If true, handling of these objects is determined by more specific settings (such as IncludeChildren, IncludeBindings, etc.)
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.IncludeChildren">
            <summary>
            If true, child objects are included in the result.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.IncludeBindings">
            <summary>
            If true, binding objects are included in the result.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.IncludeOtherBindings">
            <summary>
            If true, other binding objects are included in the result.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.IncludeSiteBindings">
            <summary>
            If true, site binding objects are included in the result. This setting is applied only when IncludeBindings is true.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.IncludeTranslations">
            <summary>
            If true, translation table is exported within the result as well.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.ProcessTranslations">
            <summary>
            If true, translation table is filled within ProcessTranslations metod.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.IncludeCategories">
            <summary>
            If true, parent category hierarchy of the object is included in the result as well.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.IncludeMetafiles">
            <summary>
            If true, metafiles of the object are included in the result as well.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.IncludeRelationships">
            <summary>
            If true, relationships of the object are included in the result as well.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.ExcludedNames">
            <summary>
            Objects with codename or display name starting with these names will be filtered out.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.MaxRelativeLevel">
            <summary>
            Determines maximal level of the relationship (prent-child). -1 means all levels, 0 means no child objects, 1 means first level of children, etc.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.DisableCollectionPaging">
            <summary>
            If true, the traversal process sets AllowPaging to false to all the collections it goes through.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.EnsureBinaryData">
            <summary>
            If true, all the collections are forced to load binary data.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.DocLinkedDocuments">
            <summary>
            If true, linked documents are included in the result.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.DocConnectedObjects">
            <summary>
            Gets or sets the list of collections from ConnectedObjects collection which will go into the result.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.ProcessObjectCallback">
            <summary>
            Method which is called to process info object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.ProcessItemCallback">
            <summary>
            Method which is called to process an item within collection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.ProcessIDCallback">
            <summary>
            Method which is called to process any FK ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.ProcessStartCollectionCallback">
            <summary>
            Method which is called when new level in hierarchy is created.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.ProcessArraySeparatorCallback">
            <summary>
            Method which is called when a separator should be added to a result (needed for JSON).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TraverseObjectSettings.ProcessEndCollectionCallback">
            <summary>
            Method which is called when a level in hierarchy is finished (end of the collection).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TraverseObjectSettings.OnItem">
            <summary>
            Handles start of the item within the collectin
            </summary>
            <param name="settings">Export settings object</param>
            <param name="isEnd">Determines wheter its start or end of the item</param>
        </member>
        <member name="T:CMS.SettingsProvider.TraverseObjectSettings.OnProcessStartCollection">
            <summary>
            Handles start of the collection export.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="name">Name of the collection</param>
            <param name="isArray">Indicates whether it's array collection (important for export to JSON)</param>
        </member>
        <member name="T:CMS.SettingsProvider.TraverseObjectSettings.OnProcessArraySeparator">
            <summary>
            Handles array separator of the collection export.
            </summary>
            <param name="settings">Export settings object</param>
        </member>
        <member name="T:CMS.SettingsProvider.TraverseObjectSettings.OnProcessEndCollection">
            <summary>
            Handles end of the collection export.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="name">Name of the collection</param>
            <param name="isArray">Indicates whether it's array collection (important for export to JSON)</param>
        </member>
        <member name="T:CMS.SettingsProvider.TraverseObjectSettings.OnProcessObject">
            <summary>
            Handles export to required format.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="obj">Object (TreeNode / Info object) to process</param>
            <param name="currentLevel">Current level withing the object tree structure</param>
        </member>
        <member name="T:CMS.SettingsProvider.TraverseObjectSettings.OnProcessID">
            <summary>
            Handles FK ID (can be used to fill translation helper for example).
            </summary>
            <param name="settings">Export settings object</param>
            <param name="obj">Object (TreeNode / Info object) to process</param>
            <param name="columnName">Column name of the dependency</param>
            <param name="objectType">Object type of the dependency</param>
            <param name="required">Determines whether the dependency is required (reflects required flag from TypeInfo).</param>
        </member>
        <member name="T:CMS.SettingsProvider.ExportObjectSettings">
            <summary>
            Class encapsulating parameters for GeneralizedInfo serialization (export).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.RequestStockKey">
            <summary>
            Returns key for request stock helper caching.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.Format">
            <summary>
            Format of the export data (xml/json/etc.).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.RootName">
            <summary>
            Name of the root element of the resulting export (root of xml).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.Binary">
            <summary>
            If true, binary data is exported as well.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.IncludeMetadata">
            <summary>
            If true, metadata are included in the result as well.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.IncludeObjectData">
            <summary>
            If false, object data are not exported (true by default).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.FormatResult">
            <summary>
            If true, result is formatted for better readability.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.Where">
            <summary>
            Gets or sets WHERE condition.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.OrderBy">
            <summary>
            Gets or sets ORDER BY clause.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.Columns">
            <summary>
            Gets or sets COLUMNS clause.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.TopN">
            <summary>
            Gets or sets TOP N clause.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.Offset">
            <summary>
            Gets or sets offset of the records.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.MaxRecords">
            <summary>
            Gets or sets maximum number of records.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocSiteName">
            <summary>
            Nodes site name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocAliasPath">
            <summary>
            Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocCultureCode">
            <summary>
            Nodes culture code.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocClassNames">
            <summary>
            List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product").
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocVersion">
            <summary>
            Version of the document to return.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocCombineWithDefaultCulture">
            <summary>
            Specifies if return the default culture document when specified culture not found.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocSelectOnlyPublished">
            <summary>
            Select only published nodes.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocCoupledData">
            <summary>
            If false, coupled data are not included in the result.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocDeleteAllCultures">
            <summary>
            If true, all cultures are deleted when document is being deleted.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocDeleteProduct">
            <summary>
            If true, the associated product is deleted with the deleted document.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.DocDestroyHistory">
            <summary>
            If true, the history is deleted when the document is being deleted.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ExportObjectSettings.ExportItemURI">
            <summary>
            Gets or sets URI of the exported item (needed for ODATA export).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ActionCancelledException">
            <summary>
            Exception thrown in case the action was cancelled
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ActionCancelledException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:CMS.SettingsProvider.ActionCancelledException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSHandler">
            <summary>
            General CMS handler
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSHandler`2">
            <summary>
            Generic handler class
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.CMSHandler`2.mSupportsCancel">
            <summary>
            If true, the handler supports cancelling of the event
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSHandler`2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSHandler`2.RaiseBefore(`1)">
            <summary>
            Raises the before event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSHandler`2.RaiseAfter(`1)">
            <summary>
            Raises the after event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSHandler`2.CheckContinue">
            <summary>
            Checks whether the action can continue and if not, fires an exception.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSHandler`2.FinishEvent">
            <summary>
            Disposes the object and raises the after event
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSHandler`2.StartEvent(`1)">
            <summary>
            Initiates the new handler context
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:CMS.SettingsProvider.CMSHandler`2.Parent">
            <summary>
            Parent handler
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSHandler`2.EventArguments">
            <summary>
            Handler arguments
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSHandler`2.Continue">
            <summary>
            Specifies whether the context of execution should continue. If set to false, no additional events will be fired.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSHandler`2.SupportsCancel">
            <summary>
            If true, the handler supports cancelling of the event
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSHandler`2.IsBound">
            <summary>
            Returns true if the handler has some events bound
            </summary>
        </member>
        <member name="E:CMS.SettingsProvider.CMSHandler`2.Before">
            <summary>
            Raised before the event occurs
            </summary>
        </member>
        <member name="E:CMS.SettingsProvider.CMSHandler`2.After">
            <summary>
            Raised after the event occurs
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.CMSSimpleHandler`2">
            <summary>
            Generic handler class
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSSimpleHandler`2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.CMSSimpleHandler`2.RaiseExecute(`1)">
            <summary>
            Raises the execute event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSSimpleHandler`2.Init(`0,`1)">
            <summary>
            Constructor, initializes the object and raises the before event
            </summary>
            <param name="parentHandler">Parent handler</param>
            <param name="e">Arguments for current handler</param>
        </member>
        <member name="M:CMS.SettingsProvider.CMSSimpleHandler`2.StartEvent(`1)">
            <summary>
            Initiates the new handler context
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:CMS.SettingsProvider.CMSSimpleHandler`2.Parent">
            <summary>
            Parent handler
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSSimpleHandler`2.EventArguments">
            <summary>
            Handler arguments
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSSimpleHandler`2.Continue">
            <summary>
            Specifies whether the context of execution should continue. If set to false, no additional events will be fired.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.CMSSimpleHandler`2.IsBound">
            <summary>
            Returns true if the handler has some events bound
            </summary>
        </member>
        <member name="E:CMS.SettingsProvider.CMSSimpleHandler`2.Execute">
            <summary>
            Raised before the event occurs
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectHandler">
            <summary>
            Object handler
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectHandler.#ctor(CMS.SettingsProvider.ObjectHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectHandler.StartEvent(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="obj">Handled object</param>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectEventArgs">
            <summary>
            Object event arguments
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectEventArgs.Object">
            <summary>
            Processed object
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectEventArgs.Content">
            <summary>
            Object content. Used when it makes sense: Search indexing
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectEvents">
            <summary>
            Object events
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectEvents.Update">
            <summary>
            Fires when object is updated
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectEvents.Insert">
            <summary>
            Fires when object is inserted
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectEvents.Delete">
            <summary>
            Fires when object is deleted
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectEvents.GetContent">
            <summary>
            Fires when search content is requested. You can modify content value which is saved to the search index.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SimpleObjectHandler">
            <summary>
            Simple object handler
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SimpleObjectHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SimpleObjectHandler.#ctor(CMS.SettingsProvider.SimpleObjectHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.SettingsProvider.SimpleObjectHandler.StartEvent(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="obj">Object</param>
        </member>
        <member name="M:CMS.SettingsProvider.SimpleObjectHandler.StartEvent(CMS.SettingsProvider.BaseInfo,System.String@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="obj">Object</param>
            <param name="content">Content that is processed by the handler</param>
        </member>
        <member name="T:CMS.SettingsProvider.SystemEventArgs">
            <summary>
            System event arguments
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SystemEventArgs.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemEventArgs.Exception">
            <summary>
            Raised exception
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemEventArgs.LogException">
            <summary>
            If true, the exception is allowed to be logged
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SystemEvents">
            <summary>
            System events
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemEvents.Exception">
            <summary>
            Fires when exception occurs
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SimpleSystemHandler">
            <summary>
            Simple System handler
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SimpleSystemHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SimpleSystemHandler.#ctor(CMS.SettingsProvider.SimpleSystemHandler)">
            <summary>
            Constructor
            </summary>
            <param name="parentHandler">Parent handler</param>
        </member>
        <member name="M:CMS.SettingsProvider.SimpleSystemHandler.StartEvent(System.Exception,System.Boolean@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="ex">Raised exception</param>
            <param name="logException">If true, the exception is logged to the event log</param>
        </member>
        <member name="T:CMS.SettingsProvider.ICMSStorage">
            <summary>
            Interface to access the CMS objects and collections as storages
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ICMSStorage.IsDisconnected">
            <summary>
            Returns true if the storage is disconnected
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ICMSObject">
            <summary>
            Interface for distinguishing TreeNode and BaseInfo data types.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IHierarchicalDataContainer">
            <summary>
            General data container interface.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IAdvancedDataContainer">
            <summary>
            Data container with advanced functionality.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IAdvancedDataContainer.RevertChanges">
            <summary>
            Reverts the object changes to the original values.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IAdvancedDataContainer.ResetChanges">
            <summary>
            Resets the object changes and keeps the new values as unchanged.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IAdvancedDataContainer.GetOriginalValue(System.String)">
            <summary>
            Returns the original value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.IAdvancedDataContainer.ItemChanged(System.String)">
            <summary>
            Returns true if the item on specified column name changed.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.IAdvancedDataContainer.MakeComplete(System.Boolean)">
            <summary>
            Makes the object data complete.
            </summary>
            <param name="loadFromDb">If true, the data to complete the object is loaded from database</param>
        </member>
        <member name="M:CMS.SettingsProvider.IAdvancedDataContainer.DataChanged(System.String)">
            <summary>
            Returns true if the object changed.
            </summary>
            <param name="excludedColumns">List of columns excluded from change (separated by ';')</param>
        </member>
        <member name="P:CMS.SettingsProvider.IAdvancedDataContainer.HasChanged">
            <summary>
            Returns true if the object changed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IAdvancedDataContainer.IsComplete">
            <summary>
            Returns true if the object is complete (has all columns).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DebugHelper">
            <summary>
            Debug helping methods.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugDisabled">
            <summary>
            Reflects setting from SiteManager. If true all debugs are disabled.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebug">
            <summary>
            Debug requests.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mLogEverythingToFile">
            <summary>
            If true, operations for everything are logged to the file (for debug purposes).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugEverythingEverywhere">
            <summary>
            Debug everything everywhere?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugEverything">
            <summary>
            Debug everything?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugEverythingLive">
            <summary>
            Debug everything live?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugAllForEverything">
            <summary>
            Debug everything on all pages?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugStackForEverything">
            <summary>
            Debug everything stack?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mEverythingLogLength">
            <summary>
            Everything log length (number of requests to log).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugResources">
            <summary>
            If false, all the resources (GetResource a GetCSS) requests are ignored in debugging.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugScheduler">
            <summary>
            If false, scheduler tasks are ignored in debugs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mDebugImportExport">
            <summary>
            If false, pages with Import/Export are excluded from debugs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.mExcludedMethods">
            <summary>
            The table of the method excluded from stack trace.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DebugHelper.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.DisableSchedulerDebug">
            <summary>
            Disables all debugs if DebugHelper.DebugScheduler is false, returns original settings which can be restored afterwards.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.RestoreDebugSettings(System.Boolean[])">
            <summary>
            Restores the debug settings from array of values.
            </summary>
            <param name="debugs">Array of flags</param>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.ResetDebugSettings">
            <summary>
            Sets all the debug settings to null and causes them to be reloaded.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.GetDebugBoolSetting(System.String,System.Boolean)">
            <summary>
            Returns logical or of setting in web.config and setting from SiteManager.
            </summary>
            <param name="keyName">Name of the setting</param>
            <param name="defaultValue">Default value of the web.config setting</param>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.GetDebugBoolSetting(System.String)">
            <summary>
            Returns logical or of setting in web.config and setting from SiteManager.
            </summary>
            <param name="keyName">Name of the setting</param>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.GetDebugLogLength(System.String)">
            <summary>
            Returns log lenght of given debug (looks first to the settings, if the value is not defined, takes value from web.config, if not defined even in web.config, returns 10 as default value).
            </summary>
            <param name="keyName">Name of the setting</param>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.GetDebugLogLength(System.String,System.Int32)">
            <summary>
            Returns log lenght of given debug (looks first to the settings, if the value is not defined, takes value from web.config, if not defined even in web.config, returns 10 as default value).
            </summary>
            <param name="keyName">Name of the setting</param>
            <param name="defaultValue">Web.config default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.SetContext(System.String)">
            <summary>
            Sets the debugging context.
            </summary>
            <param name="newContext">New context</param>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.ReleaseContext">
            <summary>
            Releases the last context.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.GetRequestUrl">
            <summary>
            Gets the request URL for the log purposes.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.GetRequestUrl(System.Boolean)">
            <summary>
            Gets the request URL for the log purposes.
            </summary>
            <param name="absolute">If true, absolute URL is returned</param>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.GetStack(System.Int32)">
            <summary>
            Gets the current stack.
            </summary>
            <param name="depth">Stack depth</param>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.RegisterLogs">
            <summary>
            Registers all request logs to the appropriate log lists.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DebugHelper.EnsureDiskPath(System.String,System.String)">
            <summary>
            Checks if all folders of the given path exist and if not, it creates them.
            </summary>
            <param name="path">Full disk path of the file including file name</param>
            <param name="startingPath">Starting path where folders can be checked and created</param>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugDisabled">
            <summary>
            Reflects setting from SiteManager. If true all debugs are disabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugResources">
            <summary>
            If false, all the resources (GetResource a GetCSS) requests are ignored in debugging.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugScheduler">
            <summary>
            If false, scheduler tasks are ignored in debugs.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugImportExport">
            <summary>
            If false, pages with Import/Export are excluded from debugs.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.LogEverythingToFile">
            <summary>
            Logs operations for everything?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugEverythingEverywhere">
            <summary>
            Debug Everything everywhere?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugEverything">
            <summary>
            Debug Everything?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugEverythingLive">
            <summary>
            Debug Everything live?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugAllForEverything">
            <summary>
            Debug all pages for everything.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.DebugStackForEverything">
            <summary>
            Track stack when debugging everything.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.EverythingLogLength">
            <summary>
            Maximum length of the Everything log in number of requests.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.Debug">
            <summary>
            Debug requests.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.CurrentRequestLogs">
            <summary>
            Returns the logs for current request.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.RequestContext">
            <summary>
            Request context.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.CurrentContext">
            <summary>
            Current context identificator.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DebugHelper.ExcludedMethods">
            <summary>
            The table of the method excluded from stack trace.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.InfoObjectCollection`1">
            <summary>
            Generic strongly typed info object collection
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.InfoObjectCollection`1.mInfoObject">
            <summary>
            Info object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection`1.#ctor(System.Data.DataSet)">
            <summary>
            Constructor. Creates a static collection populated from DataSet
            </summary>
            <param name="sourceData">Source DataSet</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection`1.Clone">
            <summary>
            Creates the clone of the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectCollection`1.GetEnumerator">
            <summary>
            Gets the strongly typed enumerator for the collection
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectCollection`1.InfoObject">
            <summary>
            Info object instance the provider is working with.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.InfoObjectRepository">
            <summary>
            Repository for info objects.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectRepository`2">
            <summary>
            Repository for info objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mCollections">
            <summary>
            Table of collections [name.ToLower() -> CollectionType]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mRepositories">
            <summary>
            Table of repositories.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mNiceNames">
            <summary>
            Translation of collection nice names to a normal names [niceName.ToLower() -> name]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mAll">
            <summary>
            Collection of all underlying objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mCollectionsList">
            <summary>
            List of all collections (sorted by the order in which the collections were added).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mCollectionSettings">
            <summary>
            Table of collection settings [name.ToLower() -> { index, key, objectType, where, orderBy, topN, columns } ]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mCollectionSettingsByIndex">
            <summary>
            Table of collection settings by index [index -> { index, key, objectType, where, orderBy, topN, columns } ]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mCount">
            <summary>
            Number of the inner collections.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mProperties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mLoadBinaryData">
            <summary>
            Indicates whether to load binary data into the collections of the repository.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mDisconnectedCount">
            <summary>
            Number of disconnected references for this collection 
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectRepository`2.mDynamicNames">
            <summary>
            List of dynamic names of the collections
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.LoadCollection(System.Object)">
            <summary>
            Loads the given collection.
            </summary>
            <param name="settings">Collection settings</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.NewCollection(System.String)">
            <summary>
            Creates new collection for the data.
            </summary>
            <param name="type">Type of the collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.NewCombinedCollection">
            <summary>
            Creates new combined collection for the data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.Disconnect">
            <summary>
            Disconnects the collections from the database
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.Reconnect">
            <summary>
            Reconnects the collection to the database
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.GetNicePropertyName(System.String)">
            <summary>
            Gets the property name for the original name of the collection
            </summary>
            <param name="name">Original name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.RegisterNiceName(System.String,System.String)">
            <summary>
            Registeres the nice name of the collection
            </summary>
            <param name="name">Name</param>
            <param name="niceName">Nice name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.GetEnumerator">
            <summary>
            Gets the enumerator for the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the general enumerator for the collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns value of property.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.GetProperty(System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.GetCollection(System.String)">
            <summary>
            Returns the collection of objects indexed by object type, e.g. "cms.user".
            </summary>
            <param name="name">Name of the inner collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.GetCollection(System.Int32)">
            <summary>
            Returns the collection of objects.
            </summary>
            <param name="index">Index of the collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectRepository`2.GetObjectName(System.Object)">
            <summary>
            Returns the name of the given object
            </summary>
            <param name="obj">Object for which to get the name</param>
        </member>
        <member name="E:CMS.SettingsProvider.ObjectRepository`2.OnLoadCollection">
            <summary>
            Fires when the collection with specified name is requested.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.GetDynamicNames">
            <summary>
            Function that provides the dynamic names of collections to the repository
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.DynamicNames">
            <summary>
            List of the dynamic names of the collections
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.ParentStorage">
            <summary>
            Parent storage
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.AllowNiceNames">
            <summary>
            If true, the repository allows nice names of the collections, e.g. for "CMS.User" uses "Users"
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.IsDisconnected">
            <summary>
            Returns true if this collection is disconnected from the database
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.LoadBinaryData">
            <summary>
            Gets or sets the value which indicates whether to load binary data into the collections.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.Properties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.Count">
            <summary>
            Returns the number of items.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.CollectionNames">
            <summary>
            Returns list of collection names in the repository.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.Item(System.String)">
            <summary>
            Returns the collection of objects indexed by object type, e.g. "cms.user".
            </summary>
            <param name="name">Name of the inner collection</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.Item(System.Int32)">
            <summary>
            Returns the collection of objects.
            </summary>
            <param name="index">Index of the collection</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.All">
            <summary>
            All items from all underlying collections.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.CMS#SettingsProvider#INameIndexable#Item(System.String)">
            <summary>
            Returns the object registered by the specific name.
            </summary>
            <param name="name">Object name (indexer)</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.SortNames">
            <summary>
            If true, the names in enumeration are sorted
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectRepository`2.ItemsHaveNames">
            <summary>
            Returns true if the items in the collection have names
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectRepository`2.LoadCollectionHandler">
            <summary>
            Delegate to define the handle to load the collection of this type.
            </summary>
            <param name="repository">Repository into which the collection loads</param>
            <param name="name">Collection name</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.#ctor(CMS.SettingsProvider.ICMSStorage)">
            <summary>
            Constructor.
            </summary>
            <param name="parentStorage">Parent storage object</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.#ctor(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="parentObject">Parent object</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.LoadCollection(System.Object)">
            <summary>
            Loads the given collection.
            </summary>
            <param name="settings">Collection settings</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.NewCollection(System.String)">
            <summary>
            Creates new collection for the data.
            </summary>
            <param name="type">Type of the collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.NewCombinedCollection">
            <summary>
            Creates new combined collection for the data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.ReplaceCollection(System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Registers the given collection of objects within the repository.
            </summary>
            <param name="name">Collection name</param>
            <param name="objectType">Object type</param>
            <param name="where">Where</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.AddCollection(System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Registers the given collection of objects within the repository.
            </summary>
            <param name="name">Collection name</param>
            <param name="objectType">Object type</param>
            <param name="where">Where</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.AddCollection(System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Registers the given collection of objects within the repository.
            </summary>
            <param name="name">Collection name</param>
            <param name="objectType">Object type</param>
            <param name="where">Where</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns</param>
            <param name="siteId">Site ID of the objects</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.AddCollection(System.String)">
            <summary>
            Registers the given collection of objects within the repository. Includes all the objects of given type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.SubmitChanges">
            <summary>
            Submits the changes to the database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectRepository.Add(CMS.SettingsProvider.BaseInfo[])">
            <summary>
            Adds new object to the collection.
            </summary>
            <param name="objects">Objects to add</param>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectRepository.ParentObject">
            <summary>
            Parent object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectRepository.IsDisconnected">
            <summary>
            Returns true if the repository is disconnected from the data source
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DefaultTransformationTypeEnum">
            <summary>
            Enumeration for file size units.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DefaultTransformationTypeEnum.Default">
            <summary>
            Default transformation type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DefaultTransformationTypeEnum.RSS">
            <summary>
            RSS transformation type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DefaultTransformationTypeEnum.Atom">
            <summary>
            Atom transformation type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DefaultTransformationTypeEnum.XML">
            <summary>
            XML transformation type.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SelectCondition">
            <summary>
            Provides the selection where condition for ABC IN (1, 2, 3, 4, 5, ...) for very large number of items.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SelectCondition.mInlineLimit">
            <summary>
            Limit on the number of items for the inline evaluation.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SelectCondition.mWhereCondition">
            <summary>
            Where condition.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SelectCondition.mGroupGUID">
            <summary>
            Group GUID for the temp table.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SelectCondition.useFunction">
            <summary>
            If true, the selection is done through function.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SelectCondition.mParameters">
            <summary>
            Query parameters.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.#ctor">
            <summary>
            Constructor, prepares empty condition object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.#ctor(CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Constructor, prepares empty condition object bound to specific query parameters.
            </summary>
            <param name="parameters">Query parameters</param>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.#ctor(System.String,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Constructor, prepares the condition over IDs.
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">ID values for the IN expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.Prepare(System.String,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Prepares the condition over IDs.
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">ID values for the IN expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.PrepareIDs(System.String,System.String[])">
            <summary>
            Prepares the condition over IDs.
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">ID values for the IN expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.#ctor(System.String,System.String[])">
            <summary>
            Constructor, prepares the condition over names (strings).
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">Name values for the IN expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.#ctor(System.String,System.String[],System.Boolean)">
            <summary>
            Constructor, prepares the condition over names (strings).
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">Name values for the IN expression</param>
            <param name="guids">If true, the values are guids</param>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.Prepare(System.String,System.String[],System.Boolean)">
            <summary>
            Prepares the condition over names (strings).
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">Name values for the IN expression</param>
            <param name="guids">If true, the values are guids</param>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.Dispose">
            <summary>
            Disposes the object and removes the selection from the database if it was allocated in the temp table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.PrepareWhereCondition(System.String,System.String,System.String,System.Collections.IEnumerable)">
            <summary>
            Prepares the where condition for the given list.
            </summary>
            <param name="usedColumn">Column to be used in the temp table</param>
            <param name="method">Method to use for preparation</param>
            <param name="columnName">Column name for the where condition</param>
            <param name="values">Values for the where condition</param>
        </member>
        <member name="M:CMS.SettingsProvider.SelectCondition.BuildList(System.Collections.IEnumerable)">
            <summary>
            Builds the list of values separated by colon.
            </summary>
            <param name="values">List of values</param>
        </member>
        <member name="P:CMS.SettingsProvider.SelectCondition.WhereCondition">
            <summary>
            Returns the resulting where condition.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SelectCondition.IsEmpty">
            <summary>
            Returns true if the selection is empty.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AbstractProviderDictionary">
            <summary>
            Abstract provider dictionary.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProviderDictionary.COMMAND_CLEAR">
            <summary>
            Clear command.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProviderDictionary.COMMAND_INVALIDATE">
            <summary>
            Invalidate command.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProviderDictionary.MAX_GENERATION">
            <summary>
            Maximum number of the object generations to use for the loading.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProviderDictionary.ALL_GENERATIONS">
            <summary>
            Special constant for all generations of the objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProviderDictionary.mDictionaries">
            <summary>
            Hashtable of all dictionaries.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProviderDictionary.mEnableHashTables">
            <summary>
            Enable hashtables.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProviderDictionary.Clear(System.Boolean)">
            <summary>
            Clears all the items.
            </summary>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractProviderDictionary.Dictionaries">
            <summary>
            Hashtable of all dictionaries.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractProviderDictionary.EnableHashTables">
            <summary>
            Enable hashtables.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractProviderDictionary.ReloadDictionary">
            <summary>
            If true, the dictionary should be reloaded.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.MultiKeyHashtable">
            <summary>
            Hashtable which can use multiple keys to access the same data. The keys are separated by the separator.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.MultiKeyHashtable.mSeparator">
            <summary>
            Separator.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.MultiKeyHashtable.mSeparators">
            <summary>
            Separator array.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.MultiKeyHashtable.mSubKeys">
            <summary>
            Table with main keys indexed by all the subkeys [subKey] -> [mainKey]
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.#ctor(System.Collections.IDictionary)">
            <summary>
            Constructor.
            </summary>
            <param name="d">Source data dictionary</param>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.GetMainKey(System.Object)">
            <summary>
            Gets the main object key for the given key.
            </summary>
            <param name="key">Key to find</param>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.Add(System.Object,System.Object)">
            <summary>
            Adds the value to the table.
            </summary>
            <param name="key">Key</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.Clear">
            <summary>
            Clears the table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.Contains(System.Object)">
            <summary>
            Returns true if the table contains specific key.
            </summary>
            <param name="key">Key to find</param>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.ContainsKey(System.Object)">
            <summary>
            Returns true if the table contains specific key.
            </summary>
            <param name="key">Key to find</param>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.Remove(System.Object)">
            <summary>
            Removes the item from the table.
            </summary>
            <param name="key">Key</param>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.Clone">
            <summary>
            Gets the cloned Hashtable.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.MultiKeyHashtable.GetFirstKey(System.String)">
            <summary>
            Gets the first key from the key list.
            </summary>
            <param name="key">Key</param>
        </member>
        <member name="P:CMS.SettingsProvider.MultiKeyHashtable.Item(System.Object)">
            <summary>
            Gets or sets the item.
            </summary>
            <param name="key">Key</param>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderStringValueDictionary">
            <summary>
            Provider string indexed dictionary. Represent the case-insensitive object storage optimized for reading.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1">
            <summary>
            Provider string indexed dictionary. Represent the case-insensitive object storage optimized for reading.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderDictionary`2">
            <summary>
            Provider dictionary.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IProviderDictionaryTemplate`1">
            <summary>
            Provider dictionary interface template.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IProviderDictionaryTemplate`1.Contains(System.Object,`0@)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
            <param name="value">Returns the object value if the object is present</param>
        </member>
        <member name="M:CMS.SettingsProvider.IProviderDictionaryTemplate`1.Contains(System.Object)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.IProviderDictionaryTemplate`1.Remove(System.Object)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.IProviderDictionaryTemplate`1.Add(System.Object,`0)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.IProviderDictionaryTemplate`1.ClearOlder(System.DateTime)">
            <summary>
            Removes the objects older that specified time.
            </summary>
            <param name="time">Minimum time to keep the object</param>
        </member>
        <member name="M:CMS.SettingsProvider.IProviderDictionaryTemplate`1.ClearExpired">
            <summary>
            Clears all the expired items.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IProviderDictionaryTemplate`1.Clear(System.Boolean)">
            <summary>
            Clears all the items.
            </summary>
            <param name="logTasks">If true, logs the web farm tasks</param>
        </member>
        <member name="M:CMS.SettingsProvider.IProviderDictionaryTemplate`1.Invalidate(System.Boolean)">
            <summary>
            Invalidates the dictionary content.
            </summary>
            <param name="logTasks">If true, logs the web farm tasks</param>
        </member>
        <member name="P:CMS.SettingsProvider.IProviderDictionaryTemplate`1.DataIsValid">
            <summary>
            Returns true if the dictionary content is valid.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IProviderDictionaryTemplate`1.LogWebFarmTasks">
            <summary>
            Gets / sets if the dictionary should log the web farm tasks
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IProviderDictionaryTemplate`1.ReloadDictionary">
            <summary>
            If true, the dictionary should be reloaded.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IProviderDictionaryTemplate`1.Count">
            <summary>
            Items count.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionary`2.mDictionary">
            <summary>
            Inner dictionary.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionary`2.mObjectLatency">
            <summary>
            Object latency of the hashtable.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionary`2.mName">
            <summary>
            Dictionary name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionary`2.mLogWebFarmTasks">
            <summary>
            Logs web farm tasks.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionary`2.mDataIsValid">
            <summary>
            True if the dictionary content is valid.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionary`2.mReloadDictionary">
            <summary>
            If true, the dictionary should be reloaded.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionary`2.mEnabled">
            <summary>
            If true, the provider functionality is enabled.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionary`2.mParentCollection">
            <summary>
            Parent dictionary collection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.#ctor(System.String,System.String,CMS.SettingsProvider.ProviderDictionaryCollection)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
            <param name="parentCollection">Parent dictionary collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Contains(`0,`1@)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
            <param name="value">Returns the object value if the object is present</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Contains(System.Object,`1@)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
            <param name="value">Returns the object value if the object is present</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Contains(`0)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Contains(System.Object)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.ContainsKey(`0)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Remove(`0)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Delete(`0)">
            <summary>
            Removes the specified object and logs the web farm task.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Remove(`0,System.Boolean)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Remove(System.Object)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Update(`0,`1)">
            <summary>
            Updates the specified object and logs the web farm task.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Add(`0,`1,System.Boolean)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Add(System.Object,`1)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.ClearOlder(System.DateTime)">
            <summary>
            Removes the objects older that specified time.
            </summary>
            <param name="time">Minimum time to keep the object</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.ClearExpired">
            <summary>
            Clears all the expired items.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Invalidate(System.Boolean)">
            <summary>
            Invalidates the dictionary content.
            </summary>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.Clear(System.Boolean)">
            <summary>
            Clears all the items.
            </summary>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.LogWebFarmTask(`0,CMS.SettingsProvider.WebFarmTaskTypeEnum)">
            <summary>
            Logs the web farm task for specified object key.
            </summary>
            <param name="key">Object key</param>
            <param name="taskType">Task type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.LogWebFarmTask(System.String,CMS.SettingsProvider.WebFarmTaskTypeEnum)">
            <summary>
            Logs the web farm task with specified task data.
            </summary>
            <param name="taskTextData">Task text data</param>
            <param name="taskType">Task type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.ReloadDictionaries(System.String,System.Boolean)">
            <summary>
            Reloads the dictionaries of specified object type.
            </summary>
            <param name="objectType">Object type</param>
            <param name="logTasks">If true, the web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.GetDictionaries(System.String)">
            <summary>
            Gets the Arraylist of dictionaries of specified object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.ProcessWebFarmTask(System.String,System.String,System.Byte[])">
            <summary>
            Processes the given web farm task.
            </summary>
            <param name="taskTarget">Task target</param>
            <param name="taskTextData">Task text data</param>
            <param name="taskBinaryData">Task binary data</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.GetDictionaryName(System.String,System.String)">
            <summary>
            Gets the provider name.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.NextGenerationAvailable">
            <summary>
            Returns true if the next generation of the objects is available.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionary`2.LoadNextGeneration">
            <summary>
            Loads the next generation of the objects.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.Dictionary">
            <summary>
            Inner dictionary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.Item(`0)">
            <summary>
            Dictionary indexer.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.ObjectLatency">
            <summary>
            Object latency in minutes.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.Count">
            <summary>
            Items count (all keys).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.IsEmpty">
            <summary>
            Returns true if the Dictionary is empty.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.DataIsValid">
            <summary>
            Returns true if the dictionary content is valid.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.Name">
            <summary>
            Dictionary name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.LogWebFarmTasks">
            <summary>
            Gets / sets if the dictionary should log web farm tasks
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.ReloadDictionary">
            <summary>
            If true, the dictionary should be reloaded.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.Enabled">
            <summary>
            If true, the dictionary is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionary`2.ParentCollection">
            <summary>
            Parent dictionary collection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.mRemoveStarting">
            <summary>
            Always removes items starting with given value if true, else removes only fully matching records.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.#ctor(System.String,System.String,CMS.SettingsProvider.ProviderDictionaryCollection)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
            <param name="parentCollection">Parent dictionary collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Contains(System.String,`0@)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
            <param name="value">Returns the object value if the object is present</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Contains(System.String)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Remove(System.Object)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Remove(System.String)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Remove(System.String,System.Boolean)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Add(System.String,`0)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Add(System.String,`0,System.Boolean)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Clear(System.Boolean)">
            <summary>
            Clears all the items.
            </summary>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.RemoveStarting">
            <summary>
            Always removes items starting with given value if true, else removes only fully matching records.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderStringDictionaryTemplate`1.Item(System.String)">
            <summary>
            Dictionary indexer, gets the value by key or its lowercase representation.
            </summary>
            <param name="key">Object key</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringValueDictionary.#ctor(System.String,System.String,CMS.SettingsProvider.ProviderDictionaryCollection)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
            <param name="parentCollection">Parent dictionary collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringValueDictionary.Contains(System.String,System.String@)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
            <param name="value">Returns the object value if the object is present</param>
        </member>
        <member name="T:CMS.SettingsProvider.IProviderDictionary">
            <summary>
            Provider dictionary interface.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.LoadHashtableEnum">
            <summary>
            Enumeration of the hashtable loading options.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.LoadHashtableEnum.None">
            <summary>
            Do not load any objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.LoadHashtableEnum.All">
            <summary>
            Load all objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.LoadHashtableEnum.Generations">
            <summary>
            Load objects by generations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.LoadHashtableEnum.FirstGeneration">
            <summary>
            Load by generations.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderDictionaryCollection">
            <summary>
            Collection of the provider dictionaries.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mLoadedGeneration">
            <summary>
            Currently loaded generation of the objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mParameter">
            <summary>
            Custom parameter passed to a LoadGeneration method.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mName">
            <summary>
            Dictionary name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mLoadingType">
            <summary>
            Default loading type of the items.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mCollections">
            <summary>
            Hashtable of all dictionary collections.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mById">
            <summary>
            ID dictionary.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mByCodeName">
            <summary>
            Code name dictionary.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mByFullName">
            <summary>
            Full name dictionary.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mByGuid">
            <summary>
            GUID dictionary.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mStringValues">
            <summary>
            Values dictionary.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ProviderDictionaryCollection.mLoadCollectionsAfterClear">
            <summary>
            Indicates if colletion should be filled with new data after clearing the colletion
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionaryCollection.#ctor(System.String,CMS.SettingsProvider.LoadHashtableEnum,CMS.SettingsProvider.ProviderDictionaryCollection.LoadGenerationEventHandler)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="loadingType">Loading type</param>
            <param name="loadCallback">Callback function to load the objects</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionaryCollection.#ctor(System.String,CMS.SettingsProvider.LoadHashtableEnum,CMS.SettingsProvider.ProviderDictionaryCollection.LoadGenerationParamsEventHandler,System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="loadingType">Loading type</param>
            <param name="loadCallback">Callback function with parameter to load the objects</param>
            <param name="parameter">Additional parameter passed to a load generation method</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionaryCollection.Clear(System.Boolean)">
            <summary>
            Clears all the items.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionaryCollection.LoadDefaultItems">
            <summary>
            Loads the default items of the dictionaries.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionaryCollection.NextGenerationAvailable">
            <summary>
            Returns true if the next generation of the objects is available.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionaryCollection.LoadAll">
            <summary>
            Ensures loading of all the items. Keeps the original loading type.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionaryCollection.LoadNextGeneration">
            <summary>
            Loads the next generation of the dictionaries.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderDictionaryCollection.LoadGeneration(System.Int32)">
            <summary>
            Loads specific generation of the objects.
            </summary>
            <param name="generation">Generation to load</param>
        </member>
        <member name="E:CMS.SettingsProvider.ProviderDictionaryCollection.OnLoadGeneration">
            <summary>
            Event which is called when loading of specific generation is requested.
            </summary>
        </member>
        <member name="E:CMS.SettingsProvider.ProviderDictionaryCollection.OnLoadGenerationParams">
            <summary>
            Event which is called when loading of specific generation is requested with additional custom parameter.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.LoadedGeneration">
            <summary>
            Returns the number of the loaded generation of the objects.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.Collections">
            <summary>
            Hashtable of all dictionary collections.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.Parameter">
            <summary>
            Custom parameter passed to a LoadGeneration method.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.Name">
            <summary>
            Dictionary name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.ById">
            <summary>
            ID dictionary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.ByCodeName">
            <summary>
            CodeName dictionary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.ByFullName">
            <summary>
            FullName dictionary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.ByGuid">
            <summary>
            Guid dictionary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.StringValues">
            <summary>
            String values dictionary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ProviderDictionaryCollection.LoadCollectionsAfterClear">
            <summary>
            Indicates if colletion should be filled with new data after clearing the colletion
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderDictionaryCollection.LoadGenerationEventHandler">
            <summary>
            Returns the list of objects of the given generation.
            </summary>
            <param name="generation">Generation to load</param>
            <returns>Returns true if the generation was not empty</returns>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderDictionaryCollection.LoadGenerationParamsEventHandler">
            <summary>
            Returns the list of objects of the given generation.
            </summary>
            <param name="generation">Generation to load</param>
            <param name="parameter">Additional parameter passed to a load generation method</param>
            <returns>Returns true if the generation was not empty</returns>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderGuidDictionary">
            <summary>
            Provider GUID indexed dictionary.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderGuidDictionary.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderGuidDictionary.#ctor(System.String,System.String,CMS.SettingsProvider.ProviderDictionaryCollection)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
            <param name="parentCollection">Parent dictionary collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderGuidDictionary.Remove(System.Object)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderGuidDictionary.Remove(System.Guid)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderGuidDictionary.Remove(System.Guid,System.Boolean)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderGuidDictionary.Add(System.Guid,CMS.SettingsProvider.BaseInfo,System.Boolean)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderGuidDictionary.Update(System.Guid,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Updates the specified object and logs the web farm task.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderGuidDictionary.Clear(System.Boolean)">
            <summary>
            Clears all the items.
            </summary>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderIntDictionary">
            <summary>
            Provider integer indexed dictionary.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.#ctor(System.String,System.String,CMS.SettingsProvider.ProviderDictionaryCollection)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
            <param name="parentCollection">Parent dictionary collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.Remove(System.Object)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.Remove(System.Int32,System.Boolean)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.Remove(System.Int32)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="key">Key to remove</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.Add(System.Int32,CMS.SettingsProvider.BaseInfo,System.Boolean)">
            <summary>
            Adds the specified object.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.Update(System.Int32,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Updates the specified object and logs the web farm task.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.Clear(System.Boolean)">
            <summary>
            Clears all the items.
            </summary>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderIntDictionary.Contains(System.Int32,CMS.SettingsProvider.BaseInfo@)">
            <summary>
            Returns true if the table contains specified record.
            </summary>
            <param name="key">Key to check</param>
            <param name="value">Returns the object value if the object is present</param>
        </member>
        <member name="T:CMS.SettingsProvider.ProviderStringDictionary">
            <summary>
            Provider string indexed dictionary. Represent the case-insensitive object storage optimized for reading.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionary.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionary.#ctor(System.String,System.String,CMS.SettingsProvider.ProviderDictionaryCollection)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="columnNames">Column names included in the object key (list of columns separated by semicolon)</param>
            <param name="parentCollection">Parent dictionary collection</param>
        </member>
        <member name="M:CMS.SettingsProvider.ProviderStringDictionary.Update(System.String,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Updates the specified object and logs the web farm task.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value</param>
        </member>
        <member name="T:CMS.SettingsProvider.InfoObjectException">
            <summary>
            Base class for the exceptions on the info objects.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.InfoObjectException.#ctor(CMS.SettingsProvider.GeneralizedInfo,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="obj">Object to which the exception relates</param>
            <param name="message">Message</param>
        </member>
        <member name="P:CMS.SettingsProvider.InfoObjectException.Object">
            <summary>
            Object to which the exception relates.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.FileSizeUnitsEnum">
            <summary>
            Enumeration for file size units.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FileSizeUnitsEnum.B">
            <summary>
            Bytes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FileSizeUnitsEnum.kB">
            <summary>
            Kilobytes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FileSizeUnitsEnum.MB">
            <summary>
            Megabytes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FileSizeUnitsEnum.GB">
            <summary>
            Gigabytes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FileSizeUnitsEnum.Automatic">
            <summary>
            Automatic units changing.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IUserInfo">
            <summary>
            Objects containing UserInfo properties.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.SitesRoles">
            <summary>
            Gets the HashTable of the user sites and roles.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.SiteCultures">
            <summary>
            Gets the user's allowed cultures.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.ResourceUIElements">
            <summary>
            Gets UI elements within each module across all sites the user can see.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserIsHidden">
            <summary>
            Indicates if the user is hidden.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.LastName">
            <summary>
            Last name of the user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.FullName">
            <summary>
            Full name of the user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.LastLogon">
            <summary>
            Last logon date and time of the user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.PreferredCultureCode">
            <summary>
            Preferred culture code.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.MiddleName">
            <summary>
            Middle name of the user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.PreferredUICultureCode">
            <summary>
            Preferred UI culture code.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserEnabled">
            <summary>
            Indicates whether the user is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserSiteManagerDisabled">
            <summary>
            Indicates whether site manager is explicitly disabled for the user (global aministrator).
            Note: Does not override classic site manager security (only global admins are allowed in site manager).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.FirstName">
            <summary>
            First name of the user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserCreated">
            <summary>
            Date and time when was the user created.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserPasswordFormat">
            <summary>
            Format of the user's password.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.Email">
            <summary>
            E-mail address of the user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.Enabled">
            <summary>
            Indicates if the user is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.PasswordFormat">
            <summary>
            Format of the user password.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserStartingAliasPath">
            <summary>
             Starting alias path of the user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserHasAllowedCultures">
            <summary>
            Indicates if the user has allowed more than one culture.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserGUID">
            <summary>
            User GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserLastModified">
            <summary>
            Date and time of the user last modification.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserVisibility">
            <summary>
            Contains XML with user's custom form field visibility settings.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserIsDomain">
            <summary>
            Determines whether user is domain user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserAuthenticationGUID">
            <summary>
            Temporary GUID for user identification for automatic sign-in in the CMS Desk.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserIsEditor">
            <summary>
            True if the user is editor. (Can access and work with the CMSDesk.).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserIsGlobalAdministrator">
            <summary>
            True if the user is the global administrator.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserIsExternal">
            <summary>
            Indicates if the user is external.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserPicture">
            <summary>
            User picture.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserAvatarID">
            <summary>
            User avatar ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserMessagingNotificationEmail">
            <summary>
            Messaging notification email.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserSignature">
            <summary>
            User signature.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserDescription">
            <summary>
            User description.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserNickName">
            <summary>
            User nick name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserURLReferrer">
            <summary>
            URL Referrer of user.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IUserInfo.UserCampaign">
            <summary>
            User campaign.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.FeatureEnum">
            <summary>
            Feature types.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Unknown">
            <summary>
            Unknown feature.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.DocumentLevelPermissions">
            <summary>
            Document level permissions.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.BizForms">
            <summary>
            BizForms.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.WorkflowVersioning">
            <summary>
            Workflow versioning.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Forums">
            <summary>
            Forums.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Newsletters">
            <summary>
            Newsletters.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Multilingual">
            <summary>
            Multilingual.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Staging">
            <summary>
            Staging.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Ecommerce">
            <summary>
            Ecommerce.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Webfarm">
            <summary>
            Webfarm.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Polls">
            <summary>
            Polls.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.WebAnalytics">
            <summary>
            Web analytics.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Blogs">
            <summary>
            Blogs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.EventManager">
            <summary>
            Event manager.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.GlobalAdmininistrators">
            <summary>
            Global administrators.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Editors">
            <summary>
            Editors.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.SiteMembers">
            <summary>
            Site members.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Documents">
            <summary>
            Documents.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Subscribers">
            <summary>
            Subscribers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.BannedIP">
            <summary>
            Banned IP.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Groups">
            <summary>
            Community.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.CustomTables">
            <summary>
            Custom Tables.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Friends">
            <summary>
            Friends.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Notifications">
            <summary>
            Notifications.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.MessageBoards">
            <summary>
            Message boards.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.UserContributions">
            <summary>
            User contributions.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.WindowsLiveID">
            <summary>
            Windows live id.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.OnlineUsers">
            <summary>
            On-line users.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Messaging">
            <summary>
            Messaging.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.ADImportTool">
            <summary>
            Active directory import tool.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.OpenID">
            <summary>
            OpenID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.WebDav">
            <summary>
            WebDav.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.DocumentLibrary">
            <summary>
            Document library.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.ProjectManagement">
            <summary>
            Project management.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Membership">
            <summary>
            Membership.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.FaceBookConnect">
            <summary>
            Facebook connect.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.LinkedIn">
            <summary>
            Linked in.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.IntegrationBus">
            <summary>
            System integration bus.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.ObjectVersioning">
            <summary>
            Object versioning.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.HealthMonitoring">
            <summary>
            Health monitoring.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.ContactManagement">
            <summary>
            Contact management
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.LeadScoring">
            <summary>
            Lead scoring
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.ABTesting">
            <summary>
            A/B Testing
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.MVTesting">
            <summary>
            MV testing
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.CampaignAndConversions">
            <summary>
            Campaign and conversions
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.ContentPersonalization">
            <summary>
            Content personalization
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.Segmentation">
            <summary>
            Segmentation
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.MultipleSMTPServers">
            <summary>
            Multiple SMTP servers
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.FeatureEnum.SchedulerWinService">
            <summary>
            Scheduler windows service
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.FeatureEnumFunctions">
            <summary>
            Functions for FeatureEnum.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.FeatureEnumFunctions.ConvertFeatureEnumToString(CMS.SettingsProvider.FeatureEnum)">
            <summary>
            Convert enumeration to string (just for subset of this enumeration).
            </summary>
            <param name="fEnum">Feature enumeration</param>
        </member>
        <member name="M:CMS.SettingsProvider.FeatureEnumFunctions.ConvertStringToFeatureEnum(System.String)">
            <summary>
            Convert string to FeatureEnum.
            </summary>
            <param name="feature">String representation of FeatureEnum</param>
        </member>
        <member name="T:CMS.SettingsProvider.VersionActionEnum">
            <summary>
            Version action enums.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.VersionActionEnum.Insert">
            <summary>
            Insert.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.VersionActionEnum.Edit">
            <summary>
            Edit.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.VersionActionEnum.Delete">
            <summary>
            Delete.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AbstractBaseProvider`1">
            <summary>
            Abstract class for providers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractBaseProvider`1.mProviderObject">
            <summary>
            Provider object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractBaseProvider`1.LoadProvider(`0)">
            <summary>
            Loads the provider based on the given parameters.
            </summary>
            <param name="defaultProvider">Default Provider</param>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractBaseProvider`1.ProviderObject">
            <summary>
            Provider object.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AbstractProvider">
            <summary>
            Abstract provider.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProvider.ALL_SITES">
            <summary>
            All sites constant for the data retrieval.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProvider.UNKNOWN_TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProvider.mTypeInfo">
            <summary>
            Object type information.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AbstractProvider.mProviders">
            <summary>
            Hashtable containing all the inheriting provider objects.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.#ctor(CMS.SettingsProvider.TypeInfo)">
            <summary>
            Default constructor.
            </summary>
            <param name="typeInfo">Object type information</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.Init(CMS.SettingsProvider.TypeInfo)">
            <summary>
            Initializes the provider variables.
            </summary>
            <param name="typeInfo">Object type information</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.DeleteData(System.String)">
            <summary>
            Deletes the data in the database based on the given where condition.
            </summary>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.UpdateData(System.String,CMS.SettingsProvider.QueryDataParameters,System.String)">
            <summary>
            Updates the data in the database based on the given where condition.
            </summary>
            <param name="updateExpression">Update expression, e.g. "Value = Value * 2"</param>
            <param name="parameters">Parameters</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.ReplaceData(System.String,System.String,System.String,System.String)">
            <summary>
            Replaces the data in the given columns.
            </summary>
            <param name="columns">List of columns to replace</param>
            <param name="pattern">Pattern to replace</param>
            <param name="replacement">Replacement text</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.RecalculateData(System.String,System.Single,System.Int32,System.String)">
            <summary>
            Recalculates the value in the given column using the coeficient.
            </summary>
            <param name="columnName">Column name</param>
            <param name="coefficient">Coefficient</param>
            <param name="roundTo">Number of significant digits the number should be rounded to</param>
            <param name="where">Where conditions (on which items apply the recalculation)</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetParentWhereCondition(System.Int32)">
            <summary>
            Gets the where condition to limit the objects to specific parent.
            </summary>
            <param name="objectParentId">Object parent ID to filter by</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetSiteWhereCondition(System.Int32,System.Boolean)">
            <summary>
            Gets the where condition to limit the objects to specific site.
            </summary>
            <param name="siteId">Site ID to filter by</param>
            <param name="combine">True - both site and global objects are included. False - only site objects are included</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetSiteWhereCondition(System.Int32)">
            <summary>
            Gets the where condition to limit the objects to specific site.
            </summary>
            <param name="siteId">Site ID to filter by</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.AddSiteWhereCondition(System.String,System.Int32,System.String,System.Boolean,System.String)">
            <summary>
            Creates site where condition from the specified parameters and adds it to the original where condition.
            </summary>
            <param name="where">Original where condition</param>
            <param name="siteId">Site ID. Set to 0 for global objects only</param>
            <param name="keyName">Name of the settings key which says whether global objects are used/allowed. Set to null if it doesn't depends on any settings key</param>
            <param name="combine">True - site objects are returned together with the global objects. False - only global objects are returned</param>
            <param name="op">Logic operator ("AND" or "OR") which says how the site condition is joined with the original condition</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.AddSiteWhereCondition(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Creates site where condition from the specified parameters and adds it to the original where condition.
            </summary>
            <param name="where">Original where condition</param>
            <param name="siteId">Site ID. Set to 0 for global objects only</param>
            <param name="keyName">Name of the settings key which says whether global objects are used/allowed. Set to null if it doesn't depends on any settings key</param>
            <param name="combine">True - site objects are returned together with the global objects. False - only global objects are returned</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetBindingWhereCondition(System.String,System.Object[])">
            <summary>
            Gets the where condition to limit the objects to specific binding dependencies. Use this method for 3 and more-keys bindings.
            </summary>
            <param name="bindingType">Binding object type name</param>
            <param name="dependencies">Pairs of binding dependencies to filter by (first variable in each pair - dependency object type, second variable in each pair - dependency value)</param>  
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetBindingWhereCondition(System.String,System.Int32)">
            <summary>
            Gets the where condition to limit the objects to specific binding dependency. Use this method only for 2-keys bindings.
            </summary>
            <param name="bindingType">Binding object type name</param>
            <param name="bindingDependencyId">Binding dependency ID to filter by</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetBindingDependencyObjectType(CMS.SettingsProvider.TypeInfo)">
            <summary>
            Returns first object type from binding dependencies, parent, and site which holds reference to the different object type than the object type of the provider. 
            Use only for 2-keys bindings.
            </summary>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If false, the binary data shouldn't be retrieved</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If false, the binary data shouldn't be retrieved</param>
            <param name="siteId">Site ID of the site for which the object should be retrieved</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@,System.Int32)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If false, the binary data shouldn't be retrieved</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param> 
            <param name="siteId">Site ID of the site for which the object should be retrieved</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetEmptyDataSet">
            <summary>
            Gets the empty data set to be filled by the data
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetDataByStringColumn(System.String,System.String)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="columnName">String column name</param>
            <param name="value">Value of the record ID to look for</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetDataByStringColumn(System.String,System.String,System.String)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="columns">List of columns to be retrieved</param>
            <param name="columnName">String column name</param>
            <param name="value">Value of the column to look for</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetDataByIntColumn(System.String,System.Int32)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="columnName">Integer column name</param>
            <param name="value">Value of the record ID to look for</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetDataByIntColumn(System.String,System.String,System.Int32)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="columns">List of columns to be retrieved</param>
            <param name="columnName">Integer column name</param>
            <param name="value">Value of the record ID to look for</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetDataByGuidColumn(System.String,System.Guid)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="columnName">GUID column name</param>
            <param name="value">Value of the record ID to look for</param>        
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.CheckObjectDependencies(System.Int32)">
            <summary>
            Checks the object dependencies. Returns true if there are depending objects.
            </summary>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.RemoveObjectDependencies(System.Int32)">
            <summary>
            Removes object dependencies.
            </summary>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.ClearHashtables(System.Boolean)">
            <summary>
            Clears the object's hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.ClearAllHashtables(System.Boolean)">
            <summary>
            Clears up hashtables of every single provider object present in the list.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.ClearHashtables(System.String,System.Boolean)">
            <summary>
            Clears hashtables of the object passed.
            </summary>
            <param name="objectType">Type of the object</param>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.LoadProvider``1(``0)">
            <summary>
            Loads the provider based on the given parameters.
            </summary>
            <param name="defaultProvider">Default Provider</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractProvider.GetProvider(System.String)">
            <summary>
            Gets the loaded provider by its object type.
            </summary>
            <param name="objectType">Provider object type</param>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractProvider.TypeInfo">
            <summary>
            Object type information.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AbstractURLProvider`1">
            <summary>
            Abstract class for URL providers.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.BaseInfo">
            <summary>
            Base info class (only carying the type information).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IRelatedData">
            <summary>
            Objects containing the related data reference.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IRelatedData.RelatedData">
            <summary>
            Custom data connected to the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.EMPTY_INFO">
            <summary>
            Empty info object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.op_Implicit(CMS.SettingsProvider.GeneralizedInfo)~CMS.SettingsProvider.BaseInfo">
            <summary>
            Implicit operator for conversion from GeneralizedInfo class to BaseInfo
            </summary>
            <param name="info">Info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.op_Implicit(CMS.SettingsProvider.BaseInfo)~CMS.SettingsProvider.GeneralizedInfo">
            <summary>
            Implicit operator for conversion from BaseInfo class to GeneralizedInfo
            </summary>
            <param name="info">Info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetGeneralizedInfo">
            <summary>
            Gets the generalized info for this object
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.UNKNOWN_TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mTypeInfo">
            <summary>
            Object type information.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mUpdateTimeStamp">
            <summary>
            If true, timestamp of the object is updated when saved.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mLogSynchronization">
            <summary>
            If true, synchronization tasks are logged on the object update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mLogExport">
            <summary>
            If true, export tasks are logged on the object update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mSupportsVersioning">
            <summary>
            Indicates if the object versioning is supported.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mLogEvents">
            <summary>
            If true, events are logged on the object update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mLogIntegration">
            <summary>
            Whether to log integration tasks.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mLogWebFarmTasks">
            <summary>
            If true, web farm tasks are logged on the object update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mTouchCacheDependencies">
            <summary>
            If true, cache keys are touched on the object update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mInvalidateObject">
            <summary>
            If true, object is invalidated on the object update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mCreateSearchTask">
            <summary>
            If true, seqarch task is created for the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mIsCheckedOut">
            <summary>
            Indicates if the object is checked out.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mValidateCodeName">
            <summary>
            If true, the code name is validated upon saving.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mCheckUnique">
            <summary>
            If true, the code name is checked for uniqueness upon saving.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mAllowRestore">
            <summary>
            Indicates if the object supports deleting to recycle bin.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mObjectLastAccessed">
            <summary>
            Object last access time (uses internally by providers).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mObjectSiteName">
            <summary>
            Object site name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mObjectParent">
            <summary>
            Object parent.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mObjectCategory">
            <summary>
            Object category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mCategoryIDColumn">
            <summary>
            Category ID column name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mObjectSiteID">
            <summary>
            Object site ID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mCacheParentData">
            <summary>
            If true, the parent data is cached.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mRelatedDataLoaded">
            <summary>
            Related data is loaded.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mRelatedData">
            <summary>
            Custom data connected to the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mLocalSettings">
            <summary>
            Local object settings.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mChildren">
            <summary>
            Child objects of the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mChildDependencies">
            <summary>
            Child dependency objects of the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mBindings">
            <summary>
            Binding objects of the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mOtherBindings">
            <summary>
            Other binding objects of the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mMetaFiles">
            <summary>
            Meta files of the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mRelatedObjects">
            <summary>
            Related objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mProperties">
            <summary>
            Hashtable of properties of all object types, pairs [object type -> properties]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mStatus">
            <summary>
            Status of the object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mGeneralized">
            <summary>
            Generalized interface of this object
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseInfo.mDisconnectedCount">
            <summary>
            Number of disconnected references for this collection 
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.#ctor(CMS.SettingsProvider.TypeInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="typeInfo">Object type information</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Object serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.SubmitChanges(System.Boolean)">
            <summary>
            Submits the changes in the object to the database.
            </summary>
            <param name="withChildren">If true, also submits the changes in the children of the object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.Update">
            <summary>
            Updates the object using appropriate provider
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.Delete">
            <summary>
            Deletes the object using appropriate provider
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.Destroy">
            <summary>
            Destroys the object including its version history using appropriate provider
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.Insert">
            <summary>
            Inserts the object using appropriate provider
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.CheckUniqueValues(System.String[])">
            <summary>
            Checks if a record with the same column values already exists in the database. Returns true if the set of values is unique.
            </summary>
            <param name="columns">Columns to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.CheckUniqueCodeName">
            <summary>
            Checks if the object has unique code name. Returns true if the object has unique code name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetDoubleValue(System.String,System.Double)">
            <summary>
            Gets the double value from the object.
            </summary>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetIntegerValue(System.String,System.Int32)">
            <summary>
            Gets the integer value from the object.
            </summary>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetDateTimeValue(System.String,System.DateTime)">
            <summary>
            Gets the DateTime value from the object.
            </summary>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetGuidValue(System.String,System.Guid)">
            <summary>
            Gets the guid value from the object.
            </summary>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetBooleanValue(System.String,System.Boolean)">
            <summary>
            Gets the boolean value from the object.
            </summary>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetStringValue(System.String,System.String)">
            <summary>
            Gets the string value from the object.
            </summary>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.MakeComplete(System.Boolean)">
            <summary>
            Makes the object data complete.
            </summary>
            <param name="loadFromDb">If true, the data to complete the object is loaded from database</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.ItemChanged(System.String)">
            <summary>
            Returns true if the item on specified column name changed.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.DataChanged(System.String)">
            <summary>
            Returns true if the object changed.
            </summary>
            <param name="excludedColumns">List of columns excluded from change (separated by ';')</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.Clear">
            <summary>
            Clears hashtable with cached properties of all object types.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.LogObjectChange(CMS.SettingsProvider.TaskTypeEnum)">
            <summary>
            Logs object change for specified task type.
            </summary>
            <param name="taskType">Type of the task</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.EnsureBinaryData">
            <summary>
            Makes sure that the binary data is loaded into binary column of the object when StoreToFileSystem is true.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.EnsureBinaryData(System.Boolean)">
            <summary>
            Makes sure that the binary data is loaded into binary column of the object.
            </summary>
            <param name="forceLoadFromDB">If true, the data are loaded even from DB</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.Disconnect">
            <summary>
            Disconnects the collection from the database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.Reconnect">
            <summary>
            Reconnects the collection to the database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetObjectKey">
            <summary>
            Gets the unique string key for the object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetLockObject">
            <summary>
            Gets the global lock object for all the instances of the object (locked on "objectType_objectId").
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.TouchParent(System.Boolean)">
            <summary>
            Updates the parent object by saving it (to update the timestamp).
            </summary>
            <param name="logSynchronization">Indicates if synchronization task should be generated</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.TouchParent">
            <summary>
            Updates the parent object by saving it (to update the timestamp).
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetParent">
            <summary>
            Returns the parent object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.InitCategoryInfo">
            <summary>
            Initialize the category info.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetObject(System.String)">
            <summary>
            Gets the object by specified where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetObject(System.Int32)">
            <summary>
            Gets the object by its ID.
            </summary>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetCount(System.String,System.Int32)">
            <summary>
            Gets count of the objects filtered by given where condition.
            </summary>
            <param name="where">Where condition</param>
            <param name="topN">Top N records</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetModifiedFrom(System.DateTime,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Gets the DataSet of all the objects modified from specified date.
            </summary>
            <param name="from">From time</param>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Top N records</param>
            <param name="columns">Columns to get</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetModifiedFrom(System.DateTime,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Gets the DataSet of all the objects modified from specified date.
            </summary>
            <param name="from">From time</param>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Top N records</param>
            <param name="columns">Columns to get</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
            <param name="totalRecords">Returns total number of available records</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>        
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.CloneObject">
            <summary>
            Creates the clone of the object
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetChildObject(System.String)">
            <summary>
            Gets the child object info.
            </summary>
            <param name="objectType">Object type of the child object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetChildWhereCondition(System.String,System.String)">
            <summary>
            Gets the child object where condition.
            </summary>
            <param name="where">Original where condition</param>
            <param name="objectType">Object type of the child object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.Invalidate">
            <summary>
            Invalidates the object in the object table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.IsObjectInvalid(System.DateTime)">
            <summary>
            Returns true if the object is invalid.
            </summary>
            <param name="lastValid">Time when the object was last known as valid</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetObjectTypeResourceKey">
            <summary>
            Gets the resource key for the name of the object type.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetDependencyCacheKeys(System.String,System.String)">
            <summary>
            Gets the array of dependency cache keys for current object.
            </summary>
            <param name="key">Cache key</param>
            <param name="context">Cache context</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetPhysicalFiles(CMS.SettingsProvider.OperationTypeEnum,System.Boolean)">
            <summary>
            Gets DataSet with physical files.
            </summary>
            <param name="operationType">Operation type</param>
            <param name="binaryData">If true, gets the binary data to the DataSet</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.UpdatePhysicalFiles(System.Data.DataSet)">
            <summary>
            Saves physical files.
            </summary>
            <param name="dsFiles">DataSet with files data</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.StoreSettings">
            <summary>
            Stores local settings for object instance.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.RestoreSettings">
            <summary>
            Restores local settings for object instance.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.SetValue(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the object value to the nullable column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
            <param name="condition">Condition for the valid value, if false, NULL is saved</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.SetValue(System.String,System.Object,System.Object)">
            <summary>
            Sets the object value to the nullable column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
            <param name="nullValue">Null value, if matched, NULL is saved</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the object value.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetValue(System.String)">
            <summary>
            Gets the object value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetCustomProperties">
            <summary>
            Gets list of custom properties.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetRegisteredProperties">
            <summary>
            Gets list of registered properties.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns value of property.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GetProperty(System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.HasAutomaticProperty(System.String)">
            <summary>
            Returns true if the given column provides an automatic property to access it's binding.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">Object to compare</param>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.IsGlobal">
            <summary>
            Returns true if the object is global object. False if the object belongs to specific site only.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.Generalized">
            <summary>
            Generalized interface of this object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.TimeStampColumn">
            <summary>
            Time stamp column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GUIDColumn">
            <summary>
            GUID column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.IDColumn">
            <summary>
            ID column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.CodeNameColumn">
            <summary>
            Code name column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.DisplayNameColumn">
            <summary>
            Display name column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.SiteIDColumn">
            <summary>
            Site ID column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ParentIDColumn">
            <summary>
            Parent ID column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ParentObjectType">
            <summary>
            Parent object type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ChildObjectTypes">
            <summary>
            Child object types.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ChildDependencyColumns">
            <summary>
            Name of the columns (separated by semicolon) of object dependencies which should be included into the parent data (for example class data for BizForms).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.BindingObjectTypes">
            <summary>
            Binding object types.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.OtherBindingObjectTypes">
            <summary>
            Other binding types (ObjectType constants separated by semicolon) - binding types where this object participate but is not parent object of those binding types.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectDependencies">
            <summary>
            Object dependencies, array with values [column name, object type].
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.IsDisconnected">
            <summary>
            Returns true if this collection is disconnected from the database
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectStatus">
            <summary>
            Returns the current status of the object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.CacheParentData">
            <summary>
            If true, the parent object data is cached within object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectID">
            <summary>
            Object ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectLastModified">
            <summary>
            Last modified time.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectSiteID">
            <summary>
            Object site ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectParentID">
            <summary>
            Object parent ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectGroupID">
            <summary>
            Object community group ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectDisplayName">
            <summary>
            Object display name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectCodeName">
            <summary>
            Object code name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectParent">
            <summary>
            Object parent.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectCategory">
            <summary>
            Object category.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.CategoryIDColumn">
            <summary>
            Category ID column name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectSite">
            <summary>
            Returns the object site.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectSiteName">
            <summary>
            Object site name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ObjectLastAccessed">
            <summary>
            Object last access time (uses internally by providers).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.UpdateTimeStamp">
            <summary>
            If true, timestamp of the object is updated when saved.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.LogExport">
            <summary>
            If true, export tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.SupportsVersioning">
            <summary>
            Indicates if the object versioning is supported.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.LogEvents">
            <summary>
            If true, Events tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.LogIntegration">
            <summary>
            If true, integration tasks are being logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.LogWebFarmTasks">
            <summary>
            If true, web farm tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.InvalidateObject">
            <summary>
            If true, object is invalidated when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.CreateSearchTask">
            <summary>
            If true, search task is created for the object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.IsCheckedOut">
            <summary>
            Indicates if the object is checked out.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.IsClone">
            <summary>
            Indicates if the object is clone.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ValidateCodeName">
            <summary>
            If true, the code name is validated upon saving.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.CheckUnique">
            <summary>
            If true, the code name is checked for uniqueness upon saving.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.AllowRestore">
            <summary>
            Indicates if the object supports deleting to recycle bin.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.Properties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.TypeInfo">
            <summary>
            Object type information.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.Parent">
            <summary>
            Object parent
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.Site">
            <summary>
            Object site
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.SiteBindings">
            <summary>
            Collection of the object site bindings.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.Bindings">
            <summary>
            Collection of the binding objects for the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.OtherBindings">
            <summary>
            Collection of the binding objects for the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.Children">
            <summary>
            Collection of the child objects for the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ChildDependencies">
            <summary>
            Collection of the child dependencies for the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.MetaFiles">
            <summary>
            Collection of the metafiles belonging to the object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.RelatedObjects">
            <summary>
            Related objects.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.RelatedData">
            <summary>
            Custom data connected to the object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.Name">
            <summary>
            Returns the code name of the object
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper">
            <summary>
            Info object wrapper for generalized access
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.#ctor(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Constructor
            </summary>
            <param name="mainObj">Main object to wrap</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetObject(System.String)">
            <summary>
            Gets the object by specified where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetObject(System.Int32)">
            <summary>
            Gets the object by its ID.
            </summary>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetChildObject(System.String)">
            <summary>
            Gets the child object info.
            </summary>
            <param name="objectType">Object type of the child object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetChildWhereCondition(System.String,System.String)">
            <summary>
            Gets the child object where condition.
            </summary>
            <param name="where">Original where condition</param>
            <param name="objectType">Object type of the child object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetModifiedFrom(System.DateTime,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Gets the DataSet of all the objects modified from specified date.
            </summary>
            <param name="from">From time</param>
            <param name="parameters">Query parameters</param>
            <param name="columns">Columns to get</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Top N records</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetModifiedFrom(System.DateTime,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Gets the DataSet of all the objects modified from specified date.
            </summary>
            <param name="from">From time</param>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Top N records</param>
            <param name="columns">Columns to get</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns the total number of available records</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>        
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetCount(System.String,System.Int32)">
            <summary>
            Gets count of the objects filtered by given where condition.
            </summary>
            <param name="where">Where condition</param>
            <param name="topN">Top N records</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.SubmitChanges(System.Boolean)">
            <summary>
            Submits the changes in the object to the database.
            </summary>
            <param name="withChildren">If true, also submits the changes in the children of the object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetParent">
            <summary>
            Returns the parent object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.TouchParent">
            <summary>
            Updates the parent object by saving it (to update the timestamp).
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetObjectTypeResourceKey">
            <summary>
            Gets the resource key for the name of the object type.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetDependencyCacheKeys(System.String,System.String)">
            <summary>
            Gets the array of dependency cache keys for current object.
            </summary>
            <param name="key">Cache key</param>
            <param name="context">Cache context</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetPhysicalFiles(CMS.SettingsProvider.OperationTypeEnum,System.Boolean)">
            <summary>
            Gets DataSet with physical files for current object.
            </summary>
            <param name="operationType">Operation type</param>
            <param name="binaryData">Get the binary data</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.UpdatePhysicalFiles(System.Data.DataSet)">
            <summary>
            Updates physical files in given DataSet for current object.
            </summary>
            <param name="dsFiles">DataSet with files data</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.StoreSettings">
            <summary>
            Stores local settings for object instance.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.RestoreSettings">
            <summary>
            Restores local settings for object instance.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetObjectKey">
            <summary>
            Gets the unique string key for the object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetLockObject">
            <summary>
            Gets the global lock object for all the instances of the object (locked on "objectType_objectId").
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.MakeComplete(System.Boolean)">
            <summary>
            Makes the object data complete.
            </summary>
            <param name="loadFromDb">If true, the data to complete the object is loaded from database</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ItemChanged(System.String)">
            <summary>
            Returns true if the item on specified column name changed.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.DataChanged">
            <summary>
            Returns true if the object changed.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.DataChanged(System.String)">
            <summary>
            Returns true if the object changed.
            </summary>
            <param name="excludedColumns">List of columns excluded from change (separated by ';')</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.Disconnect">
            <summary>
            Disconnects the object from database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.Reconnect">
            <summary>
            Reconnects the object to database.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.EnsureBinaryData">
            <summary>
            Makes sure that the binary data is loaded into binary column of the object when StoreToFileSystem is true.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.EnsureBinaryData(System.Boolean)">
            <summary>
            Makes sure that the binary data is loaded into binary column of the object.
            </summary>
            <param name="forceLoadFromDB">If true, the data are loaded even from DB</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.CheckUniqueValues(System.String[])">
            <summary>
            Checks if a record with the same column values already exists in the database. Returns true if the set of values is unique.
            </summary>
            <param name="columns">Columns to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.CheckUniqueCodeName">
            <summary>
            Checks if the object has unique code name. Returns true if the object has unique code name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.LogObjectChange(CMS.SettingsProvider.TaskTypeEnum)">
            <summary>
            Logs object change for specified task type.
            </summary>
            <param name="taskType">Type of the task</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.Invalidate">
            <summary>
            Invalidates the object in the object table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.IsObjectInvalid(System.DateTime)">
            <summary>
            Returns true if the object is invalid.
            </summary>
            <param name="lastValid">Time when the object was last known as valid</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.Clone">
            <summary>
            Returns the clone 
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GetProperty(System.String)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.IsDisconnected">
            <summary>
            Returns true if the object is disconnected from the data source
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.TypeInfo">
            <summary>
            Type info.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.MainObject">
            <summary>
            Main object for this general access object
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.IDColumn">
            <summary>
            ID column name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.CodeNameColumn">
            <summary>
            Code name column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.DisplayNameColumn">
            <summary>
            Code name column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.TimeStampColumn">
            <summary>
            Time stamp column name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.GUIDColumn">
            <summary>
            GUID column name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.SiteIDColumn">
            <summary>
            Site ID column name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ParentIDColumn">
            <summary>
            Parent ID column name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.CategoryIDColumn">
            <summary>
            Category ID column name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectID">
            <summary>
            Object ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectLastModified">
            <summary>
            Object last modified time.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectGUID">
            <summary>
            Object GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectSiteID">
            <summary>
            Object site ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectParentID">
            <summary>
            Object parent ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectGroupID">
            <summary>
            Object group ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectCodeName">
            <summary>
            Object code name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectDisplayName">
            <summary>
            Object name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectSiteName">
            <summary>
            Object site name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectLastAccessed">
            <summary>
            Object last access time (uses internally by providers).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ParentObjectType">
            <summary>
            Parent object type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ChildObjectTypes">
            <summary>
            Child object types.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ChildDependencyColumns">
            <summary>
            Child dependency columns.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.BindingObjectTypes">
            <summary>
            Binding object types.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.OtherBindingObjectTypes">
            <summary>
            Other binding types (ObjectType constants separated by semicolon) - binding types where this object participate but is not parent object of those binding types.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectDependencies">
            <summary>
            Object dependencies, array with values [column name (string), object type (string), required (bool)].
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.Children">
            <summary>
            The collection of the child objects for the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ChildDependencies">
            <summary>
            Collection of the child dependencies for the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.Bindings">
            <summary>
            The collection of the binding objects for the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.OtherBindings">
            <summary>
            The collection of the other binding objects for the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.MetaFiles">
            <summary>
            The collection of the metafiles of the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.RelatedObjects">
            <summary>
            The collection of the relationships of the given object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.UpdateTimeStamp">
            <summary>
            If true, time stamp is updated on object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.LogExport">
            <summary>
            If true, export tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.SupportsVersioning">
            <summary>
            Indicates if the object versioning is supported.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.LogEvents">
            <summary>
            If true, events are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.LogIntegration">
            <summary>
            If true, integration tasks are being logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.LogWebFarmTasks">
            <summary>
            If true, web farm tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.InvalidateObject">
            <summary>
            If true, object is invalidated when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.CreateSearchTask">
            <summary>
            If true, search task is created when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.IsCheckedOut">
            <summary>
            Indicates if the object is checked out.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.IsClone">
            <summary>
            Indicates if the object is clone.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ValidateCodeName">
            <summary>
            If true, the code name is validated upon saving.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.CheckUnique">
            <summary>
            If true, the code name is checked for uniqueness upon saving.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.AllowRestore">
            <summary>
            Indicates if the object supports deleting to recycle bin.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectCategory">
            <summary>
            Object category.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ObjectParent">
            <summary>
            Object parent
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.Properties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.BaseInfo.GeneralizedInfoWrapper.RelatedData">
            <summary>
            Custom data connected to the object.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.BaseInfo.EmptyInfo">
            <summary>
            Empty info object class.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.NotImplementedInfo">
            <summary>
            Info object with no methods implemented. Serves as a base info for partially implemented info objects.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.NotImplementedInfo.#ctor">
            <summary>
            Empty constructor
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.NotImplementedInfo.#ctor(CMS.SettingsProvider.TypeInfo)">
            <summary>
            Constructor
            </summary>
            <param name="typeInfo">Type info to use for initialization</param>
        </member>
        <member name="M:CMS.SettingsProvider.NotImplementedInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.NotImplementedInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.NotImplementedInfo.CloneObject">
            <summary>
            Creates the clone of the object
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.NotImplementedInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the object value.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.NotImplementedInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.NotImplementedInfo.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.NotImplementedInfo.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DataContainerCollection">
            <summary>
            Collection of the IDataContainers behaving like IDataContainer.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataContainerCollection.mColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataContainerCollection.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataContainerCollection.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataContainerCollection.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.SettingsProvider.DataContainerCollection.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataContainerCollection.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataContainerCollection.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.PropertySettings`1">
            <summary>
            Settings object for general properties registering in BaseGenericInfo.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PropertySettings`1.mParameter">
            <summary>
            Parameter passed to the parametrized.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PropertySettings`1.mParametrizedFunction">
            <summary>
            Lambda expression with one parameter.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PropertySettings`1.mPropertyFunction">
            <summary>
            Lambda expression without parameters.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.PropertySettings`1.#ctor(System.Func{`0,System.Object})">
            <summary>
            Creates new instance of property
            </summary>
            <param name="lambdaExpr">Lamda expression of the property</param>
        </member>
        <member name="M:CMS.SettingsProvider.PropertySettings`1.#ctor(System.Func{`0,System.Object,System.Object},System.Object)">
            <summary>
            Creates new instance of parametrized property.
            </summary>
            <param name="lambdaExpr">Lamda expression of the property</param>
            <param name="parameter">Parameter passed to the lamda expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.PropertySettings`1.Evaluate(`0)">
            <summary>
            Evaluates the property.
            </summary>
            <param name="info">Info object to evaluate the lambda expression on</param>
        </member>
        <member name="T:CMS.GlobalHelper.ExtendedXmlData">
            <summary>
            XML data container.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.XmlData">
            <summary>
            XML data container.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.XmlData.mValue">
            <summary>
            Custom data value.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.XmlData.mData">
            <summary>
            Collection of the data contents.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.XmlData.mXmlRootName">
            <summary>
            Default xml root element name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.ConvertToHashtable">
            <summary>
            Converts XML data to Hashtable.
            </summary>        
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.LoadData(System.String)">
            <summary>
            Loads the XML to the content table.
            </summary>
            <param name="data">Content XML to load</param>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.LoadData(System.String,System.Xml.XmlDocument@)">
            <summary>
            Loads the XML to the content table.
            </summary>
            <param name="data">Content XML to load</param>
            <param name="xml">Xml document on output</param>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.GetData">
            <summary>
            Returns the xml code of the data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.GetData(System.Xml.XmlDocument@)">
            <summary>
            Returns the xml code of the data and constructed xml document.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.Clear">
            <summary>
            Clears the custom data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.Clone">
            <summary>
            Returns the cloned object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.ToString">
            <summary>
            Returns xml as a string.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.#ctor">
            <summary>
            Constructor - creates empty XmlData object.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.XmlData.#ctor(System.String)">
            <summary>
            Constructor with root element name specification.
            </summary>
            <param name="rootName">Root element name</param>
        </member>
        <member name="P:CMS.SettingsProvider.XmlData.XmlRootName">
            <summary>
            Gets name of xml root element.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.XmlData.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.XmlData.Value">
            <summary>
            Value of the custom data, if set, overrides the data collection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.XmlData.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="key">Column name</param>
        </member>
        <member name="F:CMS.GlobalHelper.ExtendedXmlData.mStructuredData">
            <summary>
            Collection of the structured data.
            </summary>
        </member>
        <member name="F:CMS.GlobalHelper.ExtendedXmlData.mItemIdentificator">
            <summary>
            Item identificator.
            </summary>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.LoadData(System.String)">
            <summary>
            Loads the XML to the content table.
            </summary>
            <param name="data">Content XML to load</param>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.SetAttribute(System.String,System.String,System.String,System.Object)">
            <summary>
            Creates or update XML node with dependence on item identificator.
            </summary>
            <param name="columnName">Column name</param>
            <param name="identificator">Identificator value</param>
            <param name="attributeName">Attribute name</param>
            <param name="attributeValue">Attribute value</param>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.GetAttribute(System.String,System.String)">
            <summary>
            Returns attribute value from structured data colection.
            </summary>
            <param name="identificator">Item identificator value</param>
            <param name="attributeName">Attribute name</param>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.GetAttributes(System.String)">
            <summary>
            Returns attributes of item with given identificator or null when such item doesn't exists.
            </summary>
            <param name="identificator">Item identificator value</param>        
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.GetStructuredData">
            <summary>
            Returns Hashtable with structures data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.GetData">
            <summary>
            Returns the xml code of the data.
            </summary>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.Clear">
            <summary>
            Clears the custom data.
            </summary>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.Clone">
            <summary>
            Returns the cloned object.
            </summary>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.#ctor">
            <summary>
            Constructor - creates empty XmlData object.
            </summary>
        </member>
        <member name="M:CMS.GlobalHelper.ExtendedXmlData.#ctor(System.String)">
            <summary>
            Constructor with root element name specification.
            </summary>
            <param name="rootName">Root element name</param>
        </member>
        <member name="P:CMS.GlobalHelper.ExtendedXmlData.ItemIdentificator">
            <summary>
            Gets or sets the item identificator, if is set data can be saved structured.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.NamedDataContainer">
            <summary>
            Named data container (Data container with prefix).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.NamedDataContainer.mInnerContainer">
            <summary>
            Inner data container.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.NamedDataContainer.mPrefix">
            <summary>
            Column prefix.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.NamedDataContainer.#ctor(CMS.SettingsProvider.IDataContainer,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="sourceData">Source data</param>
            <param name="prefix">Column prefix</param>
        </member>
        <member name="M:CMS.SettingsProvider.NamedDataContainer.GetOriginalColumnName(System.String)">
            <summary>
            Gets the original column name without the prefix.
            </summary>
            <param name="columnName">Column name with prefix</param>
        </member>
        <member name="M:CMS.SettingsProvider.NamedDataContainer.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.NamedDataContainer.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.NamedDataContainer.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.SettingsProvider.NamedDataContainer.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.NamedDataContainer.InnerContainer">
            <summary>
            Inner data container.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.NamedDataContainer.Prefix">
            <summary>
            Column prefix.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.NamedDataContainer.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.NamedDataContainer.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.BaseGenericInfo`1">
            <summary>
            Generic abstraction over the base info to provide type specific operation
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseGenericInfo`1.mPropertiesRegistered">
            <summary>
            If true, the properties of this type were already registered
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseGenericInfo`1.mPropertyFunctions">
            <summary>
            Collection of the properties registered by the lambda function.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseGenericInfo`1.mRegisteredProperties">
            <summary>
            List of registered properties
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseGenericInfo`1.objectLock">
            <summary>
            Object lock
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.BaseGenericInfo`1.mColumnNames">
            <summary>
            Column names
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.#ctor(CMS.SettingsProvider.TypeInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="typeInfo">Object type information</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.CloneObject">
            <summary>
            Creates the clone of the object
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.Clone">
            <summary>
            Creates a clone of the object, including all IDs
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.Clone(System.Boolean)">
            <summary>
            Creates a clone of the object
            </summary>
            <param name="clear">If true, the object is cleared to be able to create new object</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.GetRegisteredProperties">
            <summary>
            Gets list of registered properties.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.RegisterProperty(System.String,System.Object,System.Func{`0,System.Object,System.Object})">
            <summary>
            Registers the given parametrized property to the object.
            </summary>
            <param name="propertyName">Property name</param>
            <param name="parameter">Parametr for the lambda expression</param>
            <param name="ex">Lambda expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.RegisterProperty(System.String,System.Func{`0,System.Object})">
            <summary>
            Registers the given property to the object
            </summary>
            <param name="propertyName">Property name</param>
            <param name="ex">Lambda expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.BaseGenericInfo`1.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns value of property.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="T:CMS.SettingsProvider.IObjectFactory">
            <summary>
            Object factory interface
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IObjectFactory.CreateNewObject">
            <summary>
            Creates and returns a new object
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectFactory`1">
            <summary>
            Class that provides construction of the objects of given class
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectFactory`1.CreateNewObject">
            <summary>
            Creates and returns a new object
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectFactory`1.CreateNewTypedObject">
            <summary>
            Creates and returns a new object
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectStatusEnum">
            <summary>
            Enumeration of the object status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectStatusEnum.New">
            <summary>
            New object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectStatusEnum.Unchanged">
            <summary>
            Object that didn't change.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectStatusEnum.Changed">
            <summary>
            Object that has changed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectStatusEnum.Deleted">
            <summary>
            Object that has been deleted.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectStatusEnum.NewCultureVersion">
            <summary>
            New culture version.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectStatusEnum.NewLink">
            <summary>
            New linked object (document).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SearchSettings">
            <summary>
            SearchSettings class provides methods for manipulation with SearchSettingsInfo objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchSettings.CONTAINERROOTNAME">
            <summary>
            Root element name of search settings data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchSettings.ITEMELEMENTNAME">
            <summary>
            Element name which determines items.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchSettings.ITEMIDENTIFICATOR">
            <summary>
            Attribute name which identifies single item of index settings.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettings.LoadData(System.String)">
            <summary>
            Loads settings from xml data.
            </summary>
            <param name="data">String of xml data</param>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettings.GetData">
            <summary>
            Returns xml code of search index settings.
            </summary>        
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettings.SetSettingsInfo(CMS.SettingsProvider.SearchSettingsInfo)">
            <summary>
            Adds or overwrites search setting item in hashtable.
            </summary>
            <param name="ssi">Search setting item</param>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettings.GetSettingsInfo(System.String)">
            <summary>
            Returns search setting item by specified II (GUID).
            </summary>
            <param name="guid">String idenfificator</param>
            <returns>Returns search setting item or null if there is no such item</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettings.GetSettingsInfo(System.Guid)">
            <summary>
            Returns search setting item by specified II (GUID).
            </summary>
            <param name="guid">ID of search setting item</param>
            <returns>Returns search setting item or null if no item found</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettings.GetAllSettingsInfos">
            <summary>
            Returns all search settings as DataSet.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettings.DeleteSearchSettingsInfo(System.Guid)">
            <summary>
            Deletes search setting item.
            </summary>
            <param name="guid">ID of search setting item</param>        
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettings.DeleteSearchSettingsInfo(CMS.SettingsProvider.SearchSettingsInfo)">
            <summary>
            Deletes search index setting item.
            </summary>
            <param name="ssi">SearchIndexSettingsInfo</param>        
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettings.Items">
            <summary>
            Gets list of all settings items.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TypeInfoEvents">
            <summary>
            Object events for particular type info
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfoEvents.Update">
            <summary>
            Fires when object is updated
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfoEvents.Insert">
            <summary>
            Fires when object is inserted
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfoEvents.Delete">
            <summary>
            Fires when object is deleted
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfoEvents.GetContent">
            <summary>
            Fires when search content is requested. You can modify content value which is saved to the search index.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AbstractContext">
            <summary>
            Base context object class.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractContext.GetProperty(System.String)">
            <summary>
            Gets the context property.
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:CMS.SettingsProvider.AbstractContext.SetProperty(System.String,System.Object)">
            <summary>
            Sets the context property.
            </summary>
            <param name="name">Property name</param>
            <param name="value">New value</param>
        </member>
        <member name="P:CMS.SettingsProvider.AbstractContext.Properties">
            <summary>
            Properties available through the context.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.GeneralizedInfo">
            <summary>
            Info object interface.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.GeneralizedInfo.#ctor(CMS.SettingsProvider.BaseInfo,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="mainObj">Main object</param>
            <param name="dummy">Dummy object to separate the protected constructor</param>
        </member>
        <member name="M:CMS.SettingsProvider.GeneralizedInfo.#ctor(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Constructor
            </summary>
            <param name="mainObj">Main object</param>
        </member>
        <member name="T:CMS.SettingsProvider.LoadDataEventHandler">
            <summary>
            Event which should load the data to the object when fired.
            </summary>
            <param name="infoObj">Object to load</param>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectContainer">
            <summary>
            Object container for the Hashtable records.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectContainer.mValue">
            <summary>
            Stored object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectContainer.mLastModified">
            <summary>
            Time when the object was modified the last time.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ObjectContainer.mKey">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectContainer.#ctor(System.Object,System.Object)">
            <summary>
            Object container.
            </summary>
            <param name="key">Object key</param>
            <param name="value">Object value</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectContainer.LastModified">
            <summary>
            Gets the time when the object was last modified.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectContainer.Value">
            <summary>
            Gets / sets the object value
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.OperationTypeEnum">
            <summary>
            Operation type enumeration.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.OperationTypeEnum.Synchronization">
            <summary>
            Synchronization, full data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.OperationTypeEnum.Export">
            <summary>
            Export, full data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.OperationTypeEnum.ExportSelection">
            <summary>
            Export selection (only ID and code name column, no metafiles or relationships).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.OperationTypeEnum.Versioning">
            <summary>
            Object version, complete data
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.OperationTypeEnum.Integration">
            <summary>
            Data are the same as for the Synchronization. Used as a distinguisher for special cases.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TranslationHelper">
            <summary>
            Class to provide objects translation interface ID - CodeName.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.AUTO_SITENAME">
            <summary>
            Automatic site name (Get by SiteIDs from DB).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.NO_SITE">
            <summary>
            No site condition for registering records.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.TRANSLATION_TABLE">
            <summary>
            Name of translation table
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.AUTO_SITEID">
            <summary>
            Automatic site ID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.AUTO_PARENTID">
            <summary>
            Automatic parent ID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.mTranslationTable">
            <summary>
            Translation table.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.mDefaultValues">
            <summary>
            Default values for object types [className.ToLower()] -> [value]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.mIDConversion">
            <summary>
            ID conversion table [className.ToLower()] -> Hashtable [OldID -> [NewID, NewGroupID]]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.mUseDisplayNameAsCodeName">
            <summary>
            If true, display name is used instead of the code name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TranslationHelper.mConnection">
            <summary>
            Connection object used to access data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.#ctor(System.Data.DataTable,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Constructor. Creates the helper initialized with given translation table.
            </summary>
            <param name="dt">Source data table</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.IsEmpty(CMS.SettingsProvider.TranslationHelper)">
            <summary>
            Determines whether the given translation helper contains any translations or not.
            </summary>
            <param name="th">TranslationHelper object to examine</param>
            <returns>TRUE if there are no translation records</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetEmptyTable">
            <summary>
            Returns empty translation table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.EnsureColumns(System.Data.DataTable)">
            <summary>
            Ensures the columns in the translation table.
            </summary>
            <param name="dt">Translation table</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.Clear">
            <summary>
            Clears the translation table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.HasRecords">
            <summary>
            Returns true if the helper contains some records.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterRecord(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Registers the record within given translation table.
            </summary>
            <param name="className">Object class name</param>
            <param name="id">Object ID</param>
            <param name="codeName">Object code name</param>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterRecord(System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Registers the record within given translation table.
            </summary>
            <param name="className">Object class name</param>
            <param name="id">Object ID</param>
            <param name="codeName">Object code name</param>
            <param name="siteName">Site name</param>
            <param name="parentId">Parent ID</param>
            <param name="info">Additional record info</param>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterRecords(System.Data.DataTable,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Registers the records from the given table.
            </summary>
            <param name="dt">Table with the records</param>
            <param name="className">Class name of the target objects</param>
            <param name="idColumnName">Name of the column where object IDs are stored</param>
            <param name="codeNameColumnName">Code name column name</param>
            <param name="parentIdColumnName">Parent ID column name</param>
            <param name="siteName">Site name</param>
            <param name="groupIdColumnName">Group ID column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterRecords(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            Registers the records from the given table.
            </summary>
            <param name="dt">Table with the records</param>
            <param name="className">Class name of the target objects</param>
            <param name="idColumnName">Name of the column where object IDs are stored</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterRecords(System.Data.DataTable,System.String,System.String,System.String,System.String[])">
            <summary>
            Registers the records from the given table.
            </summary>
            <param name="dt">Table with the records</param>
            <param name="className">Class name of the target objects</param>
            <param name="idColumnName">Name of the column where object IDs are stored</param>
            <param name="siteName">Site name</param>
            <param name="excludedNames">Excldued object names</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterRecords(System.Data.DataView,System.String,System.String,System.String,System.String[])">
            <summary>
            Registers the records from the given table.
            </summary>
            <param name="dt">Table with the records</param>
            <param name="className">Class name of the target objects</param>
            <param name="idColumnName">Name of the column where object IDs are stored</param>
            <param name="siteName">Site name</param>
            <param name="excludedNames">Excluded object names</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterRecords(System.String,System.Collections.Generic.IList{System.Int32},System.String,System.String[])">
            <summary>
            Registers the records from the given ID list.
            </summary>
            <param name="className">Class name of the target objects</param>
            <param name="objectIDs">List of IDs to register</param>
            <param name="siteName">Site name</param>
            <param name="excludedNames">Excluded object names</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterCodeNames(System.String,System.Collections.Hashtable,System.String,System.String[])">
            <summary>
            Registers the code names from the given table.
            </summary>
            <param name="className">Class name</param>
            <param name="codenames">Code names table</param>
            <param name="siteName">Site name</param>
            <param name="excludedNames">Excluded object names</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterGroupRecords(System.Collections.Generic.IList{System.Int32},System.String,System.String[])">
            <summary>
            Registers the group records to the translation table.
            </summary>
            <param name="groups">List of groups IDs</param>
            <param name="siteName">Site name</param>
            <param name="excludedNames">Excluded code names</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RegisterParentRecords(System.String,System.Collections.Generic.IList{System.Int32},System.String,System.String[])">
            <summary>
            Registers the parent records to the translation table.
            </summary>
            <param name="parentClassName">Parent class name</param>
            <param name="parents">List of parent IDs</param>
            <param name="siteName">Site name</param>
            <param name="excludedNames">Excluded code names</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.FilterExistingRecords(System.Collections.Generic.IList{System.Int32},System.String)">
            <summary>
            Filters the existing records from the given array.
            </summary>
            <param name="objectIDs">Existing IDs</param>
            <param name="className">Class</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RecordExists(System.String,System.Int32)">
            <summary>
            Returns true if specified record exists in translation table.
            </summary>
            <param name="className">Object class name</param>
            <param name="id">Object ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetCodeName(System.String,System.Int32)">
            <summary>
            Returns the code name of the specified object.
            </summary>
            <param name="className">Object class name</param>
            <param name="id">Object ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetRecord(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the record by ID.
            </summary>
            <param name="className">ClassName</param>
            <param name="codeName">Code name</param>
            <param name="siteName">Site name</param>
            <param name="parentId">Parent ID</param>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetRecord(System.String,System.Int32)">
            <summary>
            Gets the record by ID.
            </summary>
            <param name="className">ClassName</param>
            <param name="id">ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetCodeName(System.String,System.Int32,System.String)">
            <summary>
            Returns the code name of the specified object.
            </summary>
            <param name="className">Object class name</param>
            <param name="id">Object ID</param>
            <param name="defaultValue">Value to return in case record not found</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RecordExists(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns true if specified record exists in translation table.
            </summary>
            <param name="className">Object class name</param>
            <param name="codeName">Object code name</param>
            <param name="siteName">Site name</param>
            <param name="parentId">Parent ID</param>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetID(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the object ID for specified record.
            </summary>
            <param name="className">Class name</param>
            <param name="codeName">Code name</param>
            <param name="siteName">Site name</param>
            <param name="parentId">Parent ID</param>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetID(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the object ID for specified record.
            </summary>
            <param name="className">Class name</param>
            <param name="codeName">Code name</param>
            <param name="siteName">Site name</param>
            <param name="parentId">Object parent ID</param>
            <param name="groupId">Group ID</param>
            <param name="defaultValue">Value to return in case record not found</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.AddIDTranslation(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the ID translation to the translation table.
            </summary>
            <param name="className">Class name</param>
            <param name="oldId">Old ID</param>
            <param name="newId">New ID</param>
            <param name="newGroupId">New group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.SetDefaultValue(System.String,System.Int32)">
            <summary>
            Sets default value.
            </summary>
            <param name="className">Class name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.RemoveDefaultValue(System.String)">
            <summary>
            Removes default value.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetDefaultValue(System.String)">
            <summary>
            Gets default value.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetNewID(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Gets the new ID for given old ID.
            </summary>
            <param name="className">Class name</param>
            <param name="oldId">Old ID</param>
            <param name="codeNameColumn">Code name column of the class</param>
            <param name="siteId">Site ID of the required object</param>
            <param name="siteIdColumn">Site ID column of the class</param>
            <param name="parentIdColumn">Parent ID column</param>
            <param name="groupIdColumn">Group ID column</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetNewID(System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Int32@)">
            <summary>
            Gets the new ID for given old ID.
            </summary>
            <param name="className">Class name</param>
            <param name="oldId">Old ID</param>
            <param name="codeNameColumn">Code name column of the class</param>
            <param name="siteId">Site ID of the required object</param>
            <param name="siteIdColumn">Site ID column of the class</param>
            <param name="parentIdColumn">Parent ID column</param>
            <param name="groupIdColumn">Group ID column</param>
            <param name="useDefaultValue">Indicates if default value should be used for ID</param>
            <param name="outGroupId">Returns Group ID value</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.TranslateColumn(System.Data.DataRow,System.String,System.String,System.Int32)">
            <summary>
            Translates the DataRow column.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="className">Reference class name</param>
            <param name="siteId">Target site ID for objects lookup which are site-related</param>
            <returns>Returns true if the translation was successful</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.TranslateListColumn(CMS.SettingsProvider.GeneralizedInfo,System.String,System.String,System.Int32,System.Char)">
            <summary>
            Translates the column value with list of IDs of the given info object.
            </summary>
            <param name="infoObj">Object with the data</param>
            <param name="columnName">Column name to translate</param>
            <param name="className">Reference class name</param>
            <param name="siteId">Target site ID for objects lookup which are site-related</param>
            <param name="separator">ID separator</param>
            <returns>Returns true if the translation was successful</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.TranslateColumn(CMS.SettingsProvider.GeneralizedInfo,System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Translates the column value of the given info object.
            </summary>
            <param name="infoObj">Object with the data</param>
            <param name="columnName">Column name to translate</param>
            <param name="className">Reference class name</param>
            <param name="siteId">Target site ID for objects lookup which are site-related</param>
            <param name="useDefaultValue">Indicates if default value should be used for new IDs</param>
            <param name="required">If false, the colum is allowed to be set to null in case the translation is not found.</param>
            <returns>Returns true if the translation was successful</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.ChangeCodeName(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Changes the object code name in the table.
            </summary>
            <param name="className">Class name</param>
            <param name="oldCodeName">Old code name</param>
            <param name="siteName">Site name</param>
            <param name="parentId">Parent ID</param>
            <param name="groupId">Group ID</param>
            <param name="newCodeName">New code name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.TranslateColumns(CMS.SettingsProvider.GeneralizedInfo,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>
            Translates all reference object columns.
            </summary>
            <param name="infoObj">Object with the data</param>
            <param name="siteId">Translate site ID</param>
            <param name="parentId">Translate parent ID</param>
            <param name="dependencies">Translate dependencies</param>
            <param name="targetSiteId">Target site ID for objects lookup which are site-related</param>
            <param name="excludeColumns">Columns to exclude</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.IsExcluded(System.String,System.String)">
            <summary>
            Returns true of the column is excluded.
            </summary>
            <param name="columnName">Column name to check</param>
            <param name="excludedColumns">Excluded column list separated by semicolon</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetIDFromDB(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets the object ID from the database, only for objects that do not depend on any site.
            </summary>
            <param name="className">Object class name (e.g. CMS.Site)</param>
            <param name="codeName">Code name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="groupId">Group ID</param>
            <param name="groupIdColumn">Group ID column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetIDFromDB(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Gets the object ID from the database.
            </summary>
            <param name="className">Object class name (e.g. CMS.Site)</param>
            <param name="codeName">Code name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="siteId">Site ID</param>
            <param name="siteIdColumn">Site ID column</param>
            <param name="parentId">Parent ID</param>
            <param name="parentIdColumn">Parent ID column</param>
            <param name="groupId">Group ID</param>
            <param name="groupIdColumn">Group ID column</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetReadOnlyObject(System.String)">
            <summary>
            Gets the object of specified type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.OnGetObjectNotInitialized">
            <summary>
            Throws the exception that the OnGetObject method is not initialized
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object of specified type.
            </summary>
            <param name="objectRow">Object row</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetObject(System.String)">
            <summary>
            Gets the object of specified type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetCodeNameColumn(System.String)">
            <summary>
            Gets the code name column for specified object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetParentIDColumn(System.String)">
            <summary>
            Gets the parent ID column for specified object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetGroupIDColumn(System.String)">
            <summary>
            Gets the group ID column for specified object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetIDColumn(System.String)">
            <summary>
            Gets the ID column for specified object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetSiteIDColumn(System.String)">
            <summary>
            Gets the site id column for specified object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetParentType(System.String)">
            <summary>
            Gets the parent object type for specified object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetCodeNamesFromDB(System.String,System.Collections.Generic.IList{System.Int32},System.String)">
            <summary>
            Gets the code names from database and returns Hastable of couples [ID] -> [Codename]
            </summary>
            <param name="className">Class name</param>
            <param name="objectIDs">Array of object IDs</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetCodeNameFromDB(System.String,System.Int32,System.String)">
            <summary>
            Gets the object code name from the database.
            </summary>
            <param name="className">Object class name (e.g. CMS.Site)</param>
            <param name="id">Object ID</param>
            <param name="codeNameColumn">Code name column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetInfoFromDB(System.String,System.Int32,System.String,System.String)">
            <summary>
            Gets the object codename column and group ID column values from the database.
            </summary>
            <param name="className">Object class name (e.g. CMS.Site)</param>
            <param name="id">Object ID</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="groupIDColumn">Group ID column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TranslationHelper.GetSafeClassName(System.String)">
            <summary>
            Gets the safe class name.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="E:CMS.SettingsProvider.TranslationHelper.OnGetObject">
            <summary>
            Raised when the object instance is requested from the system.
            </summary>
        </member>
        <member name="E:CMS.SettingsProvider.TranslationHelper.OnGetReadOnlyObject">
            <summary>
            Raised when the object instance is requested from the system.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TranslationHelper.TranslationTable">
            <summary>
            Returns the translation table.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TranslationHelper.IDConversion">
            <summary>
            ID conversion table [className.ToLower()] -> Hashtable [OldID -> NewID]
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TranslationHelper.Connection">
            <summary>
            General connectin object used to access data.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TranslationHelper.UseDisplayNameAsCodeName">
            <summary>
            If true, display name is used instead of the code name.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TranslationHelper.OnGetObjectEventHandler">
            <summary>
            Returns the object instance by the given type.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
            <param name="infoObj">Resulting object</param>
        </member>
        <member name="T:CMS.SettingsProvider.TranslationHelper.OnGetReadOnlyObjectEventHandler">
            <summary>
            Returns the object instance by the given type.
            </summary>
            <param name="objectType">Object type</param>
            <param name="infoObj">Resulting object</param>
        </member>
        <member name="T:CMS.SettingsProvider.TypeHelper">
            <summary>
            Type helper.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TypeHelper.GetPlural(System.String)">
            <summary>
            Gets the plural for the given name
            </summary>
            <param name="name">Name to convert</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeHelper.NewList(System.String[])">
            <summary>
            Returns a new list created from the given values
            </summary>
            <param name="names">Values</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeHelper.NewList(System.Collections.ICollection[])">
            <summary>
            Returns a new list created from the given values
            </summary>
            <param name="names">Values</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeHelper.AddType(System.Collections.ArrayList,System.String)">
            <summary>
            Adds the type to the type list.
            </summary>
            <param name="list">Type list</param>
            <param name="type">Type to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeHelper.GetTypes(System.String)">
            <summary>
            Resolves the object types.
            </summary>
            <param name="objectTypes">Object types constants separated by semicolon</param>
        </member>
        <member name="T:CMS.SettingsProvider.TypeInfo">
            <summary>
            Object type info structure.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.VALUE_UNKNOWN">
            <summary>
            Uknown value.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.COLUMN_NAME_UNKNOWN">
            <summary>
            Uknown column name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mTypeInfos">
            <summary>
            All type infos existing in the system [ObjectType] -> [TypeInfo]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mLogSiteBindings">
            <summary>
            If true, object tasks are logged when site binding changes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mGlobalLogSynchronization">
            <summary>
            If true, object tasks are logged.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mTrackObjectInstances">
            <summary>
            If true, object instances are tracked.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mAllowObjectRelationships">
            <summary>
            If true, object relationships are allowed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mName">
            <summary>
            Type name
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mAllObjectsInvalidated">
            <summary>
            Time of the last invalidation of all of the objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mInvalidatedObjects">
            <summary>
            Table of invalidated objects [ID] -> [Invalidated when]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mObjectInstances">
            <summary>
            List of object instances.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mProviderType">
            <summary>
            Provider type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mObjectClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mIDColumn">
            <summary>
            ID column name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mIDColumns">
            <summary>
            ID column names.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mTimeStampColumn">
            <summary>
            Time stamp column name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mGUIDColumn">
            <summary>
            GUID column name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mCodeNameColumn">
            <summary>
            Code name column.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mDisplayNameColumn">
            <summary>
            Display name column.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mBinaryColumn">
            <summary>
            Binary column name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mSiteIDColumn">
            <summary>
            Site ID column.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mParentIDColumn">
            <summary>
            Parent ID column.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mGroupIDColumn">
            <summary>
            Community group ID column.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mModuleName">
            <summary>
            Name of the module where the object belongs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mDefaultOrderBy">
            <summary>
            Default order by clause for getting data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mParentObjectType">
            <summary>
            Parent type (ObjectType constant).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mChildObjectTypes">
            <summary>
            Child types (ObjectType constants separated by semicolon).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mChildDependencyColumns">
            <summary>
            Name of the columns (separated by semicolon) of object dependencies which should be included into the parent data (for example class data for BizForms).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mObjectDependencies">
            <summary>
            Object dependencies, array with values [column name (string), object type (string), required (bool)].
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mBindingObjectTypes">
            <summary>
            Binding types (ObjectType constants separated by semicolon).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mOtherBindingObjectTypes">
            <summary>
            Other binding types (ObjectType constants separated by semicolon) - binding types where this object participate but is not parent object of those binding types.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mSiteBindingObject">
            <summary>
            Site binding object (if exists).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mSiteBinding">
            <summary>
            Site binding object type (if exists).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mIsBinding">
            <summary>
            Determines if the object is binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mIsSiteBinding">
            <summary>
            Determines if the object is site binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mIsCategory">
            <summary>
            Determines whether the object is category type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mCheckPermissions">
            <summary>
            Determines whether the permissions should be checked when the object is accessed within the macro engine as an inner object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mLogSynchronization">
            <summary>
            Logs synchronization.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mLogExport">
            <summary>
            Logs export.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mLogIntegration">
            <summary>
            Whether to log integration tasks.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mSupportsVersioning">
            <summary>
            Indicates if the object versioning is supported.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mLogEvents">
            <summary>
            Logs events.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mUpdateTimeStamp">
            <summary>
            Update time stamp.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mTouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched when the object is changed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mIncludeToSynchronizationParentDataSet">
            <summary>
            Parent data inclusion for synchronization.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mIncludeToExportParentDataSet">
            <summary>
            Parent data inclusion for export.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mRequiredObject">
            <summary>
            If true, the object is required when imported / synchronized. If false, the object can be skipped when some error occurs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mHasMetaFiles">
            <summary>
            If true, the objects can have meta files.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mHasObjectRelationships">
            <summary>
            If true, the objects can have relationships to other objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mAllowDataExport">
            <summary>
            Specifies whether the object supports data export.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mAllowRestore">
            <summary>
            Indicates if object can be deleted to rec. bin.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mOriginalObjectType">
            <summary>
            Original object type of virtual object types.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mAllowSingleExport">
            <summary>
            Indicates if object supports single object export.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mProviderIsCustomizable">
            <summary>
            Indicates if provider supports methods customization
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.mReferenceColumnNames">
            <summary>
            Names of the columns that reference some object
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.#ctor(System.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="providerType">Provider type</param>
            <param name="objectType">Object type</param>
            <param name="objectClassName">Object class name</param>
            <param name="idColumn">ID column name</param>
            <param name="timeStampColumn">Time stamp column name</param>
            <param name="guidColumn">GUID column name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="displayNameColumn">Display name column name</param>
            <param name="binaryColumn">Binary column name</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="parentIDColumn">Parent ID column name</param>
            <param name="parentObjectType">Parent object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.#ctor(System.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object[0:,0:],System.String,CMS.SettingsProvider.IncludeToParentEnum,System.Boolean,CMS.SettingsProvider.IncludeToParentEnum,CMS.SettingsProvider.SynchronizationTypeEnum,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="providerType">Provider type</param>
            <param name="objectType">Object type</param>
            <param name="objectClassName">Object class name</param>
            <param name="idColumn">ID column name</param>
            <param name="timeStampColumn">Time stamp column name</param>
            <param name="guidColumn">GUID column name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="displayNameColumn">Display name column name</param>
            <param name="binaryColumn">Binary column name</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="parentIDColumn">Parent ID column name</param>
            <param name="parentObjectType">Parent object type</param>
            <param name="childObjectTypes">Child object types, list of object types separated by semicolon</param>
            <param name="objectDependencies">Object dependencies, array with values [column name, object type, value is required]</param>
            <param name="bindingObjectTypes">Binding object types, list of object types separated by semicolon</param>
            <param name="includeToExportParentDataSet">Export parent inclusion settings</param>
            <param name="logExport">Log export tasks for objects</param>
            <param name="includeToSynchronizationParentDataSet">Synchronization parent inclusion settings</param>
            <param name="logSynchronization">Synchronization logging settings</param>
            <param name="logEvents">Log event log events for the objects</param>
            <param name="touchCacheDependencies">Touch the cache dependencies if the object is updated (changes)</param>
            <param name="supportsVersioning">Indicates if the object versioning is supported by the object type</param>
            <param name="isCategory">Indicates whether the object is category type</param>
            <param name="checkPermissions">Indicates whether the permissions should be checked when the object is accessed within the macro engine as an inner object</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.#ctor(System.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object[0:,0:],System.String,CMS.SettingsProvider.IncludeToParentEnum,System.Boolean,CMS.SettingsProvider.IncludeToParentEnum,CMS.SettingsProvider.SynchronizationTypeEnum,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="providerType">Provider type</param>
            <param name="objectType">Object type</param>
            <param name="objectClassName">Object class name</param>
            <param name="idColumn">ID column name</param>
            <param name="timeStampColumn">Time stamp column name</param>
            <param name="guidColumn">GUID column name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="displayNameColumn">Display name column name</param>
            <param name="binaryColumn">Binary column name</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="parentIDColumn">Parent ID column name</param>
            <param name="parentObjectType">Parent object type</param>
            <param name="childObjectTypes">Child object types, list of object types separated by semicolon</param>
            <param name="objectDependencies">Object dependencies, array with values [column name, object type, value is required]</param>
            <param name="bindingObjectTypes">Binding object types, list of object types separated by semicolon</param>
            <param name="includeToExportParentDataSet">Export parent inclusion settings</param>
            <param name="logExport">Log export tasks for objects</param>
            <param name="includeToSynchronizationParentDataSet">Synchronization parent inclusion settings</param>
            <param name="logSynchronization">Synchronization logging settings</param>
            <param name="logEvents">Log event log events for the objects</param>
            <param name="touchCacheDependencies">Touch the cache dependencies if the object is updated (changes)</param>
            <param name="supportsVersioning">Indicates if the object versioning is supported by the object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.#ctor(System.Type,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object[0:,0:],System.String,CMS.SettingsProvider.IncludeToParentEnum,System.Boolean,CMS.SettingsProvider.IncludeToParentEnum,CMS.SettingsProvider.SynchronizationTypeEnum,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="providerType">Provider type</param>
            <param name="objectType">Object type</param>
            <param name="objectClassName">Object class name</param>
            <param name="idColumn">ID column name</param>
            <param name="timeStampColumn">Time stamp column name</param>
            <param name="guidColumn">GUID column name</param>
            <param name="codeNameColumn">Code name column name</param>
            <param name="displayNameColumn">Display name column name</param>
            <param name="binaryColumn">Binary column name</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="parentIDColumn">Parent ID column name</param>
            <param name="parentObjectType">Parent object type</param>
            <param name="childObjectTypes">Child object types, list of object types separated by semicolon</param>
            <param name="objectDependencies">Object dependencies, array with values [column name, object type, value is required]</param>
            <param name="bindingObjectTypes">Binding object types, list of object types separated by semicolon</param>
            <param name="includeToExportParentDataSet">Export parent inclusion settings</param>
            <param name="logExport">Log export tasks for objects</param>
            <param name="includeToSynchronizationParentDataSet">Synchronization parent inclusion settings</param>
            <param name="logSynchronization">Synchronization logging settings</param>
            <param name="logEvents">Log event log events for the objects</param>
            <param name="touchCacheDependencies">Touch the cache dependencies if the object is updated (changes)</param>
            <param name="supportsVersioning">Indicates if the object versioning is supported by the object type</param>
            <param name="isCategory">Indicates whether the object is category type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.#ctor(System.String,CMS.SettingsProvider.TypeInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="objectType">Object type</param>
            <param name="sourceInfo">Source TypeInfo instsance</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.GetTypeInfo(System.String)">
            <summary>
            Gets the specific type info based on the object type name.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.GetObjectTypeForColumn(System.String)">
            <summary>
            Gets the object type for the given column or null if the object type is not found or unknown.
            </summary>
            <param name="columnName">Column name to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.GetTypeColumns(System.String)">
            <summary>
            Returns the column names of specified object type, separated by semicolon.
            </summary>
            <param name="objectType">Object type name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.IncludeToParentDataSet(CMS.SettingsProvider.OperationTypeEnum)">
            <summary>
            Gets value of appropriate include to parent data set property due to operation.
            </summary>
            <param name="operation">Operation type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.ObjectInvalidated(System.Int32)">
            <summary>
            Invalidates specific object.
            </summary>
            <param name="objectId">Object ID to invalidate</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.ObjectInvalidated(System.Int32,System.Boolean)">
            <summary>
            Invalidates specific object.
            </summary>
            <param name="objectId">Object ID to invalidate</param>
            <param name="logTask">If true web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.InvalidateAllObjects">
            <summary>
            Invalidates all objects of this type.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.InvalidateAllObjects(System.Boolean)">
            <summary>
            Invalidates all objects of this type.
            </summary>
            <param name="logTask">If true, web farm task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.IsObjectInvalid(System.Int32,System.DateTime)">
            <summary>
            Returns true if the object is invalid.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="lastValid">Time when the object was last known as valid</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.AddNewInstance(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Adds new object instance to the list.
            </summary>
            <param name="instance">Instance to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.GetInstances">
            <summary>
            Gets the list of instances of the objects.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.ToXML">
            <summary>
            Returns XML representation of TypeInfo instance.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.ToJSON">
            <summary>
            Returns JSON representation of TypeInfo instance.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TypeInfo.Events">
            <summary>
            Events handled by object of this type
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.RaiseOnLoadRelatedData(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Raises the on load related data event.
            </summary>
            <param name="infoObj">Info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.TypeInfo.RaiseOnLogObjectChange(CMS.SettingsProvider.BaseInfo,CMS.SettingsProvider.TaskTypeEnum)">
            <summary>
            Raises the OnLogObjectChange event.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="taskType">Type of the task</param>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.TypeInfos">
            <summary>
            All type infos existing in the system [ObjectType] -> [TypeInfo]
            </summary>
            <remarks>TypeInfo is not guaranteed to be present in this collection until the first object of specified type is instantiated</remarks>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.LogSiteBindings">
            <summary>
            If true, object tasks are logged when site binding changes.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.AllowObjectRelationships">
            <summary>
            If true, object relationships are allowed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.GlobalLogSynchronization">
            <summary>
            If true, object tasks are logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.TrackObjectInstances">
            <summary>
            If true, object instanced are tracked.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ReferenceColumnNames">
            <summary>
            Names of the columns that reference some object
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.Name">
            <summary>
            Object type name, if not set, ObjectClassName is returned
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.IDColumn">
            <summary>
            ID column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.IDColumns">
            <summary>
            Returns the list of the ID columns (use with M:N relationship).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.TimeStampColumn">
            <summary>
            Time stamp column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.GUIDColumn">
            <summary>
            GUID column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.CodeNameColumn">
            <summary>
            Code name column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.DisplayNameColumn">
            <summary>
            Display name column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.BinaryColumn">
            <summary>
            Binary column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.SiteIDColumn">
            <summary>
            Site ID column name of the info record.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ParentIDColumn">
            <summary>
            Parent ID column name of the info record, returns specific column if the object is child object (has parent).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.PossibleParentIDColumn">
            <summary>
            Possible parent ID column name of the info record in case the parent ID column is optional (if the object can be both global and child).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.GroupIDColumn">
            <summary>
            Community group ID column name of the info record, returns specific column if the object can be also group object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ModuleName">
            <summary>
            Name of the module where the object belongs.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.DefaultOrderBy">
            <summary>
            Default order by clause for getting data.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ProviderType">
            <summary>
            Provider type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ProviderObject">
            <summary>
            Returns the provider object for this type info.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ObjectClassName">
            <summary>
            Object class name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ParentObjectType">
            <summary>
            Parent object type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ChildObjectTypes">
            <summary>
            Child object types, list of object types separated by semicolon.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ChildDependencyColumns">
            <summary>
            Name of the columns (separated by semicolon) of object dependencies which should be included into the parent data (for example class data for BizForms).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ObjectDependencies">
            <summary>
            Object dependencies, array with values [column name (string), object type (string), required (bool)].
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.BindingObjectTypes">
            <summary>
            Binding object types, list of object types separated by semicolon.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.OtherBindingObjectTypes">
            <summary>
            Other binding types (ObjectType constants separated by semicolon) - binding types where this object participate but is not parent object of those binding types.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.SiteBindingObject">
            <summary>
            Site binding object (if exists).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.SiteBinding">
            <summary>
            Site binding object type (if exists).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.UpdateTimeStamp">
            <summary>
            If true, timestamp of the object is updated when saved.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.LogIntegration">
            <summary>
            If true, integration tasks are being logged.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.LogExport">
            <summary>
            If true, export tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.SupportsVersioning">
            <summary>
            Indicates if the object versioning is supported.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.LogEvents">
            <summary>
            If true, Events tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.IncludeToSynchronizationParentDataSet">
            <summary>
            If false, the object is not included in the parent DataSet (for synchronization).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.IncludeToExportParentDataSet">
            <summary>
            If false, the object is not included in the parent DataSet (for export).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.RequiredObject">
            <summary>
            If true, the object is required when imported / synchronized. If false, the object can be skipped when some error occurs.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.HasMetaFiles">
            <summary>
            If true, the objects can have meta files.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.HasObjectRelationships">
            <summary>
            If true, the objects can have relationships to other objects.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.IsBinding">
            <summary>
            Returns true if the object is binding. Set forces the object to behave as binding.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.IsCategory">
            <summary>
            Returns true if object is category type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.CheckPermissions">
            <summary>
            Determines whether the permissions should be checked when the object is accessed within the macro engine as an inner object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.IsSiteBinding">
            <summary>
            Returns true if the object is site binding.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.IsSelfBinding">
            <summary>
            Returns true if the binding is binding to the same object as parent.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.AllowDataExport">
            <summary>
            Specifies whether the object supports data export. By default the value is true for all objects except binding objects.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.InvalidatedObjects">
            <summary>
            Table of invalidated objects [ID] -> [Invalidated when]
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ObjectInstances">
            <summary>
            List of the object instances.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.AllowRestore">
            <summary>
            Indicates if the object supports deleting to recycle bin. By default the value is true for all objects except binding objects.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.ProviderIsCustomizable">
            <summary>
            Indicates if provider supports methods customization
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.Inherited">
            <summary>
            Indicates if the type info is inherited (list info for example).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.OriginalObjectType">
            <summary>
            Original object type of virtual object types. For normal object type it's same as object type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TypeInfo.AllowSingleExport">
            <summary>
            Indicates if object supports single object export.
            </summary>
        </member>
        <member name="E:CMS.SettingsProvider.TypeInfo.OnLogObjectChange">
            <summary>
            Fires when the object change should be logged.
            </summary>
        </member>
        <member name="E:CMS.SettingsProvider.TypeInfo.OnLoadRelatedData">
            <summary>
            Fires when the related data should be loaded to the object.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TypeInfo.ObjectLoadRelatedDataEventHandler">
            <summary>
            Object load related data event handler.
            </summary>
            <param name="infoObj">Info object</param>
        </member>
        <member name="T:CMS.SettingsProvider.TypeInfo.OnGetContentEventHandler">
            <summary>
            Fires when search content is requested. You can modify content value which is saved to the search index.
            </summary>
            <param name="obj">Currently indexed object</param>
            <param name="content">Current content value</param>
        </member>
        <member name="T:CMS.SettingsProvider.TypeInfo.OnLogObjectChangeEventHandler">
            <summary>
            Logs the object change.
            </summary>
            <param name="infoObj">Main info object</param>
            <param name="taskType">Type of the task</param>
        </member>
        <member name="T:CMS.SettingsProvider.SynchronizationTypeEnum">
            <summary>
            Synchronization type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SynchronizationTypeEnum.None">
            <summary>
            No action.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SynchronizationTypeEnum.LogSynchronization">
            <summary>
            Logs synchronization.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SynchronizationTypeEnum.TouchParent">
            <summary>
            Touch parent object to synchronize.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SynchronizationTypeEnum.Default">
            <summary>
            Default (parent settings).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IncludeToParentEnum">
            <summary>
            Parent inclusion settings.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.IncludeToParentEnum.None">
            <summary>
            Not included in parent DataSet.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.IncludeToParentEnum.Complete">
            <summary>
            Complete inclusion, update all childs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.IncludeToParentEnum.Incremental">
            <summary>
            Included new items, no objects deleted on update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.IncludeToParentEnum.Default">
            <summary>
            Default inclusion.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ModuleCommands">
            <summary>
            Module commands.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetSystemVersionNumber">
            <summary>
            Get the system version number
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ClearHashtables(System.Boolean)">
            <summary>
            Clear all hashtables.
            </summary>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.DataEngineGetTransactionScope">
            <summary>
            Gets transaction scope.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ResolveMacros(System.String)">
            <summary>
            Resolves context macros in provided string value.
            </summary>
            <param name="value">String value which might contain macros</param>
            <returns>Returns resolved string</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ResolveMacrosWithParameters(System.String,System.String[0:,0:],System.Boolean)">
            <summary>
            Resolves the macros within given text.
            </summary>
            <param name="inputText">Input text</param>
            <param name="sourceParameters">Source parameters (couples [Name, Value]). The data is available with macro {%Name%}</param>
            <param name="encodeResolvedValues">If true, resolved values are encoded by default</param>
            <returns>Returns input text with resolved macros.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetCurrentUser">
            <summary>
            Gets current user.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetCurrentDocument">
            <summary>
            Gets current document.
            </summary>
            <returns>TreeNode - current document</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetCurrentSiteName">
            <summary>
            Returns current site name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetCurrentSiteID">
            <summary>
            Returns current site ID.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetSiteID(System.String)">
            <summary>
            Returns SiteID for a site specified by its SiteName.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.IsLiveSite">
            <summary>
            Indicates whether is live site
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetSiteName(System.Int32)">
            <summary>
            Returns SiteName for a site specified by its SiteID.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetSite(System.Int32)">
            <summary>
            Returns Site info specified by its SiteID.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.GetRelationshipId(System.String)">
            <summary>
            Gets the relationship ID based on the relationship name.
            </summary>
            <param name="relationshipName">Relationship name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.IsAuthorizedPerResource(System.String,System.String,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Returns true if given user is granted with specified permission.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name</param>
            <param name="userInfo">User info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetGroupInfoByGuid(System.Guid)">
            <summary>
            Gets the group by GUID.
            </summary>
            <param name="groupGuid">Group GUID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetGroupInfo(System.Int32)">
            <summary>
            Gets the Group info from Community module.
            </summary>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetGroupInfoByName(System.String,System.String)">
            <summary>
            Gets the Group info by group name and site name from Community module.
            </summary>
            <param name="groupName">Group code name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetUserGroups(System.Int32)">
            <summary>
            Gets the groups for the given user.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetUserGroups(System.Int32,System.String)">
            <summary>
            Gets the groups for the given user.
            </summary>
            <param name="userId">User ID</param>
            <param name="columns">Columns to select</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetUserFriendshipRelations(System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Gets the friends for the given user.
            </summary>
            <param name="userId">User ID</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetCurrentGroupID">
            <summary>
            Gets the current group's ID. Returns 0 if current group does not exist.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetGroupProfilePath(System.String,System.String)">
            <summary>
            Gets group profile path.
            </summary>
            <param name="groupName">Group name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetGroupManagementPath(System.String,System.String)">
            <summary>
            Gets group management path.
            </summary>
            <param name="groupName">Group name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetMemberProfilePath(System.String,System.String)">
            <summary>
            Gets member profile path.
            </summary>
            <param name="memberName">Member name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetMemberManagementPath(System.String,System.String)">
            <summary>
            Gets member management path.
            </summary>
            <param name="memberName">Member name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunitySiteHasGroup(System.Int32)">
            <summary>
            Returns true if selected site contains at least one group.
            </summary>
            <param name="siteId">Site id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityCheckGroupPermission(System.String,System.Int32)">
            <summary>
            Returns true if CurrentUser is authorized for the specified action in the group.
            </summary>
            <param name="permissionName">Permission to check</param>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityGetSiteGroups(System.String)">
            <summary>
            Gets the groups for the given site.
            </summary>
            <param name="siteName">Code name of the site</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CommunityIsMemberOfGroup(System.Int32,System.Int32)">
            <summary>
            Indicates whether the specified user is member of the specified group.
            </summary>
            <param name="userId">ID of the user to check</param>
            <param name="groupId">ID of the group to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetSKUInfo(System.Int32)">
            <summary>
            Gets the SKU info from E-commerce module.
            </summary>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetSKUInfo(System.Guid)">
            <summary>
            Gets the SKU by GUID.
            </summary>
            <param name="skuGuid">SKU GUID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetMainCurrency(System.Int32)">
            <summary>
            Gets the main currency object for the specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetDepartmentInfo(System.Int32)">
            <summary>
            Gets the department by department ID.
            </summary>
            <param name="departmentId">ID of the department</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceUpdateSKUColumns(System.Object)">
            <summary>
            Updates the SKU columns of the node product.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceCreateDefaultSKU(System.Object)">
            <summary>
            Creates the default product for the given document. Returns true on success.
            </summary>
            <param name="node">Document node</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingCreateRelation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns current contact ID.
            </summary>
            <param name="relatedId">RelatedID (subscriber ID, customer ID)</param>
            <param name="memberType">Member type converted to int</param>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceDeleteSKUInfo(System.Int32)">
            <summary>
            Deletes SKU info.
            </summary>
            <param name="skuId">SKU ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetCustomerInfoByUserId(System.Int32)">
            <summary>
            Returns the CustomerInfo structure the customer specified by user ID.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetCustomerInfo(System.Int32)">
            <summary>
            Returns the CustomerInfo structure the customer specified by customer ID.
            </summary>
            <param name="customerId">Customer ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceSetCustomerInfo(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Saves the CustomerInfo structure.
            </summary>
            <param name="customer">CustomerInfo to be set.</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceRecalculateValuesCleanup(System.String[])">
            <summary>
            Performs hashtable cleanup according to given parameters.
            </summary>
            <param name="parameters">Parameteres determining which hashtables should be cleared</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetSKUUrl(System.Guid,System.String,System.String)">
            <summary>
            Returns SKU item URL.
            </summary>
            <param name="skuGUID">SKU Guid</param>
            <param name="skuName">SKU name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetOrderItemSKUFileUrl(System.Guid,System.String,System.Int32)">
            <summary>
            Returns e-product download URL.
            </summary>
            <param name="fileToken">File unique download token</param>
            <param name="fileName">File name</param>
            <param name="siteId">Site ID of the order in which the e-product is included</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetInvoice(System.Int32)">
            <summary>
            Returns invoice as HTML table for specified order.
            </summary>
            <param name="orderId">Order ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ECommerceGetSKUFormattedPrice(System.Data.DataRow,System.Boolean,System.Boolean)">
            <summary>
            Returns formatted product catalogue price based on the SKU data and the data of the current shopping cart.
            Discounts and/or taxes are included optionally. 
            </summary>
            <param name="drSKU">Data row with SKU data</param>
            <param name="discounts">True - catalogue discounts are applied to the price</param>
            <param name="taxes">True - catalogue taxes are applied to the discounted price</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.EventLogLogException(System.String,System.String,System.Exception)">
            <summary>
            Logs the exception to the EventLog.
            </summary>
            <param name="source">Source of the event (Content, Administration, etc.)</param>
            <param name="eventCode">Event code (UPDATEDOC, SENDEMAIL, DELETE, etc.)</param>
            <param name="ex">Exception to log</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.EventLogLogEvent(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Processes 'LogEvent' module command.
            </summary>
            <param name="eventLogInfo">Event log info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.EventLogLogEvent(System.String,System.DateTime,System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Processes 'LogEvent'module command.
            </summary>
            <param name="eventType">Type of the event. Please use predefined constants from EventLogProvider</param>
            <param name="eventTime">Date and time when the event occurs</param>
            <param name="source">Source of the event (Content, Administration, etc.)</param>
            <param name="eventCode">Event code (UPDATEDOC, SENDEMAIL, DELETE, etc.)</param>
            <param name="userId">ID of the user, who caused logged event</param>
            <param name="userName">Name of the user, who caused logged event</param>
            <param name="nodeId">ID value of the document</param>
            <param name="documentName">NamePath value of the document</param>
            <param name="ipAddress">IP Address of the user, who caused logged event</param>
            <param name="eventDescription">Detailed description of the event</param>
            <param name="siteId">ID of the site</param>
            <param name="eventUrl">Event URL address</param>
            <param name="machineName">Name of machine</param>
            <param name="urlReferrer">Referrer URL</param>
            <param name="userAgent">User agent</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.BizFormsGetBizFormsForSite(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the dataset containing the bizforms for the specified site.
            </summary>
            <param name="siteID">Site ID</param>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY condition</param>
            <param name="topN">TOP N</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ClearFormControlParameters(System.Boolean)">
            <summary>
            Clears cached form control parameters.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ClearFormInfos(System.Boolean)">
            <summary>
            Clears cached FormInfo objects.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ClearAlternativeFormInfos(System.Boolean)">
            <summary>
            Clears cached alternative FormInfo objects.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.BlogsGetEnableEmails">
            <summary>
            Gets blogs EnableEmails property.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.BlogsSetEnableEmails(System.Boolean)">
            <summary>
            Sets blogs EnableEmails property.
            </summary>
            <param name="enable">Enable emails</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.BlogsGetApprovedBlogComments(System.Int32)">
            <summary>
            
            </summary>
            <param name="documentID">Document id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.BlogsGetBlogCommentInfo(System.Int32)">
            <summary>
            Returns blog comment info (BaseInfo).
            </summary>
            <param name="commentId">Comment ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.EventsGetSiteEvent(System.Int32,System.String,System.String)">
            <summary>
            Returns Booking event by ID for specified site.
            </summary>
            <param name="eventId">Booking event ID</param>
            <param name="siteName">Site name</param>
            <param name="columns">Columns of booking event to be returned in DataSet</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.EventsGetAttendeeInfo(System.Int32)">
            <summary>
            Returns attendee info object by its ID.
            </summary>
            <param name="attendeeId">Attendee ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsRefreshForumDataCount(System.String,System.Int32)">
            <summary>
            Refreshes forum posts and threads count.
            </summary>
            <param name="forumName">Forum name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsGetDocumentForumsCount(System.Int32)">
            <summary>
            Gets the number of forums for current document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsAddForumModerator(System.Int32,System.Int32)">
            <summary>
            Add moderator to forum.
            </summary>
            <param name="userId">User ID</param>
            <param name="forumId">Forum ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsRemoveForumModerator(System.Int32,System.Int32)">
            <summary>
            Removes moderator to forum.
            </summary>
            <param name="userId">User ID</param>
            <param name="forumId">Forum ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsGetForumAttachmenFile(System.Guid,System.String)">
            <summary>
            Gets the binary data for forum attachment object.
            </summary>
            <param name="attachmentGuid">Attachment GUID</param>
            <param name="siteName">Attachment site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsSaveFileToDisk(System.String,System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Saves attachment file to the disk.
            </summary>
            <param name="siteName">Attachment site name</param>
            <param name="guid">File GUID</param>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="fileData">File data (byte[] or Stream)</param>   
            <param name="synchronization">Indicates if this function is called from "ProcessTask"</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsDeleteAttachmentFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete forum attachment file stored in the file system.
            </summary>
            <param name="siteName">Site name</param>
            <param name="attachmentFileName">Name of the file to be deleted</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not</param>
            <param name="synchronization">Indicates wehther the method is called due to synchronization</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsGetDocumentPosts(System.Int32)">
            <summary>
            Returns dataset with all ad-hoc forums of specified document.
            </summary>
            <param name="documentID">Document id</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsGetForumIdsByForumName(System.String,System.Int32)">
            <summary>
            Returns IDs of forums with specified name.
            </summary>
            <param name="name">Forum name, may contain wildcard e.g. "MyForum_*"</param>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsSearch(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset with forum posts, filtered by specified conditions.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by condition</param>
            <param name="topN">TOP N</param>
            <param name="columns">Columns to select</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsGetForumPostInfo(System.Int32)">
            <summary>
            Returns forum post info (BaseInfo) of specified ID.
            </summary>
            <param name="forumPostId">ID of the forum</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsGetForumInfo(System.Int32)">
            <summary>
            Returns ForumInfo(BaseInfo) of specified id.
            </summary>
            <param name="forumId">ID of the forum</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ForumsGetPostUrl(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns URL of the specified forum post.
            <param name="forumId">Forum id</param>
            <param name="postIdPath">Post id path</param>
            <param name="encodeQueryString">Indicates if the query string should be encoded</param>
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ReportingGetSavedGraphInfo(System.Int32)">
            <summary>
            Gets the saved graph object by ID.
            </summary>
            <param name="graphId">Graph ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ReportingGetSavedReports(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets the saved reports.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ReportingRefreshDataCount">
            <summary>
            Refresh child count for all categories.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ReportingRefreshCategoryDataCount(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Refresh children count for single category.
            </summary>
            <param name="infoObj">Category to update</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ReportingUpdateInfoChildrenCount(CMS.SettingsProvider.BaseInfo,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Refresh data count for category object.
            </summary>
            <param name="infoObj">Destination info object</param>
            <param name="existing">Source info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.ReportingRefreshReportCategoryDataCount(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Refresh data count for reports' category object.
            </summary>
            <param name="infoObj"></param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.SendEmail(System.String,System.String,System.String,System.String)">
            <summary>
            Sends the e-mail.
            </summary>
            <param name="emailAddress">E-mail address</param>
            <param name="emailSubject">E-mail subject</param>
            <param name="emailBody">E-mail body</param>
            <param name="siteName">Name of the site (optional)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.SendEmail(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends the e-mail.
            </summary>
            <param name="emailAddress">E-mail address</param>
            <param name="fromEmailAddress">E-mail address from which is the email sent</param>
            <param name="emailSubject">E-mail subject</param>
            <param name="emailBody">E-mail body</param>
            <param name="siteName">Name of the site (optional)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends the e-mail.
            </summary>
            <param name="emailAddress">E-mail address</param>
            <param name="fromEmailAddress">E-mail address from which is the email sent</param>
            <param name="emailSubject">E-mail subject</param>
            <param name="emailBody">E-mail body</param>
            <param name="emailPlainTextBody">E-mail plain text body (optional)</param>
            <param name="siteName">Name of the site (optional)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CancelEmailSending">
            <summary>
            Stops current sending.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.UserClearLicenseValues">
            <summary>
            Clear license values.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.LicensingIsFeatureAvailable(System.String,CMS.SettingsProvider.FeatureEnum)">
            <summary>
            Checks if specified feature is available for specified domain.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.LicensingRequestFeature(System.String,CMS.SettingsProvider.FeatureEnum)">
            <summary>
            Request specified feature for specified domain.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.NewsletterSendAllEmails(System.Boolean)">
            <summary>
            Tries to send all e-mails in the queue.
            </summary>
            <param name="sendFailed">Send failed e-mails?</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.NewsletterClearEmailsSendingStatus">
            <summary>
            Clears the sending status for the corrupted e-mails.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.NewsletterGetNewsletterIssueInfo(System.Int32)">
            <summary>
            Returns issue info object.
            </summary>
            <param name="issueId">Issue ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.NewsletterGetNewsletterInfo(System.Int32)">
            <summary>
            Returns issue info object.
            </summary>
            <param name="newsletterId">Newsletter ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.NewsletterGetClickthroughLink(System.Int32)">
            <summary>
            Returns target link specified by ID.
            </summary>
            <param name="linkId">Link ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.CancelNewsletterSending">
            <summary>
            Stops current sending.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.NewsletterGetSubscriber(System.Int32)">
            <summary>
            Returns newsletter subscriber specified by ID.
            </summary>
            <param name="subscriberID">Subscriber ID</param>
            <returns>Returns info for the subscriber ID</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaFileFullPath(System.Int32,System.String,System.String)">
            <summary>
            Gets media file full path.
            </summary>
            <param name="fileId">Media file ID</param>
            <param name="siteName">Site name</param>
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaFileFullPath(System.String,System.Int32,System.String,System.String)">
            <summary>
            Returns physical path to the given file path and library.
            </summary>
            <param name="filePath">Media file path</param>
            <param name="fileLibraryId">Library ID of the media file</param>
            <param name="siteName">Site name</param>
            <param name="webFullPath">Physical path to the root of the web project (e.g. c:\WebProject\), if it is not specified web application physical path is used</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaFileFullPath(CMS.SettingsProvider.BaseInfo,System.String,System.String)">
            <summary>
            Gets media file full path.
            </summary>
            <param name="infoObj">Media file info</param>
            <param name="siteName">Site name</param>
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetThumbnailPath(System.String,System.String,System.Int32)">
            <summary>
            Gets media file thumbnails path.
            </summary>
            <param name="siteName">Site name</param>
            <param name="filePath">Media file path</param>
            <param name="libraryId">Library ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaFileInfo(System.Data.DataRow)">
            <summary>
            Gets media file info object.
            </summary>
            <param name="data">DataRow with data</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaLibraryInfo(System.Int32)">
            <summary>
            Gets media library info object.
            </summary>
            <param name="libraryId">Media library ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaFileUrl(System.String,System.String)">
            <summary>
            Returns media url according to site settings.
            </summary>
            <param name="fileGuid">File GUID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaFileUrl(System.Guid,System.String)">
            <summary>
            Returns media url according to GUID and file name.
            </summary>
            <param name="fileGuid">File GUID</param>
            <param name="fileName">File name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaSource(System.Guid,System.String)">
            <summary>
            Gets media source for the given file guid and site.
            </summary>
            <param name="fileGuid">File guid</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaSource(System.String,System.String,System.String)">
            <summary>
            Gets media source for the given file guid and site.
            </summary>
            <param name="filePath">File path</param>
            <param name="siteName">Site name</param>
            <param name="libraryFolder">Library folder name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryDeleteInfosForGroup(System.Int32)">
            <summary>
            Delete media libraries only from database which belong to the specified group.
            </summary>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryDeleteFoldersForGroup(System.String,System.Collections.ArrayList)">
            <summary>
            Delete media libraries folders from media root folder (~/[site name]/media/)
            </summary>
            <param name="siteName">Site name</param>
            <param name="folders">List of folders</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryDeleteMediaFile(System.Int32,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes media file from filesystem.
            </summary>
            <param name="siteID">Site id</param>
            <param name="libraryID">Library id</param>
            <param name="filePath">Sub path to file</param>
            <param name="onlyFile">Indicates if only file should be deleted</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryDeleteMediaFilePreview(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Deletes media file preview from filesystem.
            </summary>
            <param name="siteName">Site name</param>
            <param name="libraryID">Library ID</param>
            <param name="filePath">File path</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetDeletePhysicalFiles">
            <summary>
            Gets information wether physical files should be deleted.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibrarySetDeletePhysicalFiles(System.Boolean)">
            <summary>
            Sets if physical files should be deleted.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetMediaRootFolderPath(System.String)">
            <summary>
            Returns media library root folder path.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetSiteLibraries(System.String)">
            <summary>
            Gets the media libraries for the given site.
            </summary>
            <param name="siteName">Code name of the site</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetGroupLibraries(System.String,System.String)">
            <summary>
            Gets the group media libraries for the given site and group.
            </summary>
            <param name="siteName">Code name of the site</param>
            <param name="groupName">Code name of the group</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryCreateFolder(System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates media library folder.
            </summary>
            <param name="siteName">Site name</param>
            <param name="libraryId">Library ID</param>
            <param name="sourceFolderPath">New folder path</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
            <param name="logSynchronization">Indicates if staging task should be logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryCopyFolder(System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Copies media library folder.
            </summary>
            <param name="siteName">Site name</param>
            <param name="libraryId">Library ID</param>
            <param name="origPath">Old folder path within the library folder</param>
            <param name="newPath">New folder path within the library folder</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
            <param name="logSynchronization">Indicates if staging task should be logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryMoveFolder(System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Moves media library folder.
            </summary>
            <param name="siteName">Site name</param>
            <param name="libraryId">Library ID</param>
            <param name="origPath">Old folder path within the library folder</param>
            <param name="newPath">New folder path within the library folder</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
            <param name="logSynchronization">Indicates if staging task should be logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryRenameFolder(System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Renames media library folder.
            </summary>
            <param name="siteName">Site name</param>
            <param name="libraryId">Library ID</param>
            <param name="origPath">Original folder path</param>
            <param name="newPath">New folder path</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
            <param name="logSynchronization">Indicates if staging task should be logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryDeleteFolder(System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes media library folder.
            </summary>
            <param name="siteName">Site name</param>
            <param name="libraryId">Media library ID</param>
            <param name="folderPath">Path to the folder within the library</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
            <param name="logSynchronization">Indicates if staging task should be logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryDeleteFolder(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes media library folder.
            </summary>
            <param name="siteName">Site name</param>
            <param name="folderPath">Path to the folder within the library</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
            <param name="logSynchronization">Indicates if staging task should be logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibrarySaveFileToDisk(System.String,System.String,System.String,System.String,System.String,System.Guid,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Saves media file to disk and returns the applied file path.
            </summary>
            <param name="siteName">Name of the site of the media library</param>
            <param name="libraryFolder">Media library root folder</param>
            <param name="librarySubFolderPath">Subfolder path</param>
            <param name="fileName">Name of the file</param>
            <param name="fileExtension">Extension of the file</param>
            <param name="fileData">File data</param>
            <param name="fileGuid">File GUID</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
            <param name="ensureUniqueFileName">Indicates if unique file name should be ensured</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryCopyMediaFile(System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Copy media file.
            </summary>
            <param name="siteName">Site name</param>
            <param name="libraryID">Library ID</param>
            <param name="origPath">Old file path within the library folder</param>
            <param name="newPath">New file path within the library folder</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MoveMediaFile(System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Moves media file.
            </summary>
            <param name="siteName">Site name</param>
            <param name="libraryID">Library ID</param>
            <param name="origPath">Old file path within the library folder</param>
            <param name="newPath">New file path within the library folder</param>
            <param name="synchronization">Indicates if method is running by web farms synchronization</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MediaLibraryGetCurrentLibraryID">
            <summary>
            Gets the current library's ID. Returns 0 if current library does not exist.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MetaFilesDeleteFiles(CMS.SettingsProvider.BaseInfo,System.String)">
            <summary>
            Deletes object meta files.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="category">Meta files category</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.NotificationsRaiseEvent(System.String,System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Object,System.String[0:,0:])">
            <summary>
            Raises notification events according to the specified parameters.
            </summary>
            <param name="eventSource">Subscription event source</param>
            <param name="eventCode">Subscription event code</param>
            <param name="eventObjectId">Subscription event object ID</param>
            <param name="eventData1">Subscription event data 1</param>
            <param name="eventData2">Subscription event data 2</param>
            <param name="siteId">ID of the site where the event belongs</param>
            <param name="where">Additional WHERE conditoin</param>
            <param name="resolverData">Custom data for macro resolver (DataRow or DataClass object)</param>
            <param name="resolverSpecialMacros">Special macros (couples [name, value])</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardGetDocumentBoardsCount(System.Int32)">
            <summary>
            Gets the number of message boards for current document.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardAddRoleToBoard(System.Int32,System.Int32)">
            <summary>
            Adds specified role to the board.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="boardId">BoardID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardRemoveRoleFromBoard(System.Int32,System.Int32)">
            <summary>
            Removes specified role from the board.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="boardId">BoardID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardAddModeratorToBoard(System.Int32,System.Int32)">
            <summary>
            Adds new BoardModeratorInfo object.
            </summary>        
            <param name="boardId">ID of the board moderator is being added to</param>
            <param name="userId">ID of the user representing board moderator</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardRemoveModeratorFromBoard(System.Int32,System.Int32)">
            <summary>
            Removes specified user from the board.
            </summary>
            <param name="roleId">Role ID</param>
            <param name="boardId">BoardID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardGetEnableEmails">
            <summary>
            Gets message boards EnableEmails property.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardSetEnableEmails(System.Boolean)">
            <summary>
            Sets message boards EnableEmails property.
            </summary>
            <param name="enable">Enable emails</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardGetMessageBoardInfo(System.Int32)">
            <summary>
            Gets message board info object with dependence on specified board id.
            </summary>
            <param name="messageBoardId">Message board id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardGetBoardMessageInfo(System.Int32)">
            <summary>
            Gets board message info object specified by its ID.
            </summary>
            <param name="boardMessageId">Message board id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessageBoardGetDocumentMessages(System.Int32)">
            <summary>
            Gets all messages of specified document.
            </summary>
            <param name="documentID">Document id</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessagingAddToContactList(System.Int32,System.Int32)">
            <summary>
            Adds user to contactlist.
            </summary>
            <param name="ownerId">ID of contactlist owner</param>
            <param name="contactId">ID of user to add to contactlist</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessagingAddToIgnoreList(System.Int32,System.Int32)">
            <summary>
            Adds user to ingnore list.
            </summary>
            <param name="ownerId">ID of ignore list owner</param>
            <param name="contactId">ID of user to add to ignore list</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessagingIsInContactList(System.Int32,System.Int32)">
            <summary>
            Returns true if the user is in the contact list.
            </summary>
            <param name="ownerId">ID of contact list owner</param>
            <param name="contactId">ID of user in contact list</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.MessagingIsInIgnoreList(System.Int32,System.Int32)">
            <summary>
            Returns true if the user is in the ignore list.
            </summary>
            <param name="ownerId">ID of ignore list owner</param>
            <param name="contactId">ID of user to in ignore list</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.PollsAddRoleToPoll(System.Int32,System.Int32)">
            <summary>
            Assigns the role to poll.
            </summary>
            <param name="roleId">Role ID</param>
            <param name="pollId">Poll ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.PollsRemoveRoleFromPoll(System.Int32,System.Int32)">
            <summary>
            Removes role from poll.
            </summary>
            <param name="roleId">Role ID</param>
            <param name="pollId">Poll ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.PollsPollBelongsToGroup(System.Int32,System.Int32)">
            <summary>
            Returns TRUE if poll belongs to specified group.
            </summary>
            <param name="pollId">Poll ID</param>
            <param name="groupId">Group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.PollsGetPollInfo(System.Int32)">
            <summary>
            Returns poll info object (BaseInfo) specified by ID.
            </summary>
            <param name="pollId">Poll info ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.PollsGetPollAnswerInfo(System.Int32)">
            <summary>
            Returns answer info specified by ID.
            </summary>
            <param name="answerId">Answer info ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.PortalEngineGetPageTemplate(System.Int32)">
            <summary>
            Returns Page template info object.
            </summary>
            <param name="templateID">Template id</param>
            <returns></returns>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.SmartSearchFilterSearchResults(System.String,System.Object[])">
            <summary>
            Filters search results. It's a general method for all types of object. 
            Returns Hashtable with filtered results.
            </summary>
            <param name="predefinedObjectType">Determines object type of results</param>
            <param name="parameters">All method parameters in object array</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.SmartSearchSelectSearchDocument(System.String,System.Object[])">
            <summary>
            Returns List of ISearchable of specified type.
            </summary>
            <param name="predefinedObjectType">Determines for which object type the command is executed</param>
            <param name="parameters">All method parameters in object array</param>  
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.SmartSearchGetSearchDocuments(System.String,System.Object[])">
            <summary>
            Returns List of Lucene .NET Document objects.
            </summary>
            <param name="predefinedObjectType">Determines for which object type the command is executed</param>
            <param name="parameters">All method parameters in object array</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.AddSearchIndexTask(System.String,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Creates a general index task which updates a specific smart-search index.
            </summary>
            <param name="predefinedObjectType">Determines for which object type the command is executed</param>
            <param name="infoObj">BaseInfo which is being updated</param>        
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.TreeEngineSelectNodes(System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Alias path</param>
            <param name="cultureCode">Culture code</param>
            <param name="combineWithDefaultCulture">Combine with default culture</param>
            <param name="classNames">Class name</param>  
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.AttachmentSearch(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.Int32[],CMS.SettingsProvider.BaseInfo)">
            <summary>
            Searches attachment binary data for search expression.
            </summary>
            <param name="searchExpression">Search expression</param>
            <param name="path">Path to files</param>
            <param name="className">Class name of files</param>
            <param name="where">Custom WHERE condition</param>
            <param name="orderBy">Custom ORDER By condition</param>
            <param name="topN">Custom TOP N condition</param>
            <param name="checkPermissions">Indicates if result DataSet should be filtered by permissions of current user</param>
            <param name="combineWithDefaultCulture">Indicates if result DataSet should be filtered by cultures</param>
            <param name="culture">Preferred culture</param>
            <param name="defaultCulture">Default culture</param>
            <param name="siteIds">Search in sites</param>
            <param name="userInfo">User info</param>
            <returns>DataSet with result</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingContainsABTest(System.String,System.Int32,System.String)">
            <summary>
            Indicated whether there are multivariate tests defined for a page.
            </summary>
            <param name="path">The page path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetABTestPageInfo(System.Object)">
            <summary>
             Returns the page info object for specified original pageinfo with dependence on corresponding AB  test.
            </summary>
            <param name="originalPageInfo">Page info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetABTestVariantName(System.String,System.String)">
            <summary>
            Returns variant name for specified test name and sitename and set cookies value
            </summary>
            <param name="testName">AB test name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingIsABVariantValid(System.String,System.String,System.String)">
            <summary>
            Checks whether AB variant is assigned to the specified ab test and ab test is running.
            </summary>
            <param name="abTestName">ABTest name</param>
            <param name="abVariantName">ABVariant name</param>
            <param name="siteName">Site name</param>
            <returns>Returns true if variant is valid</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingIncreaseABConversions(System.String,System.String,System.String,System.Int32)">
            <summary>
            Increases number of conversions in ABTest and ABVariant.
            </summary>
            <param name="abTestName">ABTest name</param>
            <param name="abVariantName">ABVariant name</param>
            <param name="siteName">Site name</param>
            <param name="hits">Hits count in one step (file)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetABTestSiteID(System.Int32)">
            <summary>
            Returns SiteID of given ABTest.
            </summary>
            <param name="ID">ID of AB test</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetABTestVariantSiteID(System.Int32)">
            <summary>
            Returns SiteID of given variant's test.
            </summary>
            <param name="ID">ID of AB test variant</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingIsMVTCombinationValid(System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether MVT combination is assigned to the specified MV test and MV test is running.
            </summary>
            <param name="combination">Combination name</param>
            <param name="testName">Test name</param>
            <param name="siteName">Site name</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingIncreaseMVTConversions(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
             Increases number of conversions in MV test and combination
            </summary>
            <param name="combination">Combination name</param>
            <param name="mvTestName">MV Test name</param>
            <param name="siteName">Site name</param>
            <param name="culture">Culture code</param>
            <param name="hits">Hits count</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetMVTestSiteID(System.Int32)">
            <summary>
            Returns SiteID of given multivariate test id.
            </summary>
            <param name="testId">The multivariate test id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingContainsMVTest(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Indicated whether there are multivariate tests defined for a page.
            </summary>
            <param name="path">The page path</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
            <param name="isLiveSite">If set to <c>true</c>, ViewMode is LiveSite</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingContainsRunningMVTest(System.String,System.Int32,System.String)">
            <summary>
            Indicates whether the specified document contains a running multivariate test.
            </summary>
            <param name="testPage">The test page.</param>
            <param name="siteId">The site id</param>
            <param name="cultureCode">The culture code</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetMVTVariants(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets all mvt variants of a webpart (instanceGuid + zoneId) or zone (zoneId) for the template (templateId).
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGUID">The web part instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingLoadMVTVariants(System.Object,System.Boolean)">
            <summary>
            Loads the MVT variants for the specified instance (web part/zone/widget).
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetMVTVariantId(System.Int32,System.String)">
            <summary>
            Returns the MVT variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantCodeName">The variant code name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingCombineWithMVT(System.Object,System.Object,System.Object)">
            <summary>
            Returns template instance combined with MVT settings.
            </summary>
            <param name="pageInfo">The page info</param>
            <param name="templateInstance">The template instance</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingCombineWithMVT(System.Object,System.Object,System.Int32,System.Object)">
            <summary>
            Returns template instance combined with MVT settings.
            </summary>
            <param name="pageInfo">PageInfo object</param>
            <param name="templateInstance">Page template instance</param>
            <param name="combinationId">The combination id. -1:use combination from cookie, 0:use original page, 1..:use a specific combination</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetMVTestCombinationName(System.String,System.String,System.String,System.Object)">
            <summary>
            Returns combination name with dependance on test name and site name
            </summary>
            <param name="testName">MVT name</param>
            <param name="siteName">MVT site</param>
            <param name="culture">Required culture code</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingEnsureDefaultCombination(System.Int32)">
            <summary>
            Creates the default combination for a given page template (The default combination contains original versions of the page template webparts).
            </summary>
            <param name="pageTemplateId">The page template id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingSaveMVTVariant(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.Guid,System.Int32,System.Int32,System.Object)">
            <summary>
            Saves MVT variant.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicatesd whether the variant is enabled</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The web part instance GUID (Guid.Empy for zone variant)</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingSaveMVTVariantWebParts(System.Int32,System.Object)">
            <summary>
            Saves mvt variant properties.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingUpdateMVTWebPartVariant(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates zoneID of the selected web part instance.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingRemoveMVTWebPartVariants(System.Collections.ArrayList)">
            <summary>
            Removes all web part variants and their combinations.
            </summary>
            <param name="webParts">Array of the web part instances</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingResetMVTWidgetZone(System.String,System.Int32,System.Int32)">
            <summary>
            Removes all widget variants and their combinations.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingClearVariantCombinationHashTables">
            <summary>
            Clear MVT variants and combinations hashtables.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingCloneTemplateMVTVariants(System.Int32,System.Int32)">
            <summary>
            Clone all the MVT variants and their combinations of the specific page template
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingLoadContentPersonalizationVariants(System.Object,System.Boolean)">
            <summary>
            Loads the Content personalization variants for the specified instance (web part/zone/widget).
            </summary>
            <param name="instance">The instance</param>
            <param name="isZone">Indicates if the parameter instance object is a zone</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingCombineWithContentPersonalization(System.Object,System.Object,System.Object)">
            <summary>
            Returns template instance combined with the content personalization settings applied.
            </summary>
            <param name="pageInfo">Page info object</param>
            <param name="templateInstance">The template instance</param>
            <param name="viewMode">The view mode</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetContentPersonalizationVariants(System.Int32,System.String,System.Guid,System.Int32)">
            <summary>
            Gets all content personalization variants of a webpart (instanceGuid + zoneId) or zone (zoneId) for the template (templateId).
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGUID">The web part instance GUID</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingSaveContentPersonalizationVariant(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Guid,System.Int32,System.Int32,System.Object)">
            <summary>
            Saves content personalization variant.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="variantName">Name of the variant</param>
            <param name="variantDisplayName">Display name of the variant</param>
            <param name="variantDescription">The variant description</param>
            <param name="variantEnabled">Indicatesd whether the variant is enabled</param>
            <param name="variantCondition">The variant condition</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The web part instance GUID (Guid.Empy for zone variant)</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingSaveContentPersonalizationVariantWebParts(System.Int32,System.Object)">
            <summary>
            Saves content personalization variant properties.
            </summary>
            <param name="variantId">The variant id</param>
            <param name="xmlWebParts">Web parts xml</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingUpdateContentPersonalizationWebPartVariant(System.Int32,System.String,System.Guid,System.String)">
            <summary>
            Updates zoneID of the selected web part instance.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="zoneId">The zone id</param>
            <param name="instanceGuid">The instance GUID</param>
            <param name="newZoneId">The new zone id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingRemoveContentPersonalizationWebPartVariants(System.Collections.ArrayList)">
            <summary>
            Removes all web part variants and their combinations.
            </summary>
            <param name="webParts">Array of the web part instances</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingResetContentPersonalizationWidgetZone(System.String,System.Int32,System.Int32)">
            <summary>
            Removes all widget variants and their combinations.
            </summary>
            <param name="zoneId">The zone id</param>
            <param name="pageTemplateId">The page template id</param>
            <param name="documentId">The document id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetContentPersonalizationVariantId(System.Int32,System.String)">
            <summary>
            Returns the Content personalization variant id for the specified template and code name.
            </summary>
            <param name="pageTemplateId">The page template id</param>
            <param name="variantCodeName">The variant code name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingCloneTemplateContentPersonalizationVariants(System.Int32,System.Int32)">
            <summary>
            Clone all the Content personalization variants of the specific page template.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingProcessActivityRecord(System.Collections.Generic.List{System.String},System.DateTime)">
            <summary>
            Stores activity records from temporary file to DB
            </summary>
            <param name="records">List of all records from temporary file</param>
            <param name="logTime">Log time</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingUpdateContactFromExternalData(System.Object,System.Int32)">
            <summary>
            Updates contact information from  various sources (bizform record, user, customer, subscriber) - this requires fields
            of the source object to be mapped to contact. 
            </summary>
            <param name="source">Source object</param>
            <param name="contactId">Contact ID of contact to be updated</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingUpdateContactFromExternalData(System.Object,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Updates contact information from  various sources (bizform record, user, customer, subscriber) - this requires fields
            of the source object to be mapped to contact.
            </summary>
            <param name="source">Source object</param>
            <param name="allowOverwrite">If TRUE existing contact data can be overwritten, if FALSE only empty properties
            can be filled, if null flag will be get from data class info</param>
            <param name="contactId">Contact ID of contact to be updated</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetCurrentContactID">
            <summary>
            Returns current contact ID.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingSetCurrentContact(System.Int32)">
            <summary>
            Sets contact defined by ID as current contact - used in newsletter link tracking.
            </summary>
            <param name="contactId">Contact ID of contact to be set as current</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingCreateNewContact(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new contact and assignes given member.
            </summary>
            <param name="firstName">Contact first name</param>
            <param name="lastName">Contact last name</param>
            <param name="email">E-mail address</param>
            <param name="siteId">Site ID</param>
            <param name="relatedId">Related ID</param>
            <param name="type">Type of member (user, subscriber, customer)</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetUserLoginContactID(System.Object)">
            <summary>
            Returns contact ID for specified user info.
            </summary>
            <param name="userInfo">User info</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingUpdateContactInformation(System.String)">
            <summary>
            Updates contact information - IP and User Agent for current user.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetContactGroupName(System.Int32)">
            <summary>
            Returns display name of the contact group specified by its ID.
            </summary>
            <param name="contactGroupId">Contact group ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetContactGroupMemberIDs(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets all (or top N) contact IDs in a given contact group for newsletters.
            If bounced e-mail monitoring is enabled, only contacts that have less bounces then bounce limit are returned.
            </summary>
            <param name="contactGroupId">Contact group ID</param>
            <param name="topN">Top N</param>
            <param name="lastMemberId">Contacts with higher IDs will be returned</param>
            <param name="monitoringEnabled">Indicates if bounced e-mail monitoring is enabled</param>
            <param name="bounceLimit">Bounce e-mail limit</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingGetContactForNewsletters(System.Int32,System.String)">
            <summary>
            Returns dataset with basic data of a contact specified by ID.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="columns">Columns to be returned</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingRecalculateScores(System.String,System.Int32,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Recalculate scores for the given item name and rule type (and contact if contact ID is specified).
            </summary>
            <param name="itemName">Item name (attribute name, activity name)</param>
            <param name="ruleType">Rule type (0 = activity,  1 = attribute)</param>
            <param name="contactId">ContactID (optional)</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingActivityForAllGroups(System.String[])">
            <summary>
            Evaluates all contact group conditions and assignes contact to those which conditions are met.
            Doesn't run in separate thread as it is called from task for processing activities.
            InvalidateCache method must be called after all activities are processed.
            </summary>
            <param name="values">Values which were used to create activity</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingInvalidateCache">
            <summary>
            Invalidates contacts which were used in last mass operation. Must be deleted after every mass 
            operation to prevend difference between DB and cache.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingSetContactBounces(System.Int32,System.Int32)">
            <summary>
            Sets the bounced e-mails counter to specified value for a contact.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="bounces">Number of bounced emails of the contact</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingAddContactBounce(System.Int32)">
            <summary>
            Incerements number of bounces by one for specified contact.
            </summary>
            <param name="contactId">Contact ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingAddContactBounceByEmail(System.String)">
            <summary>
            Increments number of bounces by one for all contacts with specified email address across all sites.
            </summary>
            <param name="email">Email address</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingLogLandingPage(System.Int32)">
            <summary>
            Logs landing page as activity.
            </summary>
            <param name="contactId">Contact ID. Optional.</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingLogExternalSearch(System.Int32)">
            <summary>
            Logs external page as activity.
            </summary>
            <param name="contactId">Contact ID. Optional.</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingLogPageVisit(System.Int32)">
            <summary>
            Logs page visit as activity.
            </summary>
            <param name="contactId">Contact ID. Optional.</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingLogLogin(System.Object)">
            <summary>
            Logs login activity.
            </summary>
            <param name="userInfo">User info</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingLastActivityOfType(System.Int32,System.String)">
            <summary>
            Returns contact's last activity of specified activity type.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="activityType">Activity type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingFirstActivityOfType(System.Int32,System.String)">
            <summary>
            Returns contact's first activity of specified activity type.
            </summary>
            <param name="contactId">Contact ID</param>
            <param name="activityType">Activity type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.OnlineMarketingMapAddress(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Updates current contact's address.
            </summary>
            <param name="address">Shipping or billing address</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.WebFarmClearHashTables(System.Boolean)">
            <summary>
            Clears WebFarm server hash tables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.WebFarmNotifyServer(System.Int32)">
            <summary>
            Notifies a WebFarm server about new web farm synchronization tasks.
            </summary>
            <param name="serverId">The server id</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.WebFarmNotifyServer(System.String)">
            <summary>
            Notifies a web farm server about a new task.
            </summary>
            <param name="notificationPath">Notification path in UNC format. Use WebSyncHelperClass.GetNotificationPath(string serverPhysicalPath) method to get default system notification path.</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.SynchronizationProcessTask(CMS.SettingsProvider.OperationTypeEnum,CMS.SettingsProvider.TaskTypeEnum,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Processes the given task.
            </summary>
            <param name="operationType">Operation type</param>
            <param name="taskType">Type of the task</param>
            <param name="taskObjectType">Task object type</param>
            <param name="taskData">Document data for the synchronization task</param>
            <param name="taskBinaryData">Binary data for the synchronization task</param>
            <param name="processChilds">Process child objects</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.SynchronizationInvalidateConnectors">
            <summary>
            Invalidates collections with connectors and subscription.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.RemoveObjectVersions(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Remove object and child objects versions
            </summary>
            <param name="infoObj">Object which version should be deleted</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.LogRegisteredUser(System.String,System.Object)">
            <summary>
            Logs registered user to the statistics.
            </summary>
            <param name="siteName">Site name</param>
            <param name="userInfo">UserInfo of registered user - username and userid of user is logged</param>   
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.LogOnSiteKeywords(System.String,System.String,System.String)">
            <summary>
            Logs onsite search keywords.
            </summary>
            <param name="siteName">Site name</param>
            <param name="culture">Culture</param>
            <param name="keywords">Keywords to log</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.TrackRegisteredUserConversion(System.String,System.String,System.Object)">
            <summary>
            Tracks registered user conversion.
            </summary>
            <param name="trackConversionName">Conversion name</param>
            <param name="siteName">Site name</param>
            <param name="userInfo">Registered user</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.TrackRegisteredUserConversion(System.String,System.Double,System.String,System.Object)">
            <summary>
            Tracks register user conversion
            </summary>
            <param name="trackConversionName">Conversion name</param>
            <param name="conversionValue">Tracked conversion value</param>
            <param name="siteName">Site name</param>
            <param name="userInfo">Registered user info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.UrlRewritingRefreshRoutes(System.Object)">
            <summary>
            Refreshes the route for the given document
            </summary>
            <param name="treeNode">Tree node</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleCommands.UrlRewritingRefreshAliasRoutes(System.Int32,System.String)">
            <summary>
            Refreshes the route for the given document aliases
            </summary>
            <param name="nodeId">Node ID</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.SettingsProvider.ModuleEntry">
            <summary>
            Abstract module class.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.CONTENT">
            <summary>
            Content.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.EVENTLOG">
            <summary>
            Event log.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.EMAIL">
            <summary>
            Emails.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.PORTALENGINE">
            <summary>
            Portal engine.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.CMSHELPER">
            <summary>
            CMSHelper.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.CATEGORIES">
            <summary>
            Categories.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.BLOGS">
            <summary>
            Blogs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.ECOMMERCE">
            <summary>
            Ecommerce.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.EVENTMANAGER">
            <summary>
            Event manager.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.FORUMS">
            <summary>
            Forums.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.FRIENDS">
            <summary>
            Friends.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.MESSAGEBOARD">
            <summary>
            Message board.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.MESSAGING">
            <summary>
            Messaging.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.NEWSLETTER">
            <summary>
            Newsletter.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.NOTIFICATIONS">
            <summary>
            Notifications.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.POLLS">
            <summary>
            Polls.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.PERMISSIONS">
            <summary>
            Permissions.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.REPORTING">
            <summary>
            Reporting.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.SYNCHRONIZATION">
            <summary>
            Staging.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.UIPERSONALIZATION">
            <summary>
            UI Personalization.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.WEBANALYTICS">
            <summary>
            Web analytics.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.SITE">
            <summary>
            Site.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.WEBFARMSYNC">
            <summary>
            Web farm sync.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.COMMUNITY">
            <summary>
            Community.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.MEDIALIBRARY">
            <summary>
            Media library.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.BIZFORM">
            <summary>
            Biz Forms.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.GROUPS">
            <summary>
            Groups.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.TREEENGINE">
            <summary>
            Tree engine.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.WORKFLOWENGINE">
            <summary>
            Workflow engine.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.FORMENGINE">
            <summary>
            Form engine.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.SCHEDULER">
            <summary>
            Scheduler.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.SETTINGSPROVIDER">
            <summary>
            Settings provider.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.FILEMANAGER">
            <summary>
            File manager.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.RESOURCEMANAGER">
            <summary>
            Resource manager.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.LICENSE">
            <summary>
            Licenses.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.DATAENGINE">
            <summary>
            Data engine.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.ONLINEMARKETING">
            <summary>
            Online marketing.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.WEBDAV">
            <summary>
            WebDAV.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.PROJECTMANAGEMENT">
            <summary>
            Project Management.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.IMPORTEXPORT">
            <summary>
            Import/export module.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.URLREWRITING">
            <summary>
            URL rewriting module.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.FILEIMPORT">
            <summary>
            File import module
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.mEmpty">
            <summary>
            Empty module entry.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.mModules">
            <summary>
            Table of modules [Name.ToLower()] -> [AbstractModule]
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.mModuleList">
            <summary>
            List of modules (ModuleInfo).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.mAllContexts">
            <summary>
            List of all the contexts.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.mModuleInfo">
            <summary>
            Module info.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ModuleEntry.mContexts">
            <summary>
            Module contexts.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.Init">
            <summary>
            Initializes the module.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetValue(System.String)">
            <summary>
            Gets the specified value from the module.
            </summary>
            <param name="name">Value name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.SetValue(System.String,System.Object)">
            <summary>
            Sets the specified value of a module.
            </summary>
            <param name="name">Value name</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.ProcessCommand(System.String,System.Object[])">
            <summary>
            Processes the specified command.
            </summary>
            <param name="commandName">Command name</param>
            <param name="parameters">Command parameters</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.CheckLicense(System.String,CMS.SettingsProvider.FeatureEnum,CMS.SettingsProvider.VersionActionEnum)">
            <summary>
            Checks the license.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature</param>
            <param name="action">Action</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetContexts">
            <summary>
            Returns the hashtable of the module contexts. [name.ToLower()] -> [AbstractContext]
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetContext(System.String)">
            <summary>
            Gets the context with the given name, name must be lowercase.
            </summary>
            <param name="name">Gets the</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetModuleValue(System.String,System.String)">
            <summary>
            Gets the specified value from the module.
            </summary>
            <param name="moduleName">Module name</param>
            <param name="name">Value name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.SetModuleValue(System.String,System.String,System.Object)">
            <summary>
            Sets the specified value of a module.
            </summary>
            <param name="moduleName">Module name</param>
            <param name="name">Value name</param>
            <param name="newValue">New value</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.ProcessModuleCommand(System.String,System.String,System.Object[])">
            <summary>
            Processes the specified command.
            </summary>
            <param name="moduleName">Module name</param>
            <param name="commandName">Command name</param>
            <param name="parameters">Command parameters</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.CheckModuleLicense(System.String,System.String,CMS.SettingsProvider.FeatureEnum,CMS.SettingsProvider.VersionActionEnum)">
            <summary>
            Processes the specified command.
            </summary>
            <param name="moduleName">Module name</param>
            <param name="domain">Domain name</param>
            <param name="feature">Feature</param>
            <param name="action">Action</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.RegisterModule(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Registers the given module.
            </summary>
            <param name="name">Module name</param>
            <param name="assemblyName">Assembly name</param>
            <param name="moduleClassName">Module class name</param>
            <param name="loadEntry">True if the module entry should be loaded</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.RegisterDefaultModules">
            <summary>
            Registers the default modules.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetModuleInfo(System.String)">
            <summary>
            Gets the info for specified module.
            </summary>
            <param name="name">Module name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetModuleEntry(System.String)">
            <summary>
            Gets the module entry for specified module.
            </summary>
            <param name="name">Module name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetModuleContext(System.String)">
            <summary>
            Gets the module context.
            </summary>
            <param name="name">Context name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.IsModuleRegistered(System.String)">
            <summary>
            Indicates if the module is registered.
            </summary>
            <param name="name">Module name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.IsModuleLoaded(System.String)">
            <summary>
            Indicates if the module is loaded.
            </summary>
            <param name="name">Module name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.ClearAllHashtables(System.Boolean)">
            <summary>
            Clears all the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleEntry.GetContextProperty(System.String,System.String)">
            <summary>
            Gets the value of context property.
            </summary>
            <param name="name">Context name</param>
            <param name="propertyName">Property name</param>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleEntry.Empty">
            <summary>
            Empty module entry.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleEntry.ModuleInfo">
            <summary>
            Module info.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleEntry.Contexts">
            <summary>
            List of module contexts.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleEntry.Modules">
            <summary>
            Returns list of modules.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ModuleInfo">
            <summary>
            Module info.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Module name</param>
            <param name="assemblyName">Assembly name or path to the module directory, e.g. CMSModules\BizForms\Tools</param>
            <param name="moduleClassName">Module class name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ModuleInfo.LoadModule">
            <summary>
            Loads the module.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleInfo.Name">
            <summary>
            Module name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleInfo.AssemblyName">
            <summary>
            Assembly name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleInfo.ModuleClassName">
            <summary>
            Module entry point class name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleInfo.ErrorMessage">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ModuleInfo.Module">
            <summary>
            Module object.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DataClassInfo">
            <summary>
            Describes Data Class configuration.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfo.mTYPEINFO">
            <summary>
            Type information for class.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfo.mTYPEINFOSYSTEMTABLE">
            <summary>
            Type information for system table.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfo.mTYPEINFODOCUMENTTYPE">
            <summary>
            Type information for document type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfo.mTYPEINFOCUSTOMTABLE">
            <summary>
            Type information for custom tables.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfo.mSchemaDataSet">
            <summary>
            Source schema dataset.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.GetChildObject(System.String)">
            <summary>
            Gets child object info
            </summary>
            <param name="objectType">Child object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.GetChildWhereCondition(System.String,System.String)">
            <summary>
            Gets the child object where condition.
            </summary>
            <param name="where">Original where condition</param>
            <param name="objectType">Object type of the child object</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.#ctor">
            <summary>
            Constructor, creates an empty DataClassInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.#ctor(System.Object[])">
            <summary>
            Constructor, creates the DataClassInfo object from the given data array of values.
            </summary>
            <param name="fields">Array with the field values</param>
            <remarks>The order of the fields must appear exactly as it appears in the database table</remarks>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates the DataClassInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.#ctor(CMS.SettingsProvider.DataClassInfo)">
            <summary>
            Constructor, creates the DataClassInfo object from the given DataClass info.
            </summary>
            <param name="ci">Source DataClassInfo object</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.LoadFromDataRow(System.Data.DataRow)">
            <summary>
            Loads the object data from given DataRow.
            </summary>
            <param name="dr">Datarow with the data</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.LoadFromArray(System.Object[])">
            <summary>
            Loads the object data from given data reader (current reader record).
            </summary>
            <param name="fields">Field array with the data</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.GetSKUMappings">
            <summary>
            Gets the mappings string.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.GetDataSet">
            <summary>
            Returns an empty DataSet created by the class schema.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the object value.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.TYPEINFO">
            <summary>
            Type information for class.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.TYPEINFOSYSTEMTABLE">
            <summary>
            Type information for system table.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.TYPEINFODOCUMENTTYPE">
            <summary>
            Type information for document type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.TYPEINFOCUSTOMTABLE">
            <summary>
            Type information for custom tables.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSearchEnabled">
            <summary>
            Gets or sets the value that indicates whether object is available for smart search indexing.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.SKUMappings">
            <summary>
            SKU mappings.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassShowTemplateSelection">
            <summary>
            Class show template selection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassID">
            <summary>
            Class ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassDisplayName">
            <summary>
            Class ClassDisplay name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassUsesVersioning">
            <summary>
            Class ClassUses versioning.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassIsDocumentType">
            <summary>
            Is a document type class.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassIsCoupledClass">
            <summary>
            Is a coupled class.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassXmlSchema">
            <summary>
            ClassXml Schema of the data.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassFormDefinition">
            <summary>
            ClassForm definition data.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassEditingPageURL">
            <summary>
            URL of the class document editing page.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassNewPageURL">
            <summary>
            URL of the class document New page.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassListPageURL">
            <summary>
            URL of the class document ClassList page.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassNodeNameSource">
            <summary>
            Source column for the document name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassTableName">
            <summary>
            Class ClassTable name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassViewPageUrl">
            <summary>
            Class view page url.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassPreviewPageUrl">
            <summary>
            Class preview page url.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassFormLayout">
            <summary>
            Form layout.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassShowAsSystemTable">
            <summary>
            Class show as system table.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassUsePublishFromTo">
            <summary>
            Class use publish from/to
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassIsMenuItemType">
            <summary>
            Class is menu item type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassIsProduct">
            <summary>
            Class is product type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassIsCustomTable">
            <summary>
            Class is custom table.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassShowColumns">
            <summary>
            Gets or sets custom table columns for displaying.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassNodeAliasSource">
            <summary>
            Source column for the document Alias.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassDefaultPageTemplateID">
            <summary>
            Default page template ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSKUDefaultDepartmentID">
            <summary>
            Class SKU default department id.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSKUDefaultDepartmentName">
            <summary>
            Class SKU default department code name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassLastModified">
            <summary>
            Class last modified time.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassGUID">
            <summary>
            Class GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassCreateSKU">
            <summary>
            Indicates whether product should be automatically created when new class is created.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassLoadGeneration">
            <summary>
            Load generation of the class.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.SchemaDataSet">
            <summary>
            Schema dataset.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSearchTitleColumn">
            <summary>
            Default document name/postsubject.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSearchContentColumn">
            <summary>
            Content search column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSearchImageColumn">
            <summary>
            Image search column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSearchCreationDateColumn">
            <summary>
            Creation date search column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSearchSettingsInfos">
            <summary>
            Gets the SearchSettings infos object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSearchSettings">
            <summary>
            Search settings.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassInheritsFromClassID">
            <summary>
            Class ID from which the class inherits the field settings.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassContactMapping">
            <summary>
            Mapping of an object fields to contact fields (object of Contact Management).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassContactOverwriteEnabled">
            <summary>
            Indicates if overwriting of existing contact information with submitted data is allowed. If false, only empty values of a contact can be filled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ClassSKUDefaultProductType">
            <summary>
            Class SKU default product type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataClassInfo.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DataClassInfoProvider">
            <summary>
            Provides access to data class information.
            </summary>    
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfoProvider.ALL_CLASSNAMES">
            <summary>
            Suplementary constant to specify all class names.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfoProvider.ZERO_TIME">
            <summary>
            Zero time constant.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfoProvider.infos">
            <summary>
            Collection of all the class infos.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfoProvider.mClassNames">
            <summary>
            Table of resolved class names [classNames -> resolved]
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetDataClass(System.String)">
            <summary>
            Returns a DataClassInfo object representing the configuration of data class of the given name.
            </summary>
            <param name="className">Full code name in format cms.article</param>
            <returns>DataClassInfo object. Null if the data class of the given name doesn't exist.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetDataClass(System.Int32)">
            <summary>
            Returns the DataClassInfo object with specified Id.
            </summary>
            <param name="classId">Class ID to retrieve</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetDataClassFromDB(System.String)">
            <summary>
            Returns from DB a DataClassInfo object representing the configuration of data class of the given name.
            </summary>
            <param name="className">Full code name in format cms.article</param>
            <returns>DataClassInfo object. Null if the data class of the given name doesn't exist.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetDataClassFromDB(System.Int32)">
            <summary>
            Returns from DB a DataClassInfo object representing the configuration of data class of the given ID.
            </summary>
            <param name="classId">Class ID</param>
            <returns>DataClassInfo object. Null if the data class object doesn't exist.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetAllClasses">
            <summary>
            Returns dataset with all data classes.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetAllChildClasses(System.Int32)">
            <summary>
            Returns dataset with all data classes which are child classes of the given class.
            </summary>
            <param name="classId">ID of the parent class</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetAllDataClass">
            <summary>
            Returns dataset with informations about all document data types from all sites.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.SetDataClass(CMS.SettingsProvider.DataClassInfo)">
            <summary>
            Saves give data class information to the database.
            </summary>
            <param name="infoObj">DataClassInfo object</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Check dependencies for document type, return true if something is depend.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.DeleteDataClass(System.String)">
            <summary>
            Deletes the specified Data Class.
            </summary>
            <param name="className">Class name to delete</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.DeleteDataClass(CMS.SettingsProvider.DataClassInfo)">
            <summary>
            Deletes the specified Data Class.
            </summary>
            <param name="infoObj">Class object</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.DeleteDataClass(System.Int32)">
            <summary>
            Deletes the specified Data Class.
            </summary>
            <param name="classId">Class id</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.LoadGenerationReader(System.Int32)">
            <summary>
            Loads the specified generation of the objects.
            </summary>
            <param name="generation">Generation to load</param>
            <returns>Returns true if the generation was not empty</returns>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.LoadGeneration(System.Int32)">
            <summary>
            Loads the specified generation of the objects.
            </summary>
            <param name="generation">Generation to load</param>
            <returns>Returns true if the generation was not empty</returns>
        </member>
        <member name="F:CMS.SettingsProvider.DataClassInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.LoadInfos">
            <summary>
            Loads data class infos from database to memory.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetClassName(System.Int32)">
            <summary>
            Gets the specified DataClassName.
            </summary>
            <param name="classId">DataClassInfo property</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.ClearClassNames(System.Boolean)">
            <summary>
            Clears the class names resolving cache.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.LoadAllClasses">
            <summary>
            Loads all the classes into the hashtable.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetDataSet(System.String)">
            <summary>
            Gets an empty DataSet created by class XML schema.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetDocumentTypeClasses">
            <summary>
            Returns the document type classes DataSet.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetUniqueClassName(System.String)">
            <summary>
            Returns unique class name created from the given class name.
            </summary>
            <param name="className">Base class name</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetClassInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetClasses(System.String,System.String,System.String,System.Int32)">
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetClassesOnSite(System.Int32)">
            <summary>
            Gets dataset with IDs about DataClasses alowed for specified Site.
            </summary>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetAllowedChildClasses(System.Int32)">
            <summary>
            Returns the dataset containing the allowed child classes for the given class.
            </summary>
            <param name="parentClassId">Parent class ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetAllowedChildClasses(System.Int32,System.Int32)">
            <summary>
            Returns the dataset containing the allowed child classes for the given class and site.
            </summary>
            <param name="parentClassId">Parent class ID</param>
            <param name="siteId">Site ID of the parent site</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetAllowedChildClasses(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Returns the dataset containing the allowed child classes for the given class and site.
            </summary>
            <param name="parentClassId">Parent class ID</param>
            <param name="siteId">Site ID of the parent site</param>
            <param name="columns">Limit result to specific columns</param>
            <param name="topN">Top N records to fetch</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetCustomTableClasses">
            <summary>
            Returns the dataset containing custom tables classes.
            </summary>        
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetCustomTableClasses(System.String)">
            <summary>
            Returns the dataset containing custom tables classes.
            </summary>        
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetCustomTableClasses(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the dataset containing custom tables classes.
            </summary>        
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select top N rows</param>
            <param name="columns">Select only specified columns</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetCustomTableClasses(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the dataset containing custom tables classes.
            </summary>        
            <param name="siteId">ID of site</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Select top N rows</param>
            <param name="columns">Select only specified columns</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetCustomTableClasses(System.Int32)">
            <summary>
            Returns the dataset containing custom tables classes allowed in site.
            </summary>     
            <param name="siteId">Site id</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetClassNames(System.String)">
            <summary>
            Resolves the document type classes, if the input value is constant TreeProvider.ALL_CLASSES, returns all class names used on any site, otherwise resolves * as a wildcard in class name to get all matching. Supports the list of classes separated by semicolon.
            </summary>
            <param name="classNames">Class names value</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetClassNames(System.String,System.String)">
            <summary>
            Resolves the document type classes, if the input value is constant TreeProvider.ALL_CLASSES, returns all class names used on any site, otherwise resolves * as a wildcard in class name to get all matching. Supports the list of classes separated by semicolon.
            </summary>
            <param name="siteName">Site name</param>
            <param name="classNames">Class names value</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetTableName(CMS.SettingsProvider.GeneralizedInfo)">
            <summary>
            Gets the table name of specified info object.
            </summary>
            <param name="infoObj">Info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetClassSite(System.Int32,System.Int32)">
            <summary>
            Gets dataset of the specified Class and Site from CMS_ClassSite table.
            </summary>
            <param name="classId">ClassID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.IsChildClassAllowed(System.Int32,System.Int32)">
            <summary>
            Returns true if child class is allowed within given parent class.
            </summary>
            <param name="parentClassId">Parent class ID</param>
            <param name="childClassId">Child class ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataClassInfoProvider.GetChildClass(System.Int32,System.Int32)">
            <summary>
            Gets dataset of the specified Parent and Child Class from CMS_AllowedChildClasses table.
            </summary>
            <param name="parentClassId">Parent ClassID</param>
            <param name="childClassId">Child ClassID</param>
        </member>
        <member name="T:CMS.SettingsProvider.DataConnectionFactory">
            <summary>
            Provides DataConnection object for specified data provider according to configuration settings.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataConnectionFactory.mProviderObject">
            <summary>
            Data provider object instance.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataConnectionFactory.mGeneratorObject">
            <summary>
            SQL generator object instance.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataConnectionFactory.mTableManagerObject">
            <summary>
            Table manager object instance.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataConnectionFactory.mProviderAssemblyName">
            <summary>
            Provider assembly name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.DataConnectionFactory.mDefaultDataProvider">
            <summary>
            If true, default data provider is used.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataConnectionFactory.GetConnection">
            <summary>
            Returns a new database connection.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.DataConnectionFactory.GetConnection(System.String)">
            <summary>
            Returns a new database connection.
            </summary>
            <param name="connectionString">Connection string</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataConnectionFactory.GetNativeConnection(System.String)">
            <summary>
            Returns a new database connection.
            </summary>
            <param name="connectionString">Connection string</param>
        </member>
        <member name="M:CMS.SettingsProvider.DataConnectionFactory.ProcessCommand(System.String,System.Object[])">
            <summary>
            Sends the specific command with arguments to the provider.
            </summary>
            <param name="commandName">Command name</param>
            <param name="commandArguments">Command arguments (parameters)</param>
        </member>
        <member name="E:CMS.SettingsProvider.DataConnectionFactory.OnGetConnection">
            <summary>
            Event raised when the connection is required. Returns the connection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataConnectionFactory.DefaultDataProvider">
            <summary>
            If true, default data provider is used.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataConnectionFactory.ProviderAssemblyName">
            <summary>
            Custom Provider library assembly.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataConnectionFactory.ProviderObject">
            <summary>
            Returns the provider object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataConnectionFactory.GeneratorObject">
            <summary>
            Returns the SQL generator object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataConnectionFactory.TableManagerObject">
            <summary>
            Returns the Table manager object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataConnectionFactory.ConnectionString">
            <summary>
            Returns the connection string.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.DataConnectionFactory.CurrentConnection">
            <summary>
            Current DB connection to use within current connection scope.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.DataConnectionFactory.GetConnectionEventHandler">
            <summary>
            Gets connection method delegate.
            </summary>
            <param name="connectionString">Connection string</param>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectTypeTreeNode">
            <summary>
            Class for parsing XML tree with staging objects.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectTypeTreeNode.#ctor(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Constructor which loads current node and all sub-nodes.
            </summary>
            <param name="node">XML node</param>
            <param name="parentSiteValue">Bool value which will be used if site parameter doesn't exist in XML node</param>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectTypeTreeNode.GetObjectTypes(System.Boolean)">
            <summary>
            Returns all object types of given node or child tree separated by semicolon.
            </summary>
            <param name="childNodes">Indicates if child object types should be included</param>
            <returns>String of object types separated by semicolon</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ObjectTypeTreeNode.FindNode(System.String,System.Boolean)">
            <summary>
            Find the node with matching object type.
            </summary>
            <param name="objectType">Object type to find</param>
            <param name="siteNode">Site node</param>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.ParentNode">
            <summary>
            Parent node of actual node.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.ChildNodes">
            <summary>
            List of child nodes of actual node.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.Group">
            <summary>
            Group where belongs actual node.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.ObjectType">
            <summary>
            Object type of actual node.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.Module">
            <summary>
            Module where belongs actual node.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.Site">
            <summary>
            Indicates if actual node belongs to site.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.Expand">
            <summary>
            Indicates if actual node is expanded.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.Main">
            <summary>
            Indicates if actual node is main.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ObjectTypeTreeNode.Active">
            <summary>
            Indicates if actual node is Active.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ObjectTypeTreeNode.OnBeforeCreateNodeHandler">
            <summary>
            Delegate for handling the OnBeforeCreate action of the tree node.
            </summary>
            <param name="source">Source node</param>
        </member>
        <member name="T:CMS.SettingsProvider.PredefinedObjectType">
            <summary>
            Predefined object type constants.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.RESOURCESTRING">
            <summary>
            Code name for resource string.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PAGETEMPLATE">
            <summary>
            Code name for page templates.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PAGETEMPLATESITE">
            <summary>
            Page template site binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PAGELAYOUT">
            <summary>
            Code name for page layout.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PAGETEMPLATESCOPE">
            <summary>
            Code name for page template scope.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PAGETEMPLATECATEGORY">
            <summary>
            Page templates category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WEBPART">
            <summary>
            Code name for webparts.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WEBPARTCATEGORY">
            <summary>
            Code name for webpart categories.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WEBPARTLAYOUT">
            <summary>
            Code name for webpart layouts.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WEBPARTCONTAINER">
            <summary>
            Code name for webpart containers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WEBPARTCONTAINERSITE">
            <summary>
            Web part container site.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WIDGET">
            <summary>
            Code name for widgets.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WIDGETCATEGORY">
            <summary>
            Code name for widget categories.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WIDGETROLE">
            <summary>
            Code name for widget role.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PERSONALIZATION">
            <summary>
            Code name for personalization.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.DASHBOARD">
            <summary>
            Code name for dashboard.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SITE">
            <summary>
            Code name for sites.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.USER">
            <summary>
            Code name for users;.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PERMISSION">
            <summary>
            Code name for permissions.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.UIELEMENT">
            <summary>
            Code name for UI Element.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CATEGORY">
            <summary>
            Code name for document global category.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.USERCULTURE">
            <summary>
            User culture binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.RESOURCE">
            <summary>
            Code name for resources.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.OPENIDUSER">
            <summary>
            OpenID User codename.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.METAFILE">
            <summary>
            Code name for meta files.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SEARCHINDEX">
            <summary>
            Code name of search index.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ROLE">
            <summary>
            Code name for roles.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WEBTEMPLATE">
            <summary>
            Code name for web templates.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CUSTOM_TABLE_ITEM_PREFIX">
            <summary>
            Custom table item prefix for object type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BIZFORM_ITEM_PREFIX">
            <summary>
            BizFrom item prefix for object type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.DOCUMENT">
            <summary>
            Document.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.DOCUMENTTAG">
            <summary>
            Document tag.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.DOCUMENTCATEGORY">
            <summary>
            Document-category relationship.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NODE">
            <summary>
            Node.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CONTACTLIST">
            <summary>
            Code name for contact list.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.IGNORELIST">
            <summary>
            Code name for ignore list.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.FORUMGROUP">
            <summary>
            Code name for forum groups.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.FORUM">
            <summary>
            Code name for forums.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.FORUMROLE">
            <summary>
            Forum role binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.FORUMMODERATOR">
            <summary>
            Forum moderator.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.FORUMUSERFAVORITES">
            <summary>
            Code name for forum user favorites.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.FORUMATTACHMENT">
            <summary>
            Code name for forum attachment.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.FORUMPOST">
            <summary>
            Code name for forum posts.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MEDIALIBRARY">
            <summary>
            Code name for media library.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MEDIAFILE">
            <summary>
            Code name for media file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MEDIAFOLDER">
            <summary>
            Code name for media file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MEDIALIBRARYROLEPERMISSION">
            <summary>
            Code name for library role permission.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BIZFORM">
            <summary>
            Code name for BizForms.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BIZFORMROLE">
            <summary>
            BizForm role binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ALTERNATIVEFORM">
            <summary>
            Alternative form constant.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BADGE">
            <summary>
            Code name for badges.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.GROUP">
            <summary>
            Code name for general group.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.FRIEND">
            <summary>
            Code name for friends.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.GROUPMEMBER">
            <summary>
            Code name of group members.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.INVITATION">
            <summary>
            Code name for invitations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.GROUPROLEPERMISSION">
            <summary>
            Code name for group/role/permission.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BOARD">
            <summary>
            Code name for message board boards.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BOARDMODERATOR">
            <summary>
            Code name for board moderator.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BOARDROLE">
            <summary>
            Code name for message board roles.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BOARDMESSAGE">
            <summary>
            Code name for board message.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NEWSLETTERISSUE">
            <summary>
            Code name for newsletter issues.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NEWSLETTER">
            <summary>
            Code name for newsletters.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NEWSLETTEROPENEDEMAIL">
            <summary>
            Subscriber - issue binding used for tracking of opened emails.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NEWSLETTERSUBSCRIBER">
            <summary>
            Code name for newsletter subscribers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NEWSLETTERUSERSUBSCRIBER">
            <summary>
            Code name for newsletter user specific subscribers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NEWSLETTERROLESUBSCRIBER">
            <summary>
            Code name for newsletter role specific subscribers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NEWSLETTERTEMPLATE">
            <summary>
            Code name for newsletter email templates.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NEWSLETTERLINK">
            <summary>
            Code name for newsletter links.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.POLL">
            <summary>
            Code name for polls.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.POLLROLE">
            <summary>
            Poll role binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.POLLSITE">
            <summary>
            Poll site binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NOTIFICATIONGATEWAY">
            <summary>
            Code name for notification gateway.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NOTIFICATIONTEMPLATE">
            <summary>
            Notification template code name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.NOTIFICATIONSUBSCRIPTION">
            <summary>
            Notification template code name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.EVENTATTENDEE">
            <summary>
            Code name for event attendees.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.REPORTCATEGORY">
            <summary>
            Code name for report categories.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.REPORT">
            <summary>
            Code name for reports.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.REPORTGRAPH">
            <summary>
            Code name for report graphs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.REPORTTABLE">
            <summary>
            Code name for report tables.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.REPORTVALUE">
            <summary>
            Code name for report values.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.REPORTSAVEDREPORT">
            <summary>
            Code name for report saved reports.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.REPORTSAVEDGRAPH">
            <summary>
            Code name for report saved graphs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BLOGCOMMENT">
            <summary>
            Blog comment.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BLOGPOSTSUBSCRIPTION">
            <summary>
            Blog post subscription.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SKU">
            <summary>
            Code name for SKUs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SKUFILE">
            <summary>
            Code name for SKU files.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.BUNDLE">
            <summary>
            Code name for bundles.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.USERDEPARTMENT">
            <summary>
            User department binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.DEPARTMENT">
            <summary>
            Code name for department.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SUPPLIER">
            <summary>
            Code name for ecommerce suppliers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MANUFACTURER">
            <summary>
            Code name for ecommerce manufacturer.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.OPTIONCATEGORY">
            <summary>
            Code name for option categories.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.TAXCLASS">
            <summary>
            Code name for tax classes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.DISCOUNTCOUPON">
            <summary>
            Code name for discount coupon.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.DISCOUNTLEVEL">
            <summary>
            Code name for discount level.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PUBLICSTATUS">
            <summary>
            Code name for public status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ORDERSTATUS">
            <summary>
            Code name for order status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.INTERNALSTATUS">
            <summary>
            Code name for internal status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CURRENCY">
            <summary>
            Code name for ecommerce currencies.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.EXCHANGETABLE">
            <summary>
            Code name for exchange table.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PAYMENTOPTION">
            <summary>
            Code name for payment options.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SHIPPINGOPTION">
            <summary>
            Code name for shipping option.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CUSTOMER">
            <summary>
            Code name for customers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ORDER">
            <summary>
            Code name for orders.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.EVENT">
            <summary>
            Code name for eventlog.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WORKFLOW">
            <summary>
            Code name for workflows.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WORKFLOWSCOPE">
            <summary>
            Code name for workflow scope.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WORKFLOWSTEP">
            <summary>
            Code name for workflow step.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WORKFLOWSTEPROLE">
            <summary>
            Workflow step role binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.WORKFLOWHISTORY">
            <summary>
            Code name for workflow history.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.VERSIONHISTORY">
            <summary>
            Code name for version history.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.VERSIONATTACHMENT">
            <summary>
            Version attachment binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ATTACHMENTHISTORY">
            <summary>
            Code name for attachment history.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ATTACHMENT">
            <summary>
            Code name for attachment info.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ABTEST">
            <summary>
            Code name for a/b test info.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MVTEST">
            <summary>
            Code name for MVT tests.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MVTCOMBINATION">
            <summary>
            Code name for MVT combinations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MVTVARIANT">
            <summary>
            Code name for MVT variants.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ACTIVITYTYPE">
            <summary>
            Code name for the activity type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CONTACT">
            <summary>
            Code name for the contact.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ACCOUNT">
            <summary>
            Code name for the account.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CONTACTGROUP">
            <summary>
            Code name for the contact group.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SCORE">
            <summary>
            Code name for the score.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SCORERULE">
            <summary>
            Code name for the score rule.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ACCOUNTSTATUS">
            <summary>
            Code name for account status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CONTACTSTATUS">
            <summary>
            Code name for contact status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CONTACTROLE">
            <summary>
            Code name for contact role.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CONTENTPERSONALIZATIONVARIANT">
            <summary>
            Code name for the content personalization variant.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MEMBERSHIPUSER">
            <summary>
            Code name for the membership - user.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MEMBERSHIPSUBSCRIBER">
            <summary>
            Code name for the membership - newsletter subscriber.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.MEMBERSHIPCUSTOMER">
            <summary>
            Code name for the membership - ecommerce customer.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PROJECT">
            <summary>
            Code name for Project.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PROJECTSTATUS">
            <summary>
            Code name for Project status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PROJECTTASK">
            <summary>
            Code name for Project task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PROJECTADHOCTASK">
            <summary>
            Code name for Ad-hoc task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PROJECTTASKPRIORITY">
            <summary>
            Code name for Task priority.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.PROJECTTASKSTATUS">
            <summary>
            Code name for Task status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.EMAILTEMPLATE">
            <summary>
            Code name for e-mail template.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.ATTACHMENTFOREMAIL">
            <summary>
            E-mail attachment binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SMTPSERVER">
            <summary>
            Code name for SMTP server.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SMTPSERVERSITE">
            <summary>
            SMTP server site binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.STATISTICS">
            <summary>
            Code name for statistics.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CONVERSION">
            <summary>
            Code name for conversion.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.CAMPAIGN">
            <summary>
            Code name for campaign.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PredefinedObjectType.SCHEDULEDTASK">
            <summary>
            Scheduled task.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SearchSettingsInfo">
            <summary>
            Search settings class.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettingsInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettingsInfo.GetValue(System.String)">
            <summary>
            Returns value specified by property name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettingsInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets value to specified property.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SearchSettingsInfo.ContainsColumn(System.String)">
            <summary>
            Indicates if specified property is included.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettingsInfo.ID">
            <summary>
            GUID column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettingsInfo.Name">
            <summary>
            Name column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettingsInfo.Content">
            <summary>
            Content column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettingsInfo.Tokenized">
            <summary>
            Tokenized column of item.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettingsInfo.Searchable">
            <summary>
            Searchvable column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettingsInfo.FieldName">
            <summary>
            Field name column.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettingsInfo.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.SearchSettingsInfo.ColumnNames">
            <summary>
            Returns array of property names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.QueryParameters">
            <summary>
            Query parameters container.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.Name">
            <summary>
            Query name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.Text">
            <summary>
            Query text.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.Type">
            <summary>
            Query type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.RequiresTransaction">
            <summary>
            Requires transaction.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.Params">
            <summary>
            Query parameters.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.Columns">
            <summary>
            Columns to get.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.Where">
            <summary>
            Where condition.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.OrderBy">
            <summary>
            Order by.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.TopN">
            <summary>
            Top N items.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.ExecutionType">
            <summary>
            Execution type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.QueryParameters.mAllowCache">
            <summary>
            If true, caching of the query is allowed.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryParameters.#ctor(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="queryText">Query text</param>
            <param name="queryParams">Query parameters</param>
            <param name="queryType">Query type</param>
            <param name="transaction">Requires transaction</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryParameters.#ctor(System.String,System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum,System.Boolean,System.String,System.String,System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="queryText">Query text</param>
            <param name="parameters">Query parameters</param>
            <param name="queryType">Query type</param>
            <param name="requiresTransaction">Requires transaction</param>
            <param name="columns">Columns to get</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Return only TOP N records</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryParameters.ResolveMacros">
            <summary>
            Resolves the query macros.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.QueryParameters.AllowCache">
            <summary>
            If true, caching of the query is allowed.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.IDisplayReport">
            <summary>
            Interface for DisplayReport
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDisplayReport.ReloadData(System.Boolean)">
            <summary>
            Sets the RTL culture to the body class if RTL language.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDisplayReport.SaveReport">
            <summary>
            Saves the report
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.IDisplayReport.SetDefaultDynamicMacros(System.Int32)">
            <summary>
            Sets all default macros needed for graphs
            </summary>
            <param name="interval"></param>
        </member>
        <member name="M:CMS.SettingsProvider.IDisplayReport.IsReportLoaded">
            <summary>
            Returns true if report is loaded
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.UseProgressIndicator">
            <summary>
            Gets or sets the value that indicates whether progress indicator should be used.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.ReportPanel">
            <summary>
            Content panel.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.RenderCssClasses">
            <summary>
            Inidcates if CSS classes should be rendered.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.AreaMaxWidth">
            <summary>
            Graph possible width of control.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.UseExternalReload">
            <summary>
            If true, reload is not called from this control.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.TableFirstColumnWidth">
            <summary>
            First width of the column
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.DynamicMacros">
            <summary>
            Special macros used for report macro resolving
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.ReportDisplayName">
            <summary>
            Returns report display name
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.ReportName">
            <summary>
            Report name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.CheckInnerControls">
            <summary>
            Indicates if check inner sub controls.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.ReportHTML">
            <summary>
            ReportHTML.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.DisplayFilter">
            <summary>
            Display filter.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.BodyCssClass">
            <summary>
            Body CSS class.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.FormCssClass">
            <summary>
            Form CSS class.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.LoadFormParameters">
            <summary>
            Assigned if parameters will be loaded automaticcaly.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.ForceLoadDefaultValues">
            <summary>
            Load always default values.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.IgnoreWasInit">
            <summary>
            Reloads parameters even if were already inited.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.ReportControls">
            <summary>
            Child report controls.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.GraphImageWidth">
            <summary>
            Width of chart image in percent versus displayable zone.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.IDisplayReport.ReportParameters">
            <summary>
            Report parameters.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.PermissionsEnum">
            <summary>
            Permissions enumeration.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PermissionsEnum.Read">
            <summary>
            Read permission.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PermissionsEnum.Modify">
            <summary>
            Modify permission.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PermissionsEnum.Create">
            <summary>
            Creates permission.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PermissionsEnum.Delete">
            <summary>
            Delete permission.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.PermissionsEnum.Destroy">
            <summary>
            Destroy permission.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SettingsObjectType">
            <summary>
            Settings object types.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.TRANSFORMATION">
            <summary>
            Code name for transformations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.SETTINGSKEY">
            <summary>
            Settings key object type constant.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.SETTINGSCATEGORY">
            <summary>
            Settings category object type constant.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.QUERY">
            <summary>
            Query object type constant.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.CLASS">
            <summary>
            Class object type constant.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.CLASSSITE">
            <summary>
            Class site binding.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.ALLOWEDCHILDCLASS">
            <summary>
            Allowed child class bindings.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.OBJECTTRANSLATION">
            <summary>
            Object translation.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.DOCUMENTTYPE">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.SYSTEMTABLE">
            <summary>
            System table.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsObjectType.CUSTOMTABLE">
            <summary>
            Custom table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsObjectType.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.SettingsProvider.SettingsHelper">
            <summary>
            Settings helper.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsHelper.mLoadHashTables">
            <summary>
            Load hashtables.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsHelper.mLoadObjectsWithReader">
            <summary>
            Load the objects with the data reader?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsHelper.mAppSettings">
            <summary>
            AppSettings collection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsHelper.mConnectionStrings">
            <summary>
            ConnectionStrings collection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsHelper.mApplicationConfiguration">
            <summary>
            Application configuration.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsHelper.ClearTables(System.Object,System.Boolean,CMS.SettingsProvider.ProviderDictionaryCollection)">
            <summary>
            Clears the given tables.
            </summary>
            <param name="lockObj">Object used for the lock</param>
            <param name="logTasks">If true, the clear tasks are logged</param>
            <param name="dictionaries">Collection of the dictionaries to clear</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsHelper.ClearTables(System.Object,System.Boolean,CMS.SettingsProvider.IProviderDictionary[])">
            <summary>
            Clears the given tables.
            </summary>
            <param name="lockObj">Object used for the lock</param>
            <param name="logTasks">If true, the clear tasks are logged</param>
            <param name="dictionaries">List of the dictionaries to clear</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsHelper.LoadTables(CMS.SettingsProvider.ProviderDictionaryCollection)">
            <summary>
            Returns true if the given dictionary collection should be loaded.
            </summary>
            <param name="collection">Collection to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsHelper.LoadTables(CMS.SettingsProvider.IProviderDictionary[])">
            <summary>
            Returns true if the given dictionaries should be loaded.
            </summary>
            <param name="dictionaries">Dictionaries to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsHelper.LoadHashTables(System.String,CMS.SettingsProvider.LoadHashtableEnum)">
            <summary>
            Returns true if the hashtables for specified object type should be loaded with the data. Reflects the AppSettings key "CMSLoadHashtables" + objectType.Replace(".", "").
            </summary>
            <param name="objectType">Object type</param>
            <param name="defaultValue">Default value in case the key is not present in the web.config file</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsHelper.SetConfigValue(System.String,System.String)">
            <summary>
            Sets or adds the specified key to the AppSettings section for web application.
            </summary>
            <param name="key">Settings key</param>
            <param name="value">Settings value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsHelper.SetConnectionString(System.String,System.String)">
            <summary>
            Sets or adds the specified connection string in the ConnectionStrings section for web application.
            </summary>
            <param name="name">ConnectionString name</param>
            <param name="connectionString">Connection string</param>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsHelper.AppSettings">
            <summary>
            AppSettings collection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsHelper.ConnectionStrings">
            <summary>
            ConnectionStrings collection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsHelper.LoadHashTablesSettings">
            <summary>
            Load hashtables.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsHelper.LoadObjectsWithReader">
            <summary>
            Load the objects with the data reader?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsHelper.ApplicationConfiguration">
            <summary>
            Application configuration.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.AppSettings">
            <summary>
            App settings.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.AppSettings.mSettings">
            <summary>
            Settings dictionary.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AppSettings.Clear">
            <summary>
            Clear settings.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.AppSettings.GetFromSettings(System.String[])">
            <summary>
            Attempts to get the settings key value using the given list of keys.
            </summary>
            <param name="keys">List of keys to search</param>
        </member>
        <member name="P:CMS.SettingsProvider.AppSettings.Settings">
            <summary>
            Settings dictionary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.AppSettings.Item(System.String)">
            <summary>
            Settings key indexer.
            </summary>
            <param name="key">Settings key</param>
        </member>
        <member name="T:CMS.SettingsProvider.ConnectionStrings">
            <summary>
            App settings.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ConnectionStrings.mConnectionStringNames">
            <summary>
            Connection string names by their values
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.ConnectionStrings.mSettings">
            <summary>
            Connection strings dictionary.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ConnectionStrings.Clear">
            <summary>
            Clear connection strings table
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ConnectionStrings.GetFromSettings(System.String[])">
            <summary>
            Attempts to get the connection string using the given list of keys.
            </summary>
            <param name="keys">List of keys to search</param>
        </member>
        <member name="M:CMS.SettingsProvider.ConnectionStrings.GetConnectionStringName(System.String)">
            <summary>
            Gets the connection string name by its value
            </summary>
            <param name="connectionString">Connection string value</param>
        </member>
        <member name="P:CMS.SettingsProvider.ConnectionStrings.Settings">
            <summary>
            Connection strings dictionary.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ConnectionStrings.Item(System.String)">
            <summary>
            Connection strings indexer.
            </summary>
            <param name="key">Settings key</param>
        </member>
        <member name="T:CMS.SettingsProvider.Query">
            <summary>
            Represents a query and its parameters.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.Query.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.Query.SetValue(System.String,System.Object)">
            <summary>
            Sets the object value.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.Query.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.Query.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.Query.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.Query.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.Query.#ctor">
            <summary>
            Constructor, creates an empty Query structure.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.Query.#ctor(System.Object[])">
            <summary>
            Constructor, creates the Query object from the given data array of values.
            </summary>
            <param name="fields">Array with the field values</param>
            <remarks>The order of the fields must appear exactly as it appears in the database table</remarks>
        </member>
        <member name="M:CMS.SettingsProvider.Query.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates the Query object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the Query info data</param>
        </member>
        <member name="M:CMS.SettingsProvider.Query.LoadFromDataRow(System.Data.DataRow)">
            <summary>
            Loads the object data from given DataRow.
            </summary>
            <param name="dr">Datarow with the data</param>
        </member>
        <member name="M:CMS.SettingsProvider.Query.LoadFromArray(System.Object[])">
            <summary>
            Loads the object data from given data reader (current reader record).
            </summary>
            <param name="fields">Field array with the data</param>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryId">
            <summary>
            QueryId.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryName">
            <summary>
            Query name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryFullName">
            <summary>
            Query full name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryClassName">
            <summary>
            Query class name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryText">
            <summary>
            Query text.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryType">
            <summary>
            Query type (SQL command or stored procedure).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.RequiresTransaction">
            <summary>
            Indicates is specified query must be run as a transaction.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryIsLocked">
            <summary>
            Indicates if the query is locked.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryClassId">
            <summary>
            Class id.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryLastModified">
            <summary>
            Query last modified.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryGUID">
            <summary>
            Query GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.OriginalQueryFullName">
            <summary>
            Original query full name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryLoadGeneration">
            <summary>
            Load generation of the query.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.QueryIsCustom">
            <summary>
            Indicates if the query is custom.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.ObjectDisplayName">
            <summary>
            Object name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.SupportsVersioning">
            <summary>
            Indicates if the object versioning is supported.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.Query.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.QueryProvider">
            <summary>
            Enables access to queries.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQuery(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the query with given parameters applied.
            </summary>
            <param name="queryName">Full code name of the query in format cms.article.select</param>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQuery(System.String,System.Boolean)">
            <summary>
            Returns a Query object representing the query of the given name.
            </summary>
            <param name="queryName">Full code name of the query in format cms.article.select</param>
            <param name="throwException">If true, exception is thrown if query does not exist</param>
            <returns>Query object. Null if the query doesn't exist.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQuery(System.String)">
            <summary>
            Returns a Query object representing the query of the given name.
            </summary>
            <param name="queryName">Full code name of the query in format cms.article.select</param>
            <returns>Query object. Null if the query doesn't exist.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQueryFromDB(System.String)">
            <summary>
            Returns a Query object from DB representing the query of the given name.
            </summary>
            <param name="queryName">Full code name of the query in format cms.article.select</param>
            <returns>Query object. Null if the query doesn't exist.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQuery(System.Int32)">
            <summary>
            Gets the query.
            </summary>
            <param name="queryId">Query ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQueryFullName(System.Int32)">
            <summary>
            Returns a QueryName representing the query of the given ID.
            </summary>
            <param name="queryId">QueryID</param>
            <returns>QueryName. Null if the query doesn't exist.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQueries(System.String,System.String)">
            <summary>
            Gets the DataSet of queries.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQueries(System.Int32)">
            <summary>
            Returns informations about queries in specified class.
            </summary>
            <param name="classId">Id of class</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.DeleteQueries(System.Int32)">
            <summary>
            Deletes all the class queries.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.SetQuery(CMS.SettingsProvider.Query)">
            <summary>
            Saves given Query object to the database.
            </summary>
            <param name="infoObj">Object representing the query</param>
            <remarks>If the query of the specified name already exists, it's updated, otherwise a new query is created in the database.</remarks>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.DeleteQuery(CMS.SettingsProvider.Query)">
            <summary>
            Deletes the query.
            </summary>
            <param name="infoObj">Query object</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.DeleteQuery(System.Int32)">
            <summary>
            Deletes the query.
            </summary>
            <param name="queryId">Query ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.LoadGeneration(System.Int32)">
            <summary>
            Loads the specified generation of the objects.
            </summary>
            <param name="generation">Generation to load</param>
            <returns>Returns true if the generation was not empty</returns>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.LoadGenerationReader(System.Int32)">
            <summary>
            Loads the specified generation of the objects.
            </summary>
            <param name="generation">Generation to load</param>
            <returns>Returns true if the generation was not empty</returns>
        </member>
        <member name="F:CMS.SettingsProvider.QueryProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.LoadInfos">
            <summary>
            Loads all queries from the database to memory.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtable.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
            <param name="dataText">Hash data</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetClassName(System.String)">
            <summary>
            Gets the class name from the query name.
            </summary>
            <param name="queryName">Query name</param>
        </member>
        <member name="M:CMS.SettingsProvider.QueryProvider.GetQueryCacheDependencies(System.String)">
            <summary>
            Gets the cache dependencies for the query.
            </summary>
            <param name="queryName">Query name</param>
        </member>
        <member name="T:CMS.SettingsProvider.SettingsKeyActionEnum">
            <summary>
            Enumerates the possible actions when changing the settings key.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyActionEnum.Update">
            <summary>
            Specifies that the settings key had already existed and was updated.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyActionEnum.Insert">
            <summary>
            Specifies that the settings key was newly created.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyActionEnum.Delete">
            <summary>
            Specifies that the settings key was removed.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SettingsKeyChangedEventArgs">
            <summary>
            Class containing data for event raised when the settings key is successfuly changed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyChangedEventArgs.Empty">
            <summary>
            Represents a settings key changed event with no event data.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyChangedEventArgs.#cctor">
            <summary>
            Initializes the <see cref="T:CMS.SettingsProvider.SettingsKeyChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.SettingsProvider.SettingsKeyChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyChangedEventArgs.#ctor(System.String,System.Object,System.Int32,System.String,CMS.SettingsProvider.SettingsKeyActionEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:CMS.SettingsProvider.SettingsKeyChangedEventArgs"/> class.
            </summary>
            <param name="keyName">Name of the key</param>
            <param name="keyValue">The key value</param>
            <param name="siteId">ID of the site</param>
            <param name="siteName">Name of the site</param>
            <param name="action">Action that was performed on the settings key</param>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyChangedEventArgs.KeyName">
            <summary>
            Gets the name of the key.
            </summary>
            <value>The name of the key.</value>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyChangedEventArgs.KeyValue">
            <summary>
            Gets the key value.
            </summary>
            <value>The key value.</value>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyChangedEventArgs.SiteID">
            <summary>
            Gets the site ID.
            </summary>
            <value>The site ID.</value>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyChangedEventArgs.SiteName">
            <summary>
            Gets the name of the site.
            </summary>
            <value>The name of the site.</value>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyChangedEventArgs.Action">
            <summary>
            Gets the action that was performed on the settings key.
            </summary>
            <value>The action that was performed on the settings key.</value>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyChangedEventArgs.FullKeyName">
            <summary>
            Gets the full name of the key with site name prefix.
            </summary>
            <value>The full name of the key.</value>
        </member>
        <member name="T:CMS.SettingsProvider.SettingsKeyInfo">
            <summary>
            Represents a Settings key.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the object value.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.GetValue(System.String)">
            <summary>
            Gets the object value.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.#ctor">
            <summary>
            Constructor, creates an empty SettingsKeyInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates the DataClassInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyInfo.LoadFromDataRow(System.Data.DataRow)">
            <summary>
            Loads the DataRow data to the object.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyID">
            <summary>
            Gets or sets the key ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyName">
            <summary>
            Gets or sets the key name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyDisplayName">
            <summary>
            Gets or sets the key display name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyDescription">
            <summary>
            Gets or sets the key description.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyValue">
            <summary>
            Gets or sets the key value.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyType">
            <summary>
            Gets or sets the key type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyCategoryID">
            <summary>
            Gets or sets the key category ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.SiteID">
            <summary>
            Gets or sets the key site ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyLastModified">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyGUID">
            <summary>
            Key GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyOrder">
            <summary>
            Gets or sets the key order.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyDefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyValidation">
            <summary>
            Gets or sets regular expression for validation.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyEditingControlPath">
            <summary>
            Gets or sets the path to formcontrol which can be used to edit the settings.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyLoadGeneration">
            <summary>
            Gets or sets the key load generation.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyIsGlobal">
            <summary>
            Indicates if the settings key is only global.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyIsCustom">
            <summary>
            Indicates whether the settings key is custom or system default.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.KeyIsHidden">
            <summary>
            Indicates whether the settings key is hidden or not. If it is set to true, such key will not be displayed in
            the settings section and users will not be able to edit value of such key.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyInfo.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SettingsKeyProvider">
            <summary>
            Provides access to settings keys.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mSettings">
            <summary>
            Contains settings keys for given sites.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mIntValues">
            <summary>
            Cached integer values.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mBoolValues">
            <summary>
            Cached boolean values.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mUsingVirtualPathProvider">
            <summary>
            If true, the system is using virtual path provider.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mAllowUpdateTimeStamps">
            <summary>
            If true, time stamp update of the objects is allowed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mURLParametersSeparator">
            <summary>
            URL parameters separator.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mWebApplicationPhysicalPath">
            <summary>
            Application physical path.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mApplicationPath">
            <summary>
            Application path.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mDevelopmentMode">
            <summary>
            Development mode.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mTestingMode">
            <summary>
            Testing mode.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mUseViewStateUserKey">
            <summary>
            Use viewstate user key.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.mUseCustomHandlers">
            <summary>
            Specifies whether to use custom event handlers.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetValue(System.String)">
            <summary>
            Returns value of the specified key from the database or null if not found.
            </summary>
            <param name="keyName">Key name in format sitename.keyname (or only keyname for global settings)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetKeyValueFromDB(System.String)">
            <summary>
            Gets Key value from DB.
            </summary>
            <param name="keyName">Key name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetStringValue(System.String)">
            <summary>
            Returns string value of the specified key from the database or "" if not found.
            </summary>
            <param name="keyName">Key name in format sitename.keyname (or only keyname for global settings)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetIntValue(System.String)">
            <summary>
            Returns the integer value of the specified key from the database or 0 if not found.
            </summary>
            <param name="keyName">Key name in format sitename.keyname (or only keyname for global settings)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetDoubleValue(System.String)">
            <summary>
            Returns the double value of the specified key from the database or 0 if not found.
            </summary>
            <param name="keyName">Key name in format sitename.keyname (or only keyname for global settings)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetBoolValue(System.String)">
            <summary>
            Returns the boolean value of the specified key from the database or false if not found.
            </summary>
            <param name="keyName">Key name in format sitename.keyname (or only keyname for global settings)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of the given key if the key exists.
            </summary>
            <param name="keyName">Settings key to set</param>
            <param name="value">New settings value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.SetValue(CMS.SettingsProvider.SettingsKeyInfo)">
            <summary>
            Sets the specified settings key data.
            </summary>
            <param name="infoObj">Settings key info object</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.DeleteKey(CMS.SettingsProvider.SettingsKeyInfo)">
            <summary>
            Deletes specified settings key.
            </summary>
            <param name="infoObj">SettingsKey object to delete</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.DeleteKey(System.String)">
            <summary>
            Deletes specified settings key.
            </summary>
            <param name="keyName">SettingsKey name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.KeyExists(System.String)">
            <summary>
            Returns true if the key of the given name exists.
            </summary>
            <param name="keyName">Key name in format sitename.keyname (or only keyname for global keys)</param>
            <remarks>Global keys are not considered when the local key doesn't exist.</remarks>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetSettingsKeys(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns a DataSet with all keys for given site and category, sorted by KeyDisplayName.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetSettingsKeys(System.Int32,System.Int32)">
            <summary>
            Returns a DataSet with all keys for given site and category, sorted by KeyDisplayName.
            </summary>
            <param name="siteId">Site ID. If it's zero, the global settings are loaded only</param>
            <param name="categoryId">Settings category ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetSettingsKeysOrdered(System.Int32,System.Int32)">
            <summary>
            Returns a DataSet with all keys for given site and category, sorted by KeyOrder, KeyDisplayName.
            </summary>
            <param name="siteId">Site name. If it's empty, the global settings are loaded only</param>
            <param name="categoryId">Settings category ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetSettingsKeyInfo(System.String)">
            <summary>
            Returns the settings key info for key with the specified name. The name can be either KeyName (for global settings) or SiteName.KeyName (for local settings).
            </summary>
            <param name="keyName">Key name to retrieve</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetSettingsKeyInfo(System.String,System.Int32)">
            <summary>
            Returns the settings key info for key with the specified name.
            </summary>
            <param name="keyName">Key name to retrieve</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetSettingsKeyInfo(System.Int32)">
            <summary>
            Returns the settings key with specified ID.
            </summary>
            <param name="keyId">Key ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.MoveSettingsKeyUp(System.String)">
            <summary>
            Moves specified key up.
            </summary>
            <param name="keyName">Key code name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.MoveSettingsKeyDown(System.String)">
            <summary>
            Moves specified key down.
            </summary>
            <param name="keyName">Key code name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.LoadGeneration(System.Int32,System.Object)">
            <summary>
            Loads the specified generation of the objects.
            </summary>
            <param name="generation">Generation to load</param>
            <param name="parameter">Site name as a parameter</param>
            <returns>Returns true if the generation was not empty</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.LoadGenerationReader(System.Int32,System.Object)">
            <summary>
            Loads the specified generation of the objects.
            </summary>
            <param name="generation">Generation to load</param>
            <param name="parameter">Site name as a parameter</param>
            <returns>Returns true if the generation was not empty</returns>
        </member>
        <member name="F:CMS.SettingsProvider.SettingsKeyProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.LoadSettings(System.String)">
            <summary>
            Loads all keys from the database to memory.
            </summary>
            <param name="siteName">Site name to load</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.Clear(System.Boolean)">
            <summary>
            Remove all settings keys pre-loaded in memory.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetKeyType(System.Type)">
            <summary>
            Returns the key type string representation of a specified key type.
            </summary>
            <param name="keyType">Type to process</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetKeyTypeFromString(System.String)">
            <summary>
            Returns the key type from string.
            </summary>
            <param name="type">String type</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
            <param name="dataText">Data text (settings key)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.Init">
            <summary>
            Initializes the attachment helper.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.ParseKeyName(System.String)">
            <summary>
            Returns site name as the first item and key name as the second.
            </summary>
            <param name="keyName">Settings key name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetFullKeyName(System.String,System.String)">
            <summary>
            Returns fully qualified setting key name.
            </summary>
            <param name="siteName">Name of the site. Use null or empty string for global keys</param>
            <param name="keyName">Name of the settings key</param>
            <returns></returns>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.SettingsCategoryExists(System.String)">
            <summary>
            Checks if category with specific categoryDisplayName exists.
            </summary>
            <param name="categoryDisplayName">Category display name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.AddSettingsCategory(System.String)">
            <summary>
            Adds settings category.
            </summary>
            <param name="categoryDisplayName">Category display name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetSettingsCategoryId(System.String)">
            <summary>
            Gets settings category ID.
            </summary>
            <param name="categoryDisplayName">Category diplay name</param>
            <returns>settings category ID</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.GetSettingsCategories(System.Int32)">
            <summary>
            Returns a dataset with all settings categories.
            </summary>
            <param name="siteId">Site ID for the categories</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsKeyProvider.EnsureMissingSiteSettings(System.Int32)">
            <summary>
            Ensures missing site settings for given site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="E:CMS.SettingsProvider.SettingsKeyProvider.OnSettingsKeyChanged">
            <summary>
            Occurs when the settings key is changed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.Settings">
            <summary>
            Returns hashtable of settings indexed by site name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.UsingVirtualPathProvider">
            <summary>
            System is using virtual path provider.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.URLParametersSeparator">
            <summary>
            URL parameters separator.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.AllowUpdateTimeStamps">
            <summary>
            If true, time stamp update of the objects is allowed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.WebApplicationVirtualPath">
            <summary>
            Returns the application virtual path.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.WebApplicationPhysicalPath">
            <summary>
            Web application physical path. Trimmed backslash '\' at the end.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.UseWebApplicationConfiguration">
            <summary>
            Indicates if WebApplicationPhysicalPath property should be used to initialize the configuration manager.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.ApplicationPath">
            <summary>
            Web application path (e.g. /WebProject1)
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.DevelopmentMode">
            <summary>
            Development mode type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.TestingMode">
            <summary>
            Testing mode type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.UseViewStateUserKey">
            <summary>
            Use viewstate user key.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SettingsKeyProvider.UseCustomHandlers">
            <summary>
            Specifies whether to use custom event handlers.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SqlHelperClass">
            <summary>
            Class to provider common SQL methods.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.NO_COLUMNS">
            <summary>
            Constant for no columns.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.NO_TOTALRECORDS">
            <summary>
            Value for total records input to not get the total amount of data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.NO_DATA_WHERE">
            <summary>
            Where condition representing no data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.MAX_PARAM_LENGTH">
            <summary>
            Maximum parameter length to log.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_BOOLEAN">
            <summary>
            Boolean data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_DATETIME">
            <summary>
            Date time data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_FLOAT">
            <summary>
            Float data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_INTEGER">
            <summary>
            Integer data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_LONG">
            <summary>
            Long data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_LONGTEXT">
            <summary>
            Long text data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_TEXT">
            <summary>
            Text data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_GUID">
            <summary>
            GUID data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.DATATYPE_BINARY">
            <summary>
            Binary data type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.MISSING_VALUE">
            <summary>
            Unknown value.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.OnBeforeExecuteQuery">
            <summary>
            Fires before the query is executed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.OnAfterExecuteQuery">
            <summary>
            Fires after the query is executed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mLogQueries">
            <summary>
            Logs SQL queries?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mDebugQueries">
            <summary>
            Debug SQL queries?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mDebugQueriesLive">
            <summary>
            Debug SQL queries live?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mDebugAllQueries">
            <summary>
            Debug all SQL queries?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mDebugQueriesStack">
            <summary>
            Debug queries stack?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mQueryLogLength">
            <summary>
            Query log length (number of requests to log).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mDebugConnections">
            <summary>
            Debug SQL connections?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mLogFile">
            <summary>
            Logs file path.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mLastLogs">
            <summary>
            Last requests query logs, contains the arrays of [URL, QueryLog, Time].
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mDisposeConnectionAfterClose">
            <summary>
            If true, disposes connection after the connection is closed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mMaxTransactionWaitTimeout">
            <summary>
            Maximum timeout to wait for transaction to be run (only when AllowSimultaneousTransactions is false), in sedonds.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mAllowSimultaneousTransactions">
            <summary>
            If true, more simultaneous transactions are allowed to run, else the system waits for the transaction to finish before allowing the next transaction to run.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mUseDefaultIsolationLevelOnlyWithOpenTransactions">
            <summary>
            When true, default isolation level is used only when some transaction is opened.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mDefaultIsolationLevel">
            <summary>
            Default isolation level for SQL operations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mTransactionIsolationLevel">
            <summary>
            Isolation level for SQL operations with transactions.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mThrowViolatedTransactions">
            <summary>
            If true, an extception is thrown if the transaction is violated by the new open connection.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mDefaultCommandTimeout">
            <summary>
            Command timeout for the SQL commands.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mOpenedConnections">
            <summary>
            Number of the connections currently opened.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mOpenedTransactions">
            <summary>
            Number of the transactions currently opened.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mIsConnectionStringInitialized">
            <summary>
            Connection string initialized status.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mIsDatabaseAvailable">
            <summary>
            Indicates whether connection string is set and objects exist in database.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mEnglishCulture">
            <summary>
            English culture.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mCheckThreadSafety">
            <summary>
            If true, the thread safety of the connection access is checked (the connection must be used only in thread where it was originally created).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mMachineName">
            <summary>
            Current machine name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mNoWhereRegExp">
            <summary>
            Regular expression to match not needed where condition.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mIsWildCardRegEx">
            <summary>
            Regex matching the wildcard within alias path.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mRemoveWildCardRegEx">
            <summary>
            Regex for matching the escaped content within alias path.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mRunningQueries">
            <summary>
            Counter of running queries.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mRegSquerBrackets">
            <summary>
            Regular expression for replacing squere brackets from like expressions.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mFileNameForbiddenCharRegExp">
            <summary>
            Regular expression to match forbidden characters in file name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SqlHelperClass.mReservedFileNames">
            <summary>
            Reserved file names which should not be used
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ResetDebugSettings">
            <summary>
            Sets all the debug settings to null and causes them to be reloaded.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.SetContext(System.String)">
            <summary>
            Sets the debugging context.
            </summary>
            <param name="newContext">New context</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ReleaseContext">
            <summary>
            Releases the last context.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.NewLogTable">
            <summary>
            Creates a new SQL log table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.LogConnectionOperation(System.String,System.Boolean,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Logs the connection operation to the query log.
            </summary>
            <param name="operation">Connection operation</param>
            <param name="allowBeforeQuery">If true, the operation is allowed before the query when the query is open</param>
            <param name="conn">Connection around the operation</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.LogQueryStart(System.String,System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Logs query start. Logs the query to the file and to current request log for debugging.
            </summary>
            <param name="queryName">Query name</param>
            <param name="queryText">Query text</param>
            <param name="parameters">Query parameters</param>
            <param name="conn">Connection for the query execution</param>
            <returns>Returns the new log item</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetParamCacheString(CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Gets the parameters string.
            </summary>
            <param name="parameters">Query parameters</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetParamString(CMS.SettingsProvider.QueryDataParameters,System.String,System.Int32@)">
            <summary>
            Gets the parameters string.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="separator">Separator</param>
            <param name="size"></param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetStack(System.Int32)">
            <summary>
            Gets the current stack.
            </summary>
            <param name="depth">Stack depth</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.LogQueryEnd(System.Object)">
            <summary>
            Logs the end of the query processing.
            </summary>
            <param name="result">Result</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.LogQueryToFile(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Logs the query.
            </summary>
            <param name="queryText">Query text to log</param>
            <param name="parameters">Query parameters</param>
            <param name="conn">Connection used for this query</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.LogQueryEndToFile(System.Object,System.String@,System.Int32@)">
            <summary>
            Logs the end of the query processing.
            </summary>
            <param name="result">Result object</param>
            <param name="resultsString">Returning the results string</param>
            <param name="totalSize">Returning the total size of results</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.WriteRequestLog">
            <summary>
            Writes the request log to the log file.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetObjectSize(System.Object)">
            <summary>
            Gets the size of the given object.
            </summary>
            <param name="item">Object</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetObjectSize(System.Object,System.Collections.Hashtable)">
            <summary>
            Gets the size of the given object.
            </summary>
            <param name="item">Object</param>
            <param name="coveredItems">Table of the covered items</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetDataContainerSize(CMS.SettingsProvider.IDataContainer)">
            <summary>
            Gets the size of the given data container.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetDataContainerSize(CMS.SettingsProvider.IDataContainer,System.Collections.Hashtable)">
            <summary>
            Gets the size of the given data container.
            </summary>
            <param name="container">Container</param>
            <param name="coveredItems">Table of the covered items</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetRowSize(System.Data.DataRow)">
            <summary>
            Returns the row data size (size of the contained data).
            </summary>
            <param name="dr">Data row</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetTableSize(System.Data.DataTable)">
            <summary>
            Returns the table data size (size of the contained data).
            </summary>
            <param name="dt">Data table</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetViewSize(System.Data.DataView)">
            <summary>
            Returns the view data size (size of the contained data).
            </summary>
            <param name="dv">Data view</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetSizeString(System.Int64)">
            <summary>
            Returns the string for the specified file size.
            </summary>
            <param name="size">File size in bytes</param>        
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetSizeString(System.Int64,CMS.SettingsProvider.FileSizeUnitsEnum)">
            <summary>
            Returns the string for the specified file size.
            </summary>
            <param name="size">File size in bytes</param>    
            <param name="unit">Unit in which you want to result</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetResultsString(System.Object,System.Int32@)">
            <summary>
            Gets the results as a string for log.
            </summary>
            <param name="result">Result object</param>
            <param name="totalSize">Total size of the result</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetSqlConnectionString">
            <summary>
            Returns the connection string.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetConnection">
            <summary>
            Returns new connection instance.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ProcessCommand(System.String,System.Object[])">
            <summary>
            Sends the specific command with arguments to the provider.
            </summary>
            <param name="commandName">Command name</param>
            <param name="commandArguments">Command arguments (parameters)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Executes query and returns the results in a DataSet.
            </summary>
            <param name="queryText">Query text</param>
            <param name="queryParams">Query parameters</param>
            <param name="queryType">Query type</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum)">
            <summary>
            Executes query and returns the results in a DataSet.
            </summary>
            <param name="queryText">Query text</param>
            <param name="queryParams">Query parameters</param>
            <param name="queryType">Query type</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,System.String,System.String)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.String,System.Int32,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="columns">Columns to get</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Return only TOP N records</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.String,System.Int32)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="columns">Columns to get</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Return only TOP N records</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32@,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="columns">Columns to get</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Return only TOP N records</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total records</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteQuery(System.String,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="queryName">Query name in format application.class.queryname</param>
            <param name="parameters">Query parameters</param>
            <param name="columns">Columns to get</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Return only TOP N records</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total records</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteQuery(CMS.SettingsProvider.QueryParameters,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Runs specified query with provided parameters.
            </summary>
            <param name="query">Query to run</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ExecuteReader(System.String,CMS.SettingsProvider.QueryDataParameters,CMS.SettingsProvider.QueryTypeEnum,System.Data.CommandBehavior,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Executes query and returns the results in a DataSet.
            </summary>
            <param name="queryText">Query text</param>
            <param name="queryParams">Query parameters</param>
            <param name="queryType">Query type</param>
            <param name="conn">Connection to use</param>
            <param name="commandBehavior">Command behavior</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.AddWhereCondition(System.String,System.String,System.String)">
            <summary>
            Adds where condition to the expression.
            </summary>
            <param name="where">Where condition</param>
            <param name="condition">Condition to add</param>
            <param name="op">Operator, no spaces required. e.g. "OR"</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetSiteIDWhereCondition(System.String,System.Int32)">
            <summary>
            Returns the where condition for the give site ID.
            </summary>
            <param name="siteIdColumn">Site ID column</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.AddOrderBy(System.String,System.String)">
            <summary>
            Adds the order by to en existing one.
            </summary>
            <param name="orderBy">Original order by</param>
            <param name="add">Order by to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.AddWhereCondition(System.String,System.String)">
            <summary>
            Adds where condition to the expression using AND operator.
            </summary>
            <param name="where">Where condition</param>
            <param name="condition">Condition to add</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetWhereCondition(System.String,System.String[])">
            <summary>
            Creates the where condition for the array of values.
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">Values</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetWhereCondition(System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            Creates the where condition for the array of values.
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">Values</param>
            <param name="stringValues">Indicates if the given values are type of string</param>
            <param name="useUnicode">Indicates if the preposition 'N' should be used for string values</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetWhereConditionStringValue(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets where condition value.
            </summary>
            <param name="value">Where condition value</param>
            <param name="stringValue">Indicates if the given value is type of string</param>
            <param name="useUnicode">Indicates if the preposition 'N' should be used</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetWhereCondition``1(System.String,System.String[],System.Boolean)">
            <summary>
            Creates the where condition for the array of values.
            </summary>
            <param name="columnName">Column name</param>
            <param name="values">Values</param>
            <param name="useUnicode">Indicates if the preposition 'N' should be used for string values</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetWhereConditionStringValue``1(System.String,System.Boolean)">
            <summary>
            Gets where condition value.
            </summary>
            <param name="value">Where condition value</param>
            <param name="useUnicode">Indicates if the preposition 'N' should be used</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetWhereCondition(System.String,System.Int32)">
            <summary>
            Creates the where condition for the array of values.
            </summary>
            <param name="columnNames">Column name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetWhereCondition(System.String,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Creates the where condition for the array of values.
            </summary>
            <param name="columnNames">Column name</param>
            <param name="values">Values</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.MergeColumns(System.String[])">
            <summary>
            Merges the sets of columns and makes sure that each column in.
            </summary>
            <param name="columns">Array of sets of columns, separated by dash or semicolon e.g. "Name, DisplayName"</param>
            <returns>Returns the list separated by dashes for use in SQL query</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.MergeColumns(System.String,System.String)">
            <summary>
            Merges two sets of columns and makes sure that each column in.
            </summary>
            <param name="columns1">First set of columns, separated by dash or semicolon e.g. "Name, DisplayName"</param>
            <param name="columns2">Second set of columns, separated by dash or semicolon e.g. "Name, DisplayName"</param>
            <returns>Returns the list separated by dashes for use in SQL query</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetIntegerValues(System.Data.DataTable,System.String)">
            <summary>
            Gets the array of integer values from the given data table.
            </summary>
            <param name="dt">Source data table</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetIntegerValues(System.Data.DataView,System.String)">
            <summary>
            Gets the array of integer values from the given data table.
            </summary>
            <param name="dt">Source data table</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetStringValues(System.Data.DataTable,System.String)">
            <summary>
            Gets the array of string values from the given data table.
            </summary>
            <param name="dt">Source data table</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetAliasPathCondition(System.String)">
            <summary>
            Returns the where condition for node alias path expression.
            </summary>
            <param name="aliasPath">Node alias path</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ResolveQueryMacros(System.String,CMS.SettingsProvider.QueryDataParameters)">
            <summary>
            Resolves the query macros using the given parameters.
            </summary>
            <param name="queryText">Query text</param>
            <param name="queryParams">Parameters array</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ResolveQueryMacros(System.String,System.String,System.String,System.Int32)">
            <summary>
            Resolves the query macros.
            </summary>
            <param name="queryText">Query text</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Top N expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ResolveQueryMacros(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Resolves the query macros.
            </summary>
            <param name="queryText">Query text</param>
            <param name="where">Where expression</param>
            <param name="orderBy">Sort expression</param>
            <param name="topN">Top N expression</param>
            <param name="columns">Columns to return</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetItemsCount(System.Object)">
            <summary>
            Gets the items count in the specified data source.
            </summary>
            <param name="dataSource">Data source</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.TransferTables(System.Data.DataSet,System.Data.DataSet)">
            <summary>
            Transfers tables from source DataSet to the destination DataSet.
            </summary>
            <param name="destinationDS">Destination DataSet</param>
            <param name="sourceDS">Source DataSet</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.DataSourceIsEmpty(System.Object)">
            <summary>
            Returns true if the given datasource is empty.
            </summary>
            <param name="dataSource">Datasource to check for emptiness</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetDBSchema(System.String)">
            <summary>
            Returns DB object scheme from settings.
            </summary>
            <param name="siteName">Name of the site from which the setting is returned</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.IsMissing(System.Object)">
            <summary>
            Returns true if the given value is missing or null.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.IsMissingOrNull(System.Object)">
            <summary>
            Returns true if the given value is missing or null.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.PreprocessQuery(CMS.SettingsProvider.QueryParameters)">
            <summary>
            Preprocesses the give query.
            </summary>
            <param name="query">Query to preprocess</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.PreparePagedQuery(System.String,System.String,System.Int32,System.String@,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Prepares the query for paging, adds additional system columns and updates the columns list.
            </summary>
            <param name="queryText">Query text</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Top N</param>
            <param name="columns">Columns to get</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get</param>
            <param name="getTotal">If true, the query should get the total number of records</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ReplaceOrderBy(System.String,System.String)">
            <summary>
            Replace order by macro in query.
            </summary>
            <param name="queryText">Query text</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.RemoveOrderBy(System.String)">
            <summary>
            Removes order by expression from query string.
            </summary>
            <param name="queryText">Query text</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ProcessPagedResults(System.Data.DataSet,System.Int32@)">
            <summary>
            Processes the page results - Removes the system columns and gets the total records number.
            </summary>
            <param name="ds">DataSet with the results</param>
            <param name="totalRecords">Returns the total records number</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.EncapsulateObject(System.Object)">
            <summary>
            Encapsulates object if needed (DataSet, DataRow, DataTable to their Container equivalent).
            </summary>
            <param name="obj">Object to be encapsulated</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.EncapsulateObject(System.Object,System.Boolean)">
            <summary>
            Encapsulates object if needed (DataSet, DataRow, DataTable to their Container equivalent).
            </summary>
            <param name="obj">Object to be encapsulated</param>
            <param name="encapsulateDateTime">If true, also DateTime is encapsulated into DateTimeContainer</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.EscapeLikeQueryPatterns(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Escapes characters for query which use LIKE pattern.
            </summary>
            <param name="input">Input text</param>
            <param name="escapeUnderScore">Indicates whether underscore character should be escaped</param>
            <param name="escapePercentage">Indicates whether percentage character should be escaped</param>
            <param name="escapeSquareBrackets">Indicates whether square brackets characters should be escaped</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetSafeQueryString(System.String)">
            <summary>
            Returns safe sql query string - escapes apostrophes and escapes wildcard characters _, %, [].
            </summary>
            <param name="input">String to escape</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetSafeQueryString(System.String,System.Boolean)">
            <summary>
            Returns safe sql query string - escapes apostrophes and optionally escapes wildcard characters _, %, [].
            </summary>
            <param name="input">String to escape</param>
            <param name="escapeWildcards">Determines whether the wildcards characters should be escaped</param>        
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.TryGetDataRowValue(System.Data.DataRow,System.String,System.Object@)">
            <summary>
            Returns the value from the DataRow field.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="value">Returning the value</param>
            <returns>Returns true if the value (field) is not found</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetDataRowValue(System.Data.DataRow,System.String)">
            <summary>
            Returns the value from the DataRow field, or null if the field does not exist in the datarow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetBoolValue(System.Data.DataRow,System.String)">
            <summary>
            Gets the bool variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetBoolValue(System.Data.DataRow,System.String,System.Boolean)">
            <summary>
            Gets the bool variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetIntValue(System.Data.DataRow,System.String)">
            <summary>
            Gets the integer variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetGuidValue(System.Data.DataRow,System.String)">
            <summary>
            Gets the guid variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetStringValue(System.Data.DataRow,System.String)">
            <summary>
            Gets the string variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetStringValue(System.Data.DataRow,System.String,System.String)">
            <summary>
            Gets the string variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetDateTimeValue(System.Data.DataRow,System.String)">
            <summary>
            Gets the DateTime variable from given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetString(System.Object,System.String)">
            <summary>
            Converts the object value to string.
            </summary>
            <param name="value">Value</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetDouble(System.Object,System.Double)">
            <summary>
            Converts the object value to double.
            </summary>
            <param name="value">Value</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetInteger(System.Object,System.Int32)">
            <summary>
            Converts the object value to integer.
            </summary>
            <param name="value">Value</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetDateTime(System.Object,System.DateTime)">
            <summary>
            Returns the DateTime representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetGuid(System.Object,System.Guid)">
            <summary>
            Returns the GUID representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetBoolean(System.Object,System.Boolean)">
            <summary>
            Returns the boolean representation of an object or default value if not.
            </summary>
            <param name="value">Value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetSafeFileName(System.String,System.String)">
            <summary>
            Get safe file name in which forbidden characters are replaced with specified replacement
            </summary>
            <param name="value">File name</param>
            <param name="replacement">Replacement string</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.IsFileName(System.Object)">
            <summary>
            Returns true if the object representation matches the file name.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.IsSpecialFileName(System.String)">
            <summary>
            Returns true if the file name is restricted.
            </summary>
            <param name="name">File name to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.IsSpecialFolderName(System.String)">
            <summary>
            Returns true if the folder name is restricted.
            </summary>
            <param name="name">Folder name to check</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.GetIsolationLevel(System.String,System.Data.IsolationLevel)">
            <summary>
            Returns the isolation level evaluated from the string representation.
            </summary>
            <param name="value">String value to convert</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.SettingsProvider.SqlHelperClass.ObjectsEqual(System.Object,System.Object)">
            <summary>
            Returns true if two objects are equal.
            </summary>
            <param name="obj1">Object 1</param>
            <param name="obj2">Object 2</param>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.EnglishCulture">
            <summary>
            English culture (default culture for storing data).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.LogQueries">
            <summary>
            Logs SQL queries?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DebugQueries">
            <summary>
            Debug SQL queries?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DebugQueriesLive">
            <summary>
            Debug SQL queries live?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DebugAllQueries">
            <summary>
            Debug all SQL queries, including the UI and preview queries.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DebugQueriesStack">
            <summary>
            Track stack when debugging queries.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.QueryLogLength">
            <summary>
            Maximum length of the query log in number of requests.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DebugConnections">
            <summary>
            Debug the SQL connection operations.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.LogFile">
            <summary>
            Logs file.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.RequestLog">
            <summary>
            Current request query log.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.CurrentContext">
            <summary>
            Current context identificator.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.CurrentRequestLog">
            <summary>
            Current request log.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DebugCurrentRequest">
            <summary>
            Debug current request queries.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.LastLogs">
            <summary>
            Last requests query logs, contains the arrays of [URL, QueryLog].
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.MachineName">
            <summary>
            Machine name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DisposeConnectionAfterClose">
            <summary>
            If true, disposes connection after the connection is closed.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.MaxTransactionWaitTimeout">
            <summary>
            Maximum timeout to wait for transaction to be run (only when AllowSimultaneousTransactions is false), in sedonds.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.AllowSimultaneousTransactions">
            <summary>
            If true, more simultaneous transactions are allowed to run, else the system waits for the transaction to finish before allowing the next transaction to run.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.UseDefaultIsolationLevelOnlyWithOpenTransactions">
            <summary>
            When true, default isolation level is used only when some transaction is opened.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DefaultIsolationLevel">
            <summary>
            Default isolation level for SQL operations.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.TransactionIsolationLevel">
            <summary>
            Isolation level for SQL operations with transactions.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.ThrowViolatedTransactions">
            <summary>
            If true, an exception is thrown if the transaction is violated by the new open connection.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.DefaultCommandTimeout">
            <summary>
            Command timeout for the SQL commands.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.OpenedTransactions">
            <summary>
            Number of the opened transactions.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.OpenedConnections">
            <summary>
            Number of the opened connections.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.RequestOpenedTransactions">
            <summary>
            Number of request opened transactions.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.RequestOpenedConnections">
            <summary>
            Number of request opened connections.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.CheckThreadSafety">
            <summary>
            If true, the thread safety of the connection access is checked (the connection must be used only in thread where it was originally created).
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.NoWhereRegExp">
            <summary>
            Regular expression to match not needed where condition.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.IsWildCardRegEx">
            <summary>
            Regex matching the wildcard within alias path.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.RemoveWildCardRegEx">
            <summary>
            Regex for matching the escaped content within alias path.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.RunningQueries">
            <summary>
            Counter of running queries.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.RegSquerBrackets">
            <summary>
            Regular expression for replacing squere brackets from like expressions.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.FileNameForbiddenCharRegExp">
            <summary>
            Regular expression to match forbidden characters in file name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.ConnectionString">
            <summary>
            Global connection string.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.IsConnectionStringInitialized">
            <summary>
            Indicates whether connection string is initialized or not.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SqlHelperClass.IsDatabaseAvailable">
            <summary>
            Indicates whether connection string is set and objects exist in database.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SqlHelperClass.BeforeExecuteQueryEventHandler">
            <summary>
            Query execution event handler.
            </summary>
            <param name="query">Executed query</param>
            <param name="conn">Connection</param>
        </member>
        <member name="T:CMS.SettingsProvider.SqlHelperClass.AfterExecuteQueryEventHandler">
            <summary>
            Query execution event handler.
            </summary>
            <param name="query">Executed query</param>
            <param name="conn">Connection</param>
            <param name="result">Query result</param>
        </member>
        <member name="T:CMS.SettingsProvider.TransformationInfo">
            <summary>
            Class to use for storing the transformation data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the object value.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfo.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfo.#ctor">
            <summary>
            Constructor, creates an empty TransformationInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates the TransformationInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the TransformationInfo info data</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationID">
            <summary>
            Transformation ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationName">
            <summary>
            Transformation Name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationFullName">
            <summary>
            Transformation Full Name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationCode">
            <summary>
            Transformation Code.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationCSS">
            <summary>
            Transformation CSS.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationType">
            <summary>
            Transformation type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationClassID">
            <summary>
            ID of the class.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationCheckedOutByUserID">
            <summary>
            Transformation checked out user ID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationCheckedOutFilename">
            <summary>
            Transformation checked out file name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationCheckedOutMachineName">
            <summary>
            Transformation check out machine name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationVersionGUID">
            <summary>
            Transformation version GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationLastModified">
            <summary>
            Transformation last modified.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationGUID">
            <summary>
            Transformation GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationIsHierarchical">
            <summary>
            Indicates whether this transformation is hierarchical.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationHierarchicalXML">
            <summary>
            Definition of all hierarchical transformations.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.TransformationHierarchicalXMLDocument">
            <summary>
            Gets the hierarchical transformation XML Document object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.IsCheckedOut">
            <summary>
            Indicates if object is checked out.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.OriginalTransformationFullName">
            <summary>
            Original transformation full name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.OriginalTransformationCode">
            <summary>
            Original transformation code.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfo.OriginalTransformationCSS">
            <summary>
            Original transformation CSS.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TransformationInfoProvider">
            <summary>
            Enables access to transformations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationInfoProvider.mTransformationsDirectory">
            <summary>
            Virtual directory where the transformations are located.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationInfoProvider.mTransformationDirectives">
            <summary>
            Public transformation directives.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationInfoProvider.mInternalTransformationDirectives">
            <summary>
            Transformation directives for internal purposes.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationInfoProvider.transformations">
            <summary>
            Stores info on all transformations.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformation(System.String)">
            <summary>
            Returns transformation information by provided name.
            </summary>
            <param name="transformationName">Transformation full name in format application.class.transformation</param>
            <returns>TransformationInfo or throws exception.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetLocalizedTransformation(System.String,System.String)">
            <summary>
            Returns the localized transformation of given name or default transformation if localized not found.
            </summary>
            <param name="transformationName">Transformation name (fullname)</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformationInfoFromDB(System.String)">
            <summary>
            Returns TransformationInfo object for specified transformation from database.
            </summary>
            <param name="transformationName">Transformation name</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformation(System.Int32)">
            <summary>
            Gets the transformation.
            </summary>
            <param name="transformationId">Transformation ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformations(System.String,System.String)">
            <summary>
            Gets the DataSet of transformations.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformations(System.Int32)">
            <summary>
            Returns dataset with informations about transformations in specified class.
            </summary>
            <param name="classId">Class id</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformationFullName(System.Int32)">
            <summary>
            Returns full transformation name by provided transformation ID.
            </summary>
            <param name="transformationId">Transformation ID</param>
            <returns>Full transformation name (className.transformationName) or null.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.SetTransformation(CMS.SettingsProvider.TransformationInfo)">
            <summary>
            Saves given Transformation object to the database.
            </summary>
            <param name="infoObj">Object representing transformation info</param>
            <remarks>If the transformation of the specified name already exists, it's updated, otherwise a new one is created in the database.</remarks>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.DeleteTransformation(CMS.SettingsProvider.TransformationInfo)">
            <summary>
            Deletes the transformation.
            </summary>
            <param name="infoObj">Transformation object</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.DeleteTransformation(System.Int32)">
            <summary>
            Deletes the transformation.
            </summary>
            <param name="transformationId">Transformation ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.DeleteTransformations(System.Int32)">
            <summary>
            Deletes all the class transformations.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GenerateTransformationCode(System.String,CMS.SettingsProvider.TransformationTypeEnum,System.String)">
            <summary>
            Generates transformation code.
            </summary>
            <param name="tableSchema">Table schema</param>
            <param name="transformationType">Transformation type: Ascx or Xslt</param>
            <param name="className">Class name</param>
            <returns>Transformation code as a string or "".</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GenerateTransformationCode(System.String,CMS.SettingsProvider.TransformationTypeEnum,System.String,CMS.SettingsProvider.DefaultTransformationTypeEnum)">
            <summary>
            Generates transformation code.
            </summary>
            <param name="tableSchema">Table schema</param>
            <param name="transformationType">Transformation type: Ascx or Xslt</param>
            <param name="className">Class name</param>
            <param name="defaultTransformationType">Default transformation type: Default, RSS, Atom or XML</param>
            <returns>Transformation code as a string or "".</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformationUrl(System.String,System.String)">
            <summary>
            Returns virtual transformation path to the transformation file.
            </summary>
            <param name="transformationName">Full transformation name</param>
            <param name="versionGuid">Version GUID</param>
            <returns>Virtual path</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformationUrl(System.String,System.String,CMS.SettingsProvider.TransformationTypeEnum)">
            <summary>
            Returns virtual transformation path to the transformation file.
            </summary>
            <param name="transformationName">Full transformation name</param>
            <param name="versionGuid">Version GUID</param>
            <param name="type">Type</param>
            <returns>Virtual path</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformationName(System.String)">
            <summary>
            Returns full transformation name from the given virtual transformation path.
            </summary>
            <param name="Url">Virtual transformation path</param>
            <returns>Full transformation name.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtable.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.AddTransformationDirectives(System.String,System.Boolean)">
            <summary>
            Adds the transformation directives to the transformation.
            </summary>
            <param name="code">Code</param>
            <param name="useInternal">If true, internal directives are used</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformationTypeEnum(System.String)">
            <summary>
            Gets the transformation type enumeration for the given string value.
            </summary>
            <param name="type">String type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTransformationTypeCode(CMS.SettingsProvider.TransformationTypeEnum)">
            <summary>
            Gets the transformation type code for the given enum value.
            </summary>
            <param name="type">String type</param>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.LoadTransformations">
            <summary>
            Loads all transformations from the database to memory.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.RemoveFirstPart(System.String,System.String)">
            <summary>
            Returns the string with first selector removed.
            </summary>
            <param name="expression">Expression</param>
            <param name="delimiter">Selector delimiter</param>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetXSLTransformation(System.String,System.String)">
            <summary>
            Returns default XSL transformation based on the given form.
            </summary>
            <param name="formSchema">Form schema</param>
            <param name="className">Class name</param>
            <returns>XSL transformation.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetTextTransformation(System.String)">
            <summary>
            Returns default text transformation based on the given form.
            </summary>
            <param name="formSchema">Form schema</param>
            <returns>Text transformation.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetASCXTransformation(System.String)">
            <summary>
            Returns default ASCX transformation based on the given form.
            </summary>
            <param name="formSchema">Form schema</param>
            <returns>ASCX transformation.</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetRSSTransformation(CMS.SettingsProvider.DataClassInfo)">
            <summary>
            Returns default RSS transformation.
            </summary>
            <returns>RSS transformation</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetAtomTransformation(CMS.SettingsProvider.DataClassInfo)">
            <summary>
            Returns default Atom transformation.
            </summary>
            <returns>Atom transformation</returns>
        </member>
        <member name="M:CMS.SettingsProvider.TransformationInfoProvider.GetXMLTransformation(System.String,System.String)">
            <summary>
            Returns default XML transformation based on the given form.
            </summary>
            <param name="formSchema">Form schema</param>
            <param name="className">Class name</param>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfoProvider.TransformationDirectives">
            <summary>
            Transformation directives.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfoProvider.InternalTransformationDirectives">
            <summary>
            Internal transformation directives.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.TransformationInfoProvider.TransformationsDirectory">
            <summary>
            Readonly property TransformationsDirectory.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TransformationTypeEnum">
            <summary>
            Transformation type enumeration.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationTypeEnum.Ascx">
            <summary>
            ASCX transformation (for user controls).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationTypeEnum.Xslt">
            <summary>
            XSL transformation.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationTypeEnum.Text">
            <summary>
            General text transformation (with resolved macros).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationTypeEnum.Html">
            <summary>
            Html transformation (with resolved macros and WYSIWYG editing).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationTypeEnum.Xaml">
            <summary>
            XAML transformation (for Silverlight controls).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TransformationTypeEnum.jQuery">
            <summary>
            jQuery transformation (with resolved macros)
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SettingsModule">
            <summary>
            Module registration.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsModule.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsModule.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SettingsProvider.SettingsModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="T:CMS.SettingsProvider.ISearchable">
            <summary>
            Interface for search.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.ISearchable.GetSearchDocument(CMS.SettingsProvider.ISearchIndexInfo)">
            <summary>
            Returns iDocument with dependence on current object type and index.
            </summary>
            <param name="info">Search index</param>
            <returns>Returns iDocument</returns>
        </member>
        <member name="M:CMS.SettingsProvider.ISearchable.GetSearchID">
            <summary>
            Gets the search item unique id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.SettingsProvider.ISearchable.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.ISearchable.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="P:CMS.SettingsProvider.ISearchable.SearchType">
            <summary>
            Gets or sets the search object type.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.ISearchIndexInfo">
            <summary>
            Index info interface.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ISearchIndexInfo.IndexSettings">
            <summary>
            Search index settings for current object.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.ISearchIndexInfo.IndexType">
            <summary>
            Gets or sets the index type (documents, forums, etc).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SearchIndexSettings">
            <summary>
            SearchIndexSettings handles management of index settings container.
            </summary>    
        </member>
        <member name="F:CMS.SettingsProvider.SearchIndexSettings.CONTAINERROOTNAME">
            <summary>
            Root element name of index settings data.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchIndexSettings.ITEMELEMENTNAME">
            <summary>
            Element name which determines items.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchIndexSettings.ITEMIDENTIFICATOR">
            <summary>
            Attribute name which identifies single item of index settings.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettings.LoadData(System.String)">
            <summary>
            Loads settings from xml data.
            </summary>
            <param name="data">String of xml data</param>
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettings.GetData">
            <summary>
            Returns xml code of search index settings.
            </summary>        
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettings.GetSearchIndexSettingsInfo(System.String)">
            <summary>
            Returns search index setting item.
            </summary>
            <param name="guid">String idenfificator</param>
            <returns>Returns search setting item or null if there is no such item</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettings.GetSearchIndexSettingsInfo(System.Guid)">
            <summary>
            Returns search index setting item.
            </summary>
            <param name="guid">ID of search setting item</param>
            <returns>Returns search setting item or null if there is no such item</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettings.SetSearchIndexSettingsInfo(CMS.SettingsProvider.SearchIndexSettingsInfo)">
            <summary>
            Adds or updates item in search index settings.
            </summary>
            <param name="sisi"></param>
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettings.DeleteSearchIndexSettingsInfo(System.Guid)">
            <summary>
            Deletes search index setting item.
            </summary>
            <param name="guid">ID of search setting item</param>        
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettings.DeleteSearchIndexSettingsInfo(CMS.SettingsProvider.SearchIndexSettingsInfo)">
            <summary>
            Deletes search index setting item.
            </summary>
            <param name="sisi">SearchIndexSettingsInfo</param>        
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettings.GetAll">
            <summary>
            Returns dataset with all index settings items.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettings.Items">
            <summary>
            Gets list of all settings items.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SearchIndexSettingsInfo">
            <summary>
            Search Index Settings Info object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchIndexSettingsInfo.TYPE_ALLOWED">
            <summary>
            Public contants for item of type allowed.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchIndexSettingsInfo.TYPE_EXLUDED">
            <summary>
            Public contants for item of type excluded.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchIndexSettingsInfo.mData">
            <summary>
            Collection of the data contents.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchIndexSettingsInfo.splittedClassNames">
            <summary>
            Presplitted classnames.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SearchIndexSettingsInfo.splittedPaths">
            <summary>
            Presplitted paths.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettingsInfo.MatchClassNames(System.String)">
            <summary>
            Returns true if there is classname in this item which mathes specified parameter.
            </summary>
            <param name="className">ClassName to be matched</param>        
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettingsInfo.MatchPath(System.String)">
            <summary>
            Returns true if there is path in this item which mathes(subpath or exect match) specified parameter.
            </summary>
            <param name="path">Path to be matched</param>        
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettingsInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettingsInfo.GetValue(System.String)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettingsInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.SettingsProvider.SearchIndexSettingsInfo.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.ID">
            <summary>
            Gets or sets item identificator.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.Type">
            <summary>
            Gets or sets type.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.ClassNames">
            <summary>
            Gets or sets class names.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.WhereCondition">
            <summary>
            Gets or sets the where condition.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.SiteName">
            <summary>
            Gets or sets the item sitename.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.ForumNames">
            <summary>
            Gets or sets the forum names.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.Path">
            <summary>
            Gets or sets path.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.IncludeForums">
            <summary>
            Enables or disables forums inclusion.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.IncludeBlogs">
            <summary>
            Enables or disables blogs inclusion.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.IncludeMessageCommunication">
            <summary>
            Enables or disables message communication inclusion.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SettingsProvider.SearchIndexSettingsInfo.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.TaskHelper">
            <summary>
            Task management methods.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.TaskHelper.GetTaskTypeString(CMS.SettingsProvider.TaskTypeEnum)">
            <summary>
            Returns the task type string.
            </summary>
            <param name="taskType">Task type</param>
        </member>
        <member name="M:CMS.SettingsProvider.TaskHelper.GetTaskTypeEnum(System.String)">
            <summary>
            Returns the task type enumeration value.
            </summary>
            <param name="taskType">String task type representation</param>
        </member>
        <member name="M:CMS.SettingsProvider.TaskHelper.IsDataObjectType(System.String)">
            <summary>
            Indicates if object type is data task.
            </summary>
            <param name="taskObjectType">Type of the object</param>
        </member>
        <member name="M:CMS.SettingsProvider.TaskHelper.IsExcludedAsyncTask(CMS.SettingsProvider.TaskTypeEnum)">
            <summary>
            Indicates if the task type shouldn't be processed asynchronously.
            </summary>
            <param name="taskType">Task type</param>
        </member>
        <member name="T:CMS.SettingsProvider.TaskTypeEnum">
            <summary>
            Synchronization task types.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.All">
            <summary>
            All task types (used within integration module)
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.Unknown">
            <summary>
            Unkown task type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.UpdateDocument">
            <summary>
            Update document task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.PublishDocument">
            <summary>
            Publish document task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.DeleteDocument">
            <summary>
            Delete document task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.DeleteAllCultures">
            <summary>
            Delete all culture versions of specified document task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.MoveDocument">
            <summary>
            Moves document task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.ArchiveDocument">
            <summary>
            Archive document task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.UpdateObject">
            <summary>
            Update object task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.DeleteObject">
            <summary>
            Delete object task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.RejectDocument">
            <summary>
            Archive document task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.CreateObject">
            <summary>
            Creates object task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.CreateDocument">
            <summary>
            Creates document task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.CreateMediaFolder">
            <summary>
            Creates media library folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.CopyMediaFolder">
            <summary>
            Copy media library folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.MoveMediaFolder">
            <summary>
            Moves media library folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.DeleteMediaFolder">
            <summary>
            Delete media library folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.DeleteMediaRootFolder">
            <summary>
            Delete media library root folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.RenameMediaFolder">
            <summary>
            Rename media library folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.AddToSite">
            <summary>
            Add object to site.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.RemoveFromSite">
            <summary>
            Remove object from site.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.BreakACLInheritance">
            <summary>
            Break ACL inheritance.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.TaskTypeEnum.RestoreACLInheritance">
            <summary>
            Restore ACL inheritance.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.SystemHelper">
            <summary>
            System operations.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.APPLICATION_NAME_MAX_LENGTH">
            <summary>
            Maximum length of application name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.APP_NAME_KEY_NAME">
            <summary>
            Key name in the web.config for application name
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.APP_GUID_KEY_NAME">
            <summary>
            Key name in the web.config for application GUID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.IsAssemblyDebug">
            <summary>
            True if the assemblies are compiled in debug mode.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.SYSTEM_VERSION_NAME">
            <summary>
            Version name (used for Win applications such Import Toolkit etc.)
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.SYSTEM_VERSION_NUMBER">
            <summary>
            Version number of the system.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.SYSTEM_VERSION_SUFFIX">
            <summary>
            Suffix of the system version.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.SYSTEM_VERSION">
            <summary>
            Version of the system.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.IsWebProjectDebug">
            <summary>
            True if web project is compiled in debug mode.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mSanitizeXML">
            <summary>
            True if web project is compiled in debug mode.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mApplicationInstanceGUID">
            <summary>
            Application instance (current run) GUID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mDebugCounter">
            <summary>
            Counter used to merge different debugs in time order.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mCurrentTrustLevel">
            <summary>
            Trust level.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mApplicationName">
            <summary>
            Application name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mApplicationGuid">
            <summary>
            Application GUID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mApplicationIdentifier">
            <summary>
            Application identifier.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mIsWebSite">
            <summary>
            If true, the application is a web site.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.SystemHelper.mIsFullTrust">
            <summary>
            Indicates if application run in full trust level
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.Init">
            <summary>
            Init 
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.GetDebugCounter(System.Boolean)">
            <summary>
            Returns state of the debug counter.
            </summary>
            <param name="increment">If true, counter is incremented</param>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.GetVirtualMemorySize">
            <summary>
            Gets the virtual memory size.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.GetWorkingSetSize">
            <summary>
            Gets the working set size.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.GetPeakWorkingSetSize">
            <summary>
            Gets the peak working set size.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.GetApplicationPoolName">
            <summary>
            Gets the application pool name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.SendEmail(System.String,System.String,System.String,System.String)">
            <summary>
            Sends the e-mail.
            </summary>
            <param name="emailAddress">E-mail address</param>
            <param name="emailSubject">E-mail subject</param>
            <param name="emailBody">E-mail body</param>
            <param name="siteName">Name of the site (optional)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.SendEmail(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends the e-mail.
            </summary>
            <param name="emailAddress">E-mail address</param>
            <param name="fromEmailAddress">E-mail address from which is the email sent</param>
            <param name="emailSubject">E-mail subject</param>
            <param name="emailBody">E-mail body</param>
            <param name="siteName">Name of the site (optional)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends the e-mail.
            </summary>
            <param name="emailAddress">E-mail address</param>
            <param name="fromEmailAddress">E-mail address from which is the email sent</param>
            <param name="emailSubject">E-mail subject</param>
            <param name="emailBody">E-mail body</param>
            <param name="emailPlainTextBody">E-mail plain text body</param>
            <param name="siteName">Name of the site (optional)</param>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.Clear">
            <summary>
            Clears static properties (initializes fields of properties).
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.SetApplicationName(System.String)">
            <summary>
            Sets the application name
            </summary>
            <param name="applicationName">Application name</param>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.SetApplicatioGuid(System.Guid)">
            <summary>
            Sets the application GUID
            </summary>
            <param name="applicationGuid">Application GUID</param>
        </member>
        <member name="M:CMS.SettingsProvider.SystemHelper.GetWinAppName(System.String)">
            <summary>
            Returns prefix for all Kentico WinApps.
            </summary>
            <param name="applicationName">Name of the application</param>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.ApplicationInstanceGUID">
            <summary>
            Application instance (current run) GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.IsWebSite">
            <summary>
            If true, the application is a web site.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.CurrentTrustLevel">
            <summary>
            Current trust level.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.IsFullTrustLevel">
            <summary>
            Indicates if is full trust level of code access security.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.ApplicationName">
            <summary>
            Gets or sets application name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.ApplicationGuid">
            <summary>
            Gets application GUID.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.ApplicationIdentifier">
            <summary>
            Gets application identifier.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.WinServicesForceUsage">
            <summary>
            Indicates if usage of win services should be forced.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.SystemHelper.SanitizeXML">
            <summary>
            Indicates if XML will be preprocessed by CMS.IO streams (removes illegal characters).
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.WebDAVSettings">
            <summary>
            WebDAV settings class.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebDAVSettings.ALIASPATH_ROOT">
            <summary>
            Replacement for root node alias path.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebDAVSettings.WIDTH">
            <summary>
            Image resize width.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebDAVSettings.HEIGHT">
            <summary>
            Image resize height.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebDAVSettings.MAX_SIDE_SIZE">
            <summary>
            Image resize maximum side size.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebDAVSettings.CMS_FILE">
            <summary>
            Class name of the CMS File document type.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WebDAVSettings.GetAllowedExtensions(System.String)">
            <summary>
            Gets allowed file extensions supported by WebDAV for given site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebDAVSettings.IsWebDAVEnabled(System.String)">
            <summary>
            Indicates if the WebDAV support is enabled for given site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebDAVSettings.IsExtensionAllowedForEditMode(System.String,System.String)">
            <summary>
            Checks if file extension is allowed for edit mode.
            </summary>
            <param name="extension">File extension</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.RootFolder">
            <summary>
            Name of root folder (from BasePath), for example 'files'.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.AttachmentsFolder">
            <summary>
            Name of the attachments folder, for example: 'attachments'.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.MediaFilesFolder">
            <summary>
            Name of the media files folder, for example: 'media'.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.MetaFilesFolder">
            <summary>
            Name of the meta files folder, for example: 'metafiles'.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.PagesFolder">
            <summary>
            Name of the content files under community group folder, for example: 'pages'.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.ContentFilesFolder">
            <summary>
            Name of the content files folder, for example: 'content'.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.UnsortedFolder">
            <summary>
            Name of the unsorted attachments folder, for example: '[unsorted]'.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.GroupsFolder">
            <summary>
            Name of the community groups folder, for example: 'groups'.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.BasePath">
            <summary>
            Gets or sets base path, for example: '/cms/files/'
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.AttachmentsBasePath">
            <summary>
            Gets base attachments path.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.MediaFilesBasePath">
            <summary>
            Gets base media files path.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.MetaFilesBasePath">
            <summary>
            Gets base meta files path.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.ContentFilesBasePath">
            <summary>
            Gets base content files path.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebDAVSettings.GroupsBasePath">
            <summary>
            Gets base groups path.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.WebFarmTaskTypeEnum">
            <summary>
            Operation type enumeration.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.Unknown">
            <summary>
            Unknown task type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteItemInt">
            <summary>
            Deleting hashtable item index by integer.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteItemString">
            <summary>
            Deleting hashtable item index by string.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteItemGuid">
            <summary>
            Deleting hashtable item index by GUID.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.UpdateAttachment">
            <summary>
            Attachment update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.UpdateMetaFile">
            <summary>
            MetaFile update.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteAttachment">
            <summary>
            Attachment delete.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteMetaFile">
            <summary>
            MetaFile delete.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteUnmanagedItem">
            <summary>
            Indicates unmanaged item by dictionary provider.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.RemoveDocumentAliasInfo">
            <summary>
             Removes DocumentAliasInfo from cache.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.UpdateAvatar">
            <summary>
            Updates (inserts) avatar.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteAvatar">
            <summary>
            Avatar delete operation.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.RestartApplication">
            <summary>
            Restart application operation.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.UpdateForumAttachment">
            <summary>
            Update forum attachment.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteForumAttachment">
            <summary>
            Delete forum attachment.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.TouchCacheItem">
            <summary>
            Touch the cache item.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.UpdateBizFormFile">
            <summary>
            Update bizform file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteBizFormFile">
            <summary>
            Delete bizform file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.UpdateMediaFile">
            <summary>
            Updates (inserts) media file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteMediaFile">
            <summary>
            Deletes media file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.CreateMediaFolder">
            <summary>
            Creates media folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.RenemaMediaFolder">
            <summary>
            Renema media folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteMediaFolder">
            <summary>
            Deletes media folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.CopyMediaFolder">
            <summary>
            Copy media folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.MoveMediaFolder">
            <summary>
            Copy media folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.CopyMediaFile">
            <summary>
            Copy media file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.MoveMediaFile">
            <summary>
            Moves media file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteMediaFilePreview">
            <summary>
            Delete media file preview.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeleteFolder">
            <summary>
            Delete physical folder.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.RunSmartSearchIndexer">
            <summary>
            Runs smart search indexer.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.InvalidateObject">
            <summary>
            Invalidation of single object.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.InvalidateAllObjects">
            <summary>
            Invalidation of all objects of specific type.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DictionaryCommand">
            <summary>
            Provider dictionary command.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.ClearHashtables">
            <summary>
            Clear all the system hashtables.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.Custom">
            <summary>
            Custom task.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.ClearCacheItems">
            <summary>
            Clear all the system cached items.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.RemoveCacheItem">
            <summary>
            Remove system cached item.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.UpdatePhysicalFile">
            <summary>
            Update physical file
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebFarmTaskTypeEnum.DeletePhysicalFile">
            <summary>
            Delete physical file
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.WebSyncHelperClass">
            <summary>
            WebSyncHelperClass.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.WEBFARM_UPDATE_KEY">
            <summary>
            Request item key.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mServers">
            <summary>
            Web farm servers.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mWebFarmUpdaterPage">
            <summary>
            Web farm updater page. "/CMSPages/webfarmupdater.aspx" by default
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mWebFarmEnabled">
            <summary>
            If true, web farms are enabled in current context.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mMaxWebFarmFileSize">
            <summary>
            Gets the maximal file size which is allowed for web farm synchronization.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mUpdateWebFarmWithinRequest">
            <summary>
            Indicates whether request webfarm updater can be called.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mServerCount">
            <summary>
            Cached webfarm server count.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mServerName">
            <summary>
            Current server name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mCurrentlyDeletedServerID">
            <summary>
            ID of the currently deleted server.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mLogWebFarm">
            <summary>
            If true, web farm operations are logged to the file (for debug purposes).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mDebugWebFarm">
            <summary>
            Debug web farm?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mDebugAllWebFarm">
            <summary>
            Debug web farm on all pages?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mDebugWebFarmStack">
            <summary>
            Debug web farm stack?
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mWebFarmLogLength">
            <summary>
            Web farm log length (number of requests to log).
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mLogFile">
            <summary>
            Logs file path.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mLastLogs">
            <summary>
            Last requests web farm logs, contains the RequestLogs.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.mWebFarmMemoryTasks">
            <summary>
            List of all task types which synchronizes only memory objects.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WebSyncHelperClass.serversByName">
            <summary>
            Collection of all enabled servers by server name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.Clear">
            <summary>
            Clears the hashtables of all web farm servers.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.Clear(System.Boolean)">
            <summary>
            Clears the hashtables of all web farm servers.
            </summary>
            <param name="logWebFarm">Enables or disables webfarm task logging, if false no task is logged</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.Clear(System.Boolean,System.Int32)">
            <summary>
            Clears the hashtables of web farm servers.
            </summary>
            <param name="logWebFarm">Enables or disables webfarm task logging, if false no task is logged</param>
            <param name="serverId">The server id. If serverId is 0 then clear hashtables of the all enabled web farm servers)</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.IsFileSynchronizationAllowed(System.Object)">
            <summary>
            Returns value which indicates whether current file is allowed to web farm synchronization.
            </summary>
            <param name="data">Stream or byte array</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.CreateTask(CMS.SettingsProvider.WebFarmTaskTypeEnum,System.String,System.String,System.Byte[])">
            <summary>
            Creates task.
            </summary>
            <param name="taskType">Task type</param>
            <param name="taskTarget">Target</param>
            <param name="taskTextData">Task text data (such as code name, ID etc.)</param>
            <param name="taskBinaryData">Task binary data (for attachments etc.)</param>
            <returns>Returns true if the task was created (web farm is set up and task was allowed)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.CreateTask(CMS.SettingsProvider.WebFarmTaskTypeEnum,System.String,System.String,System.Byte[],System.Int32)">
            <summary>
            Creates task.
            </summary>
            <param name="taskType">Task type</param>
            <param name="taskTarget">Target</param>
            <param name="taskTextData">Task text data (such as code name, ID etc.)</param>
            <param name="taskBinaryData">Task binary data (for attachments etc.)</param>
            <param name="serverId">If (serverId > 0) then create task only for a specific server, otherwise create the task for all enabled servers</param>
            <returns>Returns true if the task was created (web farm is set up and task was allowed)</returns>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.LoadServers">
            <summary>
            Returns the collection of enabled servers. 
            Key - ServerID
            Value - string array [ServerURL, ServerName]
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.GetAllEnabledServers">
            <summary>
            Returns the DataSet of all the enabled servers records.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.LoadServersByName">
            <summary>
            Generates collection of enabled servers key = server name, value = null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.SetServerTasks(System.Int32,System.Int32,CMS.SettingsProvider.IDataConnection)">
            <summary>
            Sets the task to be processed by the given server.
            </summary>
            <param name="taskId">Task ID</param>
            <param name="serverId">Server ID</param>
            <param name="conn">Connection to use</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.GetWebFarmTaskTypeEnum(System.String)">
            <summary>
            Returns WebFarmTaskType enum.
            </summary>
            <param name="webFarmTaskType">Task type</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.GetWebFarmTaskTypeString(CMS.SettingsProvider.WebFarmTaskTypeEnum)">
            <summary>
            Returns WebFarmTaskType string.
            </summary>
            <param name="webFarmTaskType">Task type</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.ResetDebugSettings">
            <summary>
            Sets all the debug settings to null and causes them to be reloaded.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.NewLogTable">
            <summary>
            Creates a new table for the web farm log.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.LogWebFarmOperation(System.String,System.String,System.Byte[],System.String)">
            <summary>
            Logs the web farm operation. Logs the web farm operation to the file and to current request log for debugging.
            </summary>
            <param name="taskType">Task type</param>
            <param name="textData">Task text data</param>
            <param name="binaryData">Task binary data</param>
            <param name="target">Task target</param>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.LogTaskToFile(System.String,System.String,System.DateTime,System.String)">
            <summary>
            Logs the task to the log file.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WebSyncHelperClass.GetNotificationPath(System.String)">
            <summary>
            Gets default notification path for given server physical path
            </summary>
            <param name="serverPhysicalPath">Server physical path</param>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.UpdateWebFarmWithinRequest">
            <summary>
            Gets or sets the value that indicates whether web farm updater should be called within current request.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.Servers">
            <summary>
            Gets the collection of URLs from enabled servers. Server ID is key for the URL.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.WebFarmUpdaterPage">
            <summary>
            Gets or sets the webfarm updater page location. Default page location: "/CMSPages/webfarmupdater.aspx"
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.MaxWebFarmFileSize">
            <summary>
            Gets the maximal file size which is allowed for web farm synchronization.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.CurrentlyDeletedServerID">
            <summary>
            Gets or sets the ID of the currently deleted server.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeFiles">
            <summary>
            Gets or sets value that indicates whether file synchronization is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeDeleteFiles">
            <summary>
            Gets or sets value that indicates whether file delete synchronization is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeAttachments">
            <summary>
            Gets or sets value that indicates whether file synchronization for document attachments is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizePhysicalFiles">
            <summary>
            Gets or sets value that indicates whether file synchronization for physical project files is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeMetaFiles">
            <summary>
            Gets or sets value that indicates whether file synchronization is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeMediaFiles">
            <summary>
            Gets or sets value that indicates whether file synchronization for media files is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeBizFormFiles">
            <summary>
            Gets or sets value that indicates whether file synchronization for BizForm files is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeAvatars">
            <summary>
            Gets or sets value that indicates whether file synchronization for avatars is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeForumAttachments">
            <summary>
            Gets or sets value that indicates whether file synchronization for forum attachments is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeCache">
            <summary>
            Gets or sets value that indicates whether cache synchronization is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.SynchronizeSmartSearch">
            <summary>
            Gets or sets value that indicates whether smart search synchronization is enabled.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.ServerCount">
            <summary>
            Returns count of enabled web farm servers.
            </summary>        
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.ServerName">
            <summary>
            Server name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.WebFarmInstanceEnabled">
            <summary>
            Gets the value that indicates whether webfarm instance is
            enabled in configuration file
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.WebFarmEnabled">
            <summary>
            Gets or sets the value that indicates whether web farm for current server is enabled.
            Set value overrides only web config enable setting. 
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.WebFarmMemoryTasks">
            <summary>
            Gets list of all task types which synchronizes only memory objects.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.LogWebFarmTasks">
            <summary>
            Logs web farm tasks?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.UseTasksForExternalApplication">
            <summary>
            Indicates if synchronization tasks should be logged and processed for external applications.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.LogWebFarm">
            <summary>
            Logs web farm operations?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.LogFile">
            <summary>
            Logs file.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.DebugWebFarm">
            <summary>
            Debug web farm?
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.DebugAllWebFarm">
            <summary>
            Debug web farm on all pages, including the UI and preview pages.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.DebugWebFarmStack">
            <summary>
            Track stack when debugging web farm.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.WebFarmLogLength">
            <summary>
            Maximum length of the web farm log in number of requests.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.RequestLog">
            <summary>
            Current request query log.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.CurrentRequestLog">
            <summary>
            Current request log.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.DebugCurrentRequest">
            <summary>
            Debug current request WebFarm operations.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WebSyncHelperClass.LastLogs">
            <summary>
            Last requests query logs, contains the arrays of [URL, WebFarmLog, Time].
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.WinServiceHelper">
            <summary>
            Win services helper class.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WinServiceHelper.WATCHER_FILE_EXTENSION">
            <summary>
            Extesion of the watcher file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WinServiceHelper.SERVICES_FILE">
            <summary>
            Services definition file.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WinServiceHelper.SERVICE_NAME_PREFIX">
            <summary>
            Prefix for services.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WinServiceHelper.SCHEDULER_SERVICE_BASENAME">
            <summary>
            Scheduler service base name.
            </summary>
        </member>
        <member name="F:CMS.SettingsProvider.WinServiceHelper.HM_SERVICE_BASENAME">
            <summary>
            Health Monitoring service base name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceHelper.GetServiceWatcherFileName(System.String)">
            <summary>
            Gets file name of the watcher file for given windows service.
            </summary>
            <param name="serviceName">Service name</param>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceHelper.GetServiceWatcherFilePath(System.String)">
            <summary>
            Gets path to the watcher file for given windows service.
            </summary>
            <param name="serviceName">Service name (If no service name given, service file watcher folder is returned.)</param>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceHelper.RestartService(System.String)">
            <summary>
            Restarts given windows service(s)
            </summary>
            <param name="serviceName">Service name (If no service name given, all services are restarted.)</param>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceHelper.ServicesAvailable">
            <summary>
            Indicates if there is at least one service watcher file available
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceHelper.ClearServicesDefinition">
            <summary>
            Clears services definition.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceHelper.GetServiceDefinition(System.String)">
            <summary>
            Gets sevice definition item by specific base name.
            </summary>
            <param name="baseName">Base name of service</param>
        </member>
        <member name="P:CMS.SettingsProvider.WinServiceHelper.ServicesDataPath">
            <summary>
            Physical path to the win services data folder
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WinServiceHelper.ServicesFilePath">
            <summary>
            Physical path to the file that contains available services.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WinServiceHelper.ServicesDefinition">
            <summary>
            List of services definition.
            </summary>
        </member>
        <member name="T:CMS.SettingsProvider.WinServiceItem">
            <summary>
            Class representing windows service definition item.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceItem.#ctor(System.Xml.XmlNode)">
            <summary>
            Creates instance and initializes properties from xml node.
            </summary>
            <param name="node">Node</param>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceItem.GetServiceName">
            <summary>
            Gets service name.
            </summary>
        </member>
        <member name="M:CMS.SettingsProvider.WinServiceItem.GetServiceDisplayName">
            <summary>
            Gets service display name.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WinServiceItem.BaseName">
            <summary>
            Base name of service in definition file.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WinServiceItem.Name">
            <summary>
            Service name in definition file.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WinServiceItem.DisplayName">
            <summary>
            Display name of service in definition file.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WinServiceItem.Description">
            <summary>
            Description of the service in definition file.
            </summary>
        </member>
        <member name="P:CMS.SettingsProvider.WinServiceItem.AssemblyName">
            <summary>
            Assembly name of service.
            </summary>
        </member>
    </members>
</doc>
