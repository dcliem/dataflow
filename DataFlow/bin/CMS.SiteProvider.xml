<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.SiteProvider</name>
    </assembly>
    <members>
        <member name="T:CMS.SiteProvider.AuthenticationEventArgs">
            <summary>
            Authentication event arguments
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthenticationEventArgs.User">
            <summary>
            Authenticated user
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthenticationEventArgs.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthenticationEventArgs.UserName">
            <summary>
            User name
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AuthorizationEventArgs">
            <summary>
            Authorization event arguments
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthorizationEventArgs.User">
            <summary>
            User to check
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthorizationEventArgs.ResourceName">
            <summary>
            Resource name
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthorizationEventArgs.ClassName">
            <summary>
            Class name
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthorizationEventArgs.PermissionName">
            <summary>
            Permission name
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthorizationEventArgs.ElementName">
            <summary>
            UI element name
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AuthorizationEventArgs.Authorized">
            <summary>
            Authorization result
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AuthorizationHandler">
            <summary>
            Authorization handler
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AuthorizationHandler.StartResourceEvent(CMS.SiteProvider.UserInfo,System.String,System.String,System.Boolean@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="resourceName">Resource name to authorize</param>
            <param name="permissionName">Permission name</param>
            <param name="authorized">Current (system) authorization status</param>
        </member>
        <member name="M:CMS.SiteProvider.AuthorizationHandler.StartClassEvent(CMS.SiteProvider.UserInfo,System.String,System.String,System.Boolean@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="className">Class name to authorize</param>
            <param name="permissionName">Permission name</param>
            <param name="authorized">Current (system) authorization status</param>
        </member>
        <member name="M:CMS.SiteProvider.AuthorizationHandler.StartUIElementEvent(CMS.SiteProvider.UserInfo,System.String,System.String,System.Boolean@)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">User info object</param>
            <param name="resourceName">Resource name to authorize</param>
            <param name="elementName">UI element name</param>
            <param name="authorized">Current (system) authorization status</param>
        </member>
        <member name="T:CMS.SiteProvider.SecurityEvents">
            <summary>
            Security events
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SecurityEvents.Authenticate">
            <summary>
            Fires when authentication of the user is performed
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SecurityEvents.AuthorizeResource">
            <summary>
            Fires when resource permission authorization is requested
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SecurityEvents.AuthorizeClass">
            <summary>
            Fires when class permission authorization is requested
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SecurityEvents.AuthorizeUIElement">
            <summary>
            Fires when UI element authorization is requested
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AuthenticationHandler">
            <summary>
            Authentication handler
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AuthenticationHandler.StartEvent(CMS.SiteProvider.UserInfo@,System.String,System.String)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="userInfo">Current info of the authenticated user (through regular authentication)</param>
            <param name="username">Username to authenticate</param>
            <param name="password">Password to authenticate</param>
        </member>
        <member name="T:CMS.SiteProvider.CategoryType">
            <summary>
            Category type.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CategoryType.General">
            <summary>
            General category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CategoryType.Sites">
            <summary>
            Sites category.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.Counter">
            <summary>
            The class that represents counter definition.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.Counter.#ctor(System.Xml.XmlNode)">
            <summary>
            Constructor.
            </summary>
            <param name="node">XML node</param>
        </member>
        <member name="M:CMS.SiteProvider.Counter.Log">
            <summary>
            Logs global and sites values.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.Counter.LogToCounter(System.String)">
            <summary>
            Logs value to the performance counter.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="P:CMS.SiteProvider.Counter.Key">
            <summary>
            Gets or sets the counter key.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.Name">
            <summary>
            Gets or sets the counter name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.Description">
            <summary>
            Gets or sets counter description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.Type">
            <summary>
            Gets or sets the counter type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.Enabled">
            <summary>
            Indicates if the counter is enabled. Default value is True.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.OnlyGlobal">
            <summary>
            Indicates if the counter is logged per instance or per sites (True is per instance). Default value is True.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.Error">
            <summary>
            Indicates if occurred error during logging to the counter. 
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.PerSecond">
            <summary>
            Indicates if counter is logged per second.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.Interval">
            <summary>
            Indicates if performance couter is cleared after logging values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.LastErrorMessage">
            <summary>
            Last error message.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.OriginalCounter">
            <summary>
            Stores original values of CMS performance counter.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.Counter.PerformanceCounter">
            <summary>
            Gets or sets performance counter.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.HealthMonitoringHelper">
            <summary>
            The class that provides to helping methods to work with performance counters.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringHelper.SYSTEM_COUNTERS_DIRECTORY_PATH">
            <summary>
            Path of directory CMSModules.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringHelper.GetCategoryName(System.String,CMS.SiteProvider.CategoryType)">
            <summary>
            Gets category name.
            </summary>
            <param name="instancePath">Instance path - value of key CMSHealthMonitoringInstancePath</param>
            <param name="type">Category type</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringHelper.InitializeWatcher">
            <summary>
            Initializes watcher to identify that windows service regenerates the counter categories.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringHelper.mWatcher_Deleted(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Handles OnDeleted event.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">File system event argument</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringHelper.mWatcher_Created(System.Object,System.IO.FileSystemEventArgs)">
            <summary>
            Handles OnCreated event.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">File system event argument</param>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringHelper.HealthMonitoringEnabled">
            <summary>
            Indicates if Health monitoring is enabled.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringHelper.LogCounters">
            <summary>
            Indicates if the counters should be logged.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringHelper.SiteCountersEnabled">
            <summary>
            Indicates if Health monitoring is enabled for site level.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringHelper.ApplicationMonitoringInterval">
            <summary>
            Web application logging interval (in seconds).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringHelper.ServiceMonitoringInterval">
            <summary>
            Windows service logging interval (in seconds).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringHelper.UseExternalService">
            <summary>
            Indicates if the windows service should be log to the counters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringHelper.CountersStartDirectoryPath">
            <summary>
            Gets or sets start physical path of directory that contains  subdirectories with counter files.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringHelper.CanLog">
            <summary>
            Indicates if web application can log to the counters.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.HealthMonitoringManager">
            <summary>
            The class that provides methods to work with performance counters.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_ALLOCATED_MEMORY">
            <summary>
            Key of counter 'Allocated memory'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_VIEW_OF_CONTENT_PAGES_PER_SECOND">
            <summary>
            Key of counter 'Content page views/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_PENDING_REQUESTS_PER_SECOND">
            <summary>
            Key of counter 'Pending requests/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_FILE_DOWNLOADS_AND_VIEWS_PER_SECOND">
            <summary>
            Key of counter 'File downloads/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_NOT_FOUND_PAGES_PER_SECOND">
            <summary>
            Key of counter 'Pages not found/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_ROBOT_TXT_PER_SECOND">
            <summary>
            Key of counter 'Robots.txt views/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_VIEW_OF_SYSTEM_PAGES_PER_SECOND">
            <summary>
            Key of counter 'System page views/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_NON_PAGES_REQUESTS_PER_SECOND">
            <summary>
            Key of counter 'Non-page requests/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_CACHE_REMOVED_ITEMS_PER_SECOND">
            <summary>
            Key of counter 'Cache removed items/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_CACHE_UNDERUSED_ITEMS_PER_SECOND">
            <summary>
            Key of counter 'Cache underused items/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_CACHE_EXPIRED_ITEMS_PER_SECOND">
            <summary>
            Key of counter 'Cache expired items/sec'
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_ONLINE_USERS">
            <summary>
            Key of counter 'Online users - total'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_AUTHENTICATED_USERS">
            <summary>
            Key of counter 'Online users - authenticated'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_ANONYMOUS_VISITORS">
            <summary>
            Key of counter 'Online users - anonymous'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_RUNNING_THREADS">
            <summary>
            Key of counter 'Running threads'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_RUNNING_SQL_QUERIES">
            <summary>
            Key of counter 'Running SQL queries'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_EVENTLOG_WARNINGS">
            <summary>
            Key of counter 'Warnings'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_EVENTLOG_ERRORS">
            <summary>
            Key of counter 'Errors'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_RUNNING_TASKS">
            <summary>
            Key of counter 'No. of running tasks'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_TASKS_IN_QUEUE">
            <summary>
            Key of counter 'Scheduled tasks in queue'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_ALL_EMAILS_IN_QUEUE">
            <summary>
            Key of counter 'E-mails in queue'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.CNT_ERROR_EMAILS_IN_QUEUE">
            <summary>
            Key of counter 'Error e-mails in queue'.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.GENERAL_CATEGORY_DESCRIPTION">
            <summary>
            Description of general category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.SITES_CATEGORY_DESCRIPTION">
            <summary>
            Description of sites category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.mCounters">
            <summary>
            Counter list.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.mGeneralCategoryName">
            <summary>
            General category name.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.mSitesCategoryName">
            <summary>
            Sites category name.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.mSites">
            <summary>
            Collection for sites name.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.mAllSites">
            <summary>
            Collection for all sites name.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.mSystemCounterKeys">
            <summary>
            Collection of system counter keys.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.mSystemSpecialCounterKeys">
            <summary>
            Collection of system counter keys with special treatment.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.mSystemDatabaseCounterKeys">
            <summary>
            Collection of system database counter keys.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.HealthMonitoringManager.locker">
            <summary>
            Locker object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.CreateCounterCategories">
            <summary>
            Creates new performance categories and counters.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.CreateCounterCategory(System.String,CMS.SiteProvider.CategoryType)">
            <summary>
            Creates new performance category and counters.
            </summary>
            <param name="categoryName">Category name</param>
            <param name="categoryType">Category type</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.PerformanceCategoryExists(System.String)">
            <summary>
            Indicates if performance category exists.
            </summary>
            <param name="categoryName">Category name</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.DeleteCounterCategory(System.String)">
            <summary>
            Deletes existing performance category.
            </summary>
            <param name="categoryName">Category name</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.DeleteCounterCategories">
            <summary>
            Deletes performance categories.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.SetCounterValue(System.String,CMS.SiteProvider.Counter,System.Int64)">
            <summary>
            Sets raw value to the counter.
            </summary>
            <param name="categoryName">Category name</param>
            <param name="counter">Counter</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.SetCounterValue(System.String,CMS.SiteProvider.Counter,System.String,System.Int64)">
            <summary>
            Sets raw value to the instance.
            </summary>
            <param name="categoryName">Category name</param>
            <param name="counter">Counter</param>
            <param name="instanceName">Instance name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.IncrementCounter(System.String,CMS.SiteProvider.Counter)">
            <summary>
            Increments raw value of the counter.
            </summary>
            <param name="categoryName">Category name</param>
            <param name="counter">Counter</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.IncrementCounter(System.String,CMS.SiteProvider.Counter,System.String)">
            <summary>
            Increments raw value of the counter instance.
            </summary>
            <param name="categoryName">Category name</param>
            <param name="counter">Counter</param>
            <param name="instanceName">Instance name</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.DecrementCounter(System.String,CMS.SiteProvider.Counter)">
            <summary>
            Decrements raw value of the counter.
            </summary>
            <param name="categoryName">Category name</param>
            <param name="counter">Counter</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.DecrementCounter(System.String,CMS.SiteProvider.Counter,System.String)">
            <summary>
            Decrements raw value of the counter instance.
            </summary>
            <param name="categoryName">Category name</param>
            <param name="counter">Counter</param>
            <param name="instanceName">Instance name</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.ClearCounters">
            <summary>
            Clears generic counter list.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.ResetCounters">
            <summary>
            Resets values of all counters.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.IsSystemCounter(System.String)">
            <summary>
            Indicates if counter is system.
            </summary>
            <param name="counterKey">Counter key</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.IsSystemSpecialCounter(System.String)">
            <summary>
            Indicates if counter is system counter based on special values treatment.
            </summary>
            <param name="counterKey">Counter key</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.IsSystemDatabaseCounter(System.String)">
            <summary>
            Indicates if counter is system counter based on special values treatment.
            </summary>
            <param name="counterKey">Counter key</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.LogProgress(System.String)">
            <summary>
            Logs the message progress.
            </summary>
            <param name="message">Progress message</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.LoadCounters">
            <summary>
            Loads counters definition from xml files and set generic counter list.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.LoadCountersFromSubDirectories(System.String)">
            <summary>
            Loads counters from subdirectories.
            </summary>
            <param name="directoryPath">Start directory path</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.GetCountersFromXmlDefinition(System.String)">
            <summary>
            Gets counters from xml definition.
            </summary>
            <param name="path">File path</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.GetCustomCounters(System.Collections.Generic.List{CMS.SiteProvider.Counter})">
            <summary>
            Gets collection of custom creation data.
            </summary>
            <param name="counters">Counter list</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.InitializeCategoryNames">
            <summary>
            Sets properties GeneralCategoryName and SitesCatagoryName.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.GetCounter(System.String,CMS.SiteProvider.Counter,System.String)">
            <summary>
            Gets performance counter.
            </summary>
            <param name="categoryName">Category name</param>
            <param name="counter">Counter</param>
            <param name="instanceName">Instance name</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.DisableCounter(CMS.SiteProvider.Counter)">
            <summary>
            Disables and sets error property of counter.
            </summary>
            <param name="counter">Counter</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.CheckLicense">
            <summary>
            Checks the license, returns true if the license is valid against current domain.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.GetSites(System.String)">
            <summary>
            Gets collection of site names.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SiteProvider.HealthMonitoringManager.SetCounterErrorMessage(CMS.SiteProvider.Counter,System.String,System.String,System.String,System.Exception)">
            <summary>
            Sets error message of counter.
            </summary>
            <param name="counter">Counter</param>
            <param name="instanceName">Instance name of counter</param>
            <param name="categoryName">Performance category name</param>
            <param name="counterAction">Counter action</param>
            <param name="originalException">Original exception</param>
        </member>
        <member name="E:CMS.SiteProvider.HealthMonitoringManager.OnProgressLog">
            <summary>
            Progress log event.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.SystemCounterKeys">
            <summary>
            Collection of system counter keys based on CMSPerformanceCounter.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.SystemSpecialCounterKeys">
            <summary>
            Collection of system counter keys based on special values treatment with sites collection.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.SystemDatabaseCounterKeys">
            <summary>
            Collection of system counter keys based on database values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.Counters">
            <summary>
            Gets counter list.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.GeneralCategoryName">
            <summary>
            Gets name of general category.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.SitesCategoryName">
            <summary>
            Gets sites category name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.Error">
            <summary>
            Gets or sets error flag.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.Sites">
            <summary>
            Gets collection of site names.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.HealthMonitoringManager.AllSites">
            <summary>
            Gets collection of site names.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.HealthMonitoringManager.OnProgressLogEventHandler">
            <summary>
            Progress log event handler.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.FormUserControlTypeEnum">
            <summary>
            Controls type enum.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Unspecified">
            <summary>
            Type is not specified.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Input">
            <summary>
            Input controls.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Multifield">
            <summary>
            Complex controls with multiple settings.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Selector">
            <summary>
            Selectors.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Uploader">
            <summary>
            Uploaders.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Viewer">
            <summary>
            Controls for displaying information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Visibility">
            <summary>
            Visibility selectors.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Filter">
            <summary>
            Filter control.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlTypeEnum.Captcha">
            <summary>
            Captcha control
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ResetPasswordResultEnum">
            <summary>
            Reset password enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ResetPasswordResultEnum.Success">
            <summary>
            Success.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ResetPasswordResultEnum.TimeExceeded">
            <summary>
            Time exceeded.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ResetPasswordResultEnum.ValidationFailed">
            <summary>
            Validation failed.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserListInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserListInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SiteProvider.UserListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.SiteProvider.MembershipInfo">
            <summary>
            Membership data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MembershipInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfo.#ctor">
            <summary>
            Constructor - Creates an empty Membership object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new Membership object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.SiteProvider.MembershipInfo.MembershipID">
            <summary>
            Membership object ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipInfo.MembershipLastModified">
            <summary>
            Date and time when the membership object was last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipInfo.MembershipDescription">
            <summary>
            Membership object description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipInfo.MembershipDisplayName">
            <summary>
            Membership object display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipInfo.MembershipSiteID">
            <summary>
            Membership object site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipInfo.MembershipGUID">
            <summary>
            Membership object unique identifier.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipInfo.MembershipName">
            <summary>
            Membership object code name.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.MembershipInfoProvider">
            <summary>
            Class providing Membership management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMemberships(System.String,System.String)">
            <summary>
            Returns dataset of all memberships matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetUserMemberships(System.Int32)">
            <summary>
            Returns dataset of all valid memberships for given user
            </summary>
            <param name="userID">User ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMemberships(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all memberships matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMembershipInfo(System.Int32)">
            <summary>
            Returns membership with specified ID.
            </summary>
            <param name="membershipId">Membership ID</param>        
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMembershipInfo(System.Guid)">
            <summary>
            Returns membership with specified GUID.
            </summary>
            <param name="membershipGuid">Membership GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMembershipInfo(System.String,System.String)">
            <summary>
            Returns membership with specified name.
            </summary>
            <param name="membershipName">Membership name</param>                
            <param name="siteName">Site name</param>                
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.SetMembershipInfo(CMS.SiteProvider.MembershipInfo)">
            <summary>
            Sets (updates or inserts) specified membership.
            </summary>
            <param name="membershipObj">Membership to be set</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.DeleteMembershipInfo(CMS.SiteProvider.MembershipInfo)">
            <summary>
            Deletes specified membership.
            </summary>
            <param name="membershipObj">Membership to be deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.DeleteMembershipInfo(System.Int32)">
            <summary>
            Deletes membership with specified ID.
            </summary>
            <param name="membershipId">Membership ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.InvalidateMembershipUsers(System.Int32)">
            <summary>
            Invalidates all membership users
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMemberships(System.Int32)">
            <summary>
            Returns dataset of all memberships for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMemberships(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all memberships for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param>        		
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Checks dependencies, returns true if dependent.
            </summary>
            <param name="membershipId">ID of the membership to be checked</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMembershipsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all memberships matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetUserMembershipsInternal(System.Int32)">
            <summary>
            Returns collection with valid memberships associated to user
            </summary>
            <param name="userID">User ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMembershipInfoInternal(System.Int32)">
            <summary>
            Returns membership with specified ID.
            </summary>
            <param name="membershipId">Membership ID</param>        
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMembershipInfoInternal(System.Guid)">
            <summary>
            Returns membership with specified GUID.
            </summary>
            <param name="membershipGuid">Membership GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMembershipInfoInternal(System.String,System.String)">
            <summary>
            Returns membership with specified name.
            </summary>
            <param name="membershipName">Membership name</param>                
            <param name="siteName">Site name</param>         
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.SetMembershipInfoInternal(CMS.SiteProvider.MembershipInfo)">
            <summary>
            Sets (updates or inserts) specified membership.
            </summary>
            <param name="membershipObj">Membership to be set</param>        
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.DeleteMembershipInfoInternal(CMS.SiteProvider.MembershipInfo)">
            <summary>
            Deletes specified membership.
            </summary>
            <param name="membershipObj">Membership to be deleted</param>        
        </member>
        <member name="M:CMS.SiteProvider.MembershipInfoProvider.GetMembershipsInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all memberships for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
            <param name="siteId">Site ID</param> 
        </member>
        <member name="F:CMS.SiteProvider.MembershipListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipListInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.SiteProvider.MembershipRoleInfo">
            <summary>
            MembershipRoleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MembershipRoleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipRoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipRoleInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.SiteProvider.MembershipRoleInfo.RoleID">
            <summary>
            ID of role object.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipRoleInfo.MembershipID">
            <summary>
            ID of membership object.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.MembershipRoleInfoProvider">
            <summary>
            Class providing MembershipRoleInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.GetMembershipRoles(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between memberships and roles matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.GetMembershipRoles(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between memberships and roles matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.GetMembershipRoleInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified membership and role.
            </summary>
            <param name="membershipId">Membership ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.SetMembershipRoleInfo(CMS.SiteProvider.MembershipRoleInfo)">
            <summary>
            Sets relationship between specified membership and role.
            </summary>
            <param name="infoObj">Membership-role relationship to be set</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.DeleteMembershipRoleInfo(CMS.SiteProvider.MembershipRoleInfo)">
            <summary>
            Deletes relationship between specified membership and role.
            </summary>
            <param name="infoObj">Membership-role relationship to be deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.AddMembershipToRole(System.Int32,System.Int32)">
            <summary>
            Sets relationship between specified membership and role.
            </summary>	
            <param name="membershipId">Membership ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.RemoveMembershipFromRole(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified membership and role.
            </summary>
            <param name="membershipId">Membership ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.GetMembershipRolesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between memberships and roles matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.GetMembershipRoleInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified membership and role.
            </summary>
            <param name="membershipId">Membership ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.SetMembershipRoleInfoInternal(CMS.SiteProvider.MembershipRoleInfo)">
            <summary>
            Sets relationship between specified membership and role.
            </summary>
            <param name="infoObj">Membership-role relationship to be set</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipRoleInfoProvider.DeleteMembershipRoleInfoInternal(CMS.SiteProvider.MembershipRoleInfo)">
            <summary>
            Deletes relationship between specified membership and role.
            </summary>
            <param name="infoObj">Membership-role relationship to be deleted</param>
        </member>
        <member name="T:CMS.SiteProvider.MembershipUserInfo">
            <summary>
            MembershipUserInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MembershipUserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipUserInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipUserInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.SiteProvider.MembershipUserInfo.UserID">
            <summary>
            ID of User object.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipUserInfo.MembershipID">
            <summary>
            ID of membership object.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipUserInfo.ValidTo">
            <summary>
            Date to membership is valid for given user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MembershipUserInfo.SendNotification">
            <summary>
            Indicates if given user is to be notified in advance about expiration of his membership.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.MembershipUserInfoProvider">
            <summary>
            Class providing MembershipUserInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.GetMembershipUsers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between memberships and Users matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.GetMembershipUsers(System.String,System.String)">
            <summary>
            Returns dataset of all relationships between memberships and Users matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.GetMembershipUserInfo(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified membership and User.
            </summary>
            <param name="membershipId">Membership ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.SetMembershipUserInfo(CMS.SiteProvider.MembershipUserInfo)">
            <summary>
            Sets relationship between specified membership and User.
            </summary>
            <param name="infoObj">Membership-User relationship to be set</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.DeleteMembershipUserInfo(CMS.SiteProvider.MembershipUserInfo)">
            <summary>
            Deletes relationship between specified membership and user.
            </summary>
            <param name="infoObj">Membership-user relationship to be deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.AddMembershipToUser(System.Int32,System.Int32,System.DateTime)">
            <summary>
            Sets relationship between specified membership and user.
            </summary>	
            <param name="membershipId">Membership ID</param>
            <param name="userId">User ID</param>
            <param name="validTo">Date to membership for user is valid</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.AddMembershipToUser(System.Int32,System.Int32,System.DateTime,System.Boolean)">
            <summary>
            Sets relationship between specified membership and user.
            </summary>	
            <param name="membershipId">Membership ID</param>
            <param name="userId">User ID</param>
            <param name="validTo">Date to membership for user is valid</param>
            <param name="sendNotification">Indicates, if notification will be send to user when membership is expiring</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.RemoveMembershipFromUser(System.Int32,System.Int32)">
            <summary>
            Deletes relationship between specified membership and user.
            </summary>
            <param name="membershipId">Membership ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.GetExpiringMemberships(System.Int32,System.Int32,System.String)">
            <summary>
            Returns dataset of all expiring memberships matching given parameters along with relevant user and membership information.
            </summary>
            <param name="days">Number of days in which the memberships will expire.</param>
            <param name="siteId">Site ID. Set to 0 for global expiring memberships.</param>
            <param name="where">Additional where condition</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.GetExpiringMemberships(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns dataset of all expiring memberships matching given parameters along with relevant user and membership information.
            </summary>
            <param name="days">Number of days in which the memberships will expire.</param>
            <param name="siteId">Site ID. Set to 0 for global expiring memberships.</param>
            <param name="where">Additional where condition</param>
            <param name="onlyWithSendNotification">Get only memberships with send notification flag set to true.</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.GetMembershipUsersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all relationships between memberships and users matching the specified criteria.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.GetMembershipUserInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns relationship between specified membership and user.
            </summary>
            <param name="membershipId">Membership ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.SetMembershipUserInfoInternal(CMS.SiteProvider.MembershipUserInfo)">
            <summary>
            Sets relationship between specified membership and user.
            </summary>
            <param name="infoObj">Membership-user relationship to be set</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.DeleteMembershipUserInfoInternal(CMS.SiteProvider.MembershipUserInfo)">
            <summary>
            Deletes relationship between specified membership and user.
            </summary>
            <param name="infoObj">Membership-user relationship to be deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.MembershipUserInfoProvider.GetExpiringMembershipsInternal(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns dataset of all expiring memberships matching given parameters along with relevant user and membership information.
            </summary>
            <param name="days">Number of days in which the memberships will expire.</param>
            <param name="siteId">Site ID</param>
            <param name="where">Additional where condition</param>
            <param name="onlyWithSendNotification">Get only memberships with send notification flag set to true.</param>
        </member>
        <member name="F:CMS.SiteProvider.UserRoleListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleListInfo.#ctor">
            <summary>
            Constructor - Creates an empty MembershipUserInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MembershipUserInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="F:CMS.SiteProvider.UserSettingsRoleListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsRoleListInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserSettingsRoleListInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsRoleListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserSettingsRoleListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsRoleListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.SiteProvider.SearchEngineInfo">
            <summary>
            SearchEngineInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchEngineInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfo.#ctor">
            <summary>
            Constructor - Creates an empty SearchEngineInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SearchEngineInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.SiteProvider.SearchEngineInfo.SearchEngineKeywordParameter">
            <summary>
            Search engine object keyword parameter.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchEngineInfo.SearchEngineLastModified">
            <summary>
            Date of last modification of search engine object.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchEngineInfo.SearchEngineDomainRule">
            <summary>
            Search engine object domain role.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchEngineInfo.SearchEngineDisplayName">
            <summary>
            Search engine object display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchEngineInfo.SearchEngineName">
            <summary>
            Search engine object code name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchEngineInfo.SearchEngineID">
            <summary>
            Search engine object ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchEngineInfo.SearchEngineGUID">
            <summary>
            Search engine object GUID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchEngineInfoProvider">
            <summary>
            Class providing SearchEngineInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchEngineInfoProvider.engineIDs">
            <summary>
            List of search engine IDs
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEngines(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all search engines matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEngines(System.String,System.String)">
            <summary>
            Returns dataset of all search engines matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEngineInfo(System.Int32)">
            <summary>
            Returns search engine with specified ID.
            </summary>
            <param name="engineId">Search engine ID</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEngineInfo(System.String)">
            <summary>
            Returns search engine with specified name.
            </summary>
            <param name="engineName">Search engine name</param>                
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.SetSearchEngineInfo(CMS.SiteProvider.SearchEngineInfo)">
            <summary>
            Sets (updates or inserts) specified search engine.
            </summary>
            <param name="engineObj">Search engine to be set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.DeleteSearchEngineInfo(CMS.SiteProvider.SearchEngineInfo)">
            <summary>
            Deletes specified search engine.
            </summary>
            <param name="engineObj">Search engine to be deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.DeleteSearchEngineInfo(System.Int32)">
            <summary>
            Deletes search engine with specified ID.
            </summary>
            <param name="engineId">Search engine ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEngineNameForURL(System.String,System.String@)">
            <summary>
            Returns search engine name for specified URL otherwise return empty string.
            </summary>
            <param name="absoluteUrl">Absolute url</param>
            <param name="searchKeyword">Output search keyword parameter</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEnginesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all search engines matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEngineInfoInternal(System.Int32)">
            <summary>
            Returns search engine with specified ID.
            </summary>
            <param name="engineId">Search engine ID</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEngineInfoInternal(System.String)">
            <summary>
            Returns search engine with specified name.
            </summary>
            <param name="engineName">Search engine name</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.SetSearchEngineInfoInternal(CMS.SiteProvider.SearchEngineInfo)">
            <summary>
            Sets (updates or inserts) specified search engine.
            </summary>
            <param name="engineObj">Search engine to be set</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.DeleteSearchEngineInfoInternal(CMS.SiteProvider.SearchEngineInfo)">
            <summary>
            Deletes specified search engine.
            </summary>
            <param name="engineObj">Search engine to be deleted</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.LoadEngineIDs(System.Boolean)">
            <summary>
            Loads static collection of search engine IDs
            </summary>
            <param name="forceLoad">Indicates wehther IDs should be loaded forcibly</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchEngineInfoProvider.GetSearchEngineNameForURLInternal(System.String,System.String@)">
            <summary>
            Returns search engine name for specified URL otherwise returns empty string.
            </summary>
            <param name="absoluteUrl">Absolute url</param>
            <param name="searchKeyword">Output search keyword parameter</param>
        </member>
        <member name="T:CMS.SiteProvider.SettingsCategoryContainer">
            <summary>
            Object encapsulating all settings objects to be accessible via macro engine.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryContainer.#ctor(CMS.SiteProvider.SettingsCategoryInfo,System.Int32,System.Boolean)">
            <summary>
            Creates new instance of SettingsCategoryContainer.
            </summary>
            <param name="category">Settings category to be encapsulated</param>
            <param name="siteId">ID of the site</param>
            <param name="keysAsObjects">Indicates whether settings keys are treated as normal children (InfoObjects) or simple values</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryContainer.GetValue(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryContainer.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryContainer.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryContainer.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains specified column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryContainer.SettingsCategoryInfo">
            <summary>
            Gets the encapsulated settings category info.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryContainer.SiteID">
            <summary>
            Gets the site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryContainer.KeysAsObjects">
            <summary>
            Indicates whether settings keys are treated as normal children (InfoObjects) or simple values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryContainer.Item(System.String)">
            <summary>
            Gets the value of the column, setter is not implemented.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryContainer.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AbuseReportInfo">
            <summary>
            AbuseReportInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AbuseReportInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfo.#ctor">
            <summary>
            Constructor - Creates an empty AbuseReportInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AbuseReportInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportUserID">
            <summary>
            Report User ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportWhen">
            <summary>
            Report When.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportGUID">
            <summary>
            Report GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportStatus">
            <summary>
            Report Status.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportTitle">
            <summary>
            Report Title.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportObjectType">
            <summary>
            Report Object Type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportCulture">
            <summary>
            Report Culture.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportComment">
            <summary>
            Report Comment.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportURL">
            <summary>
            Report URL.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportSiteID">
            <summary>
            Report Site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportID">
            <summary>
            Report ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AbuseReportInfo.ReportObjectID">
            <summary>
            Report Object ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AbuseReportInfoProvider">
            <summary>
            Class providing AbuseReportInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AbuseReportInfoProvider.SUPPORTED_OBJECT_TYPES">
            <summary>
            Object types which are supported to be displayed in details.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfoProvider.GetAbuseReportInfo(System.Int32)">
            <summary>
            Returns the AbuseReportInfo structure for the specified abuseReport.
            </summary>
            <param name="abuseReportId">AbuseReport id</param>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfoProvider.SetAbuseReportInfo(CMS.SiteProvider.AbuseReportInfo)">
            <summary>
            Sets (updates or inserts) specified abuseReport.
            </summary>
            <param name="abuseReport">AbuseReport to set</param>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfoProvider.DeleteAbuseReportInfo(CMS.SiteProvider.AbuseReportInfo)">
            <summary>
            Deletes specified abuseReport.
            </summary>
            <param name="infoObj">AbuseReport object</param>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfoProvider.DeleteAbuseReportInfo(System.Int32)">
            <summary>
            Deletes specified abuseReport.
            </summary>
            <param name="abuseReportId">AbuseReport id</param>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfoProvider.GetAbuseReports(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns Dataset with AbuseReportInfo.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Restricts maximum number of rows, for all rows use 0</param>
            <param name="columns">Select only specified columns</param>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfoProvider.GetAbuseReports(System.String,System.String)">
            <summary>
            Returns Dataset with AbuseReportInfo.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.AbuseReportInfoProvider.IsObjectTypeSupported(System.String)">
            <summary>
            Indicates if given obejct type is supproted to show details.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.SiteProvider.CustomTableTaskWorker">
            <summary>
            Class for asynchronous custom table data tasks logging.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableTaskWorker.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableTaskWorker.RunAsync">
            <summary>
            Run asynchronously task logging for custom table item specified by TableItem object.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableTaskWorker.TaskType">
            <summary>
            Type of the task.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableTaskWorker.TableProvider">
            <summary>
            Custom table item provider.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableTaskWorker.TableItem">
            <summary>
            Custom table item.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableTaskWorker.ServerId">
            <summary>
            Server ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableTaskWorker.SiteId">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ITimeZoneManager">
            <summary>
            Time zone manager.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ITimeZoneManager.TimeZoneType">
            <summary>
            Time zone type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ITimeZoneManager.CustomTimeZone">
            <summary>
            Custom time zone.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.OpenIDUserInfo">
            <summary>
            OpenIDUser data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.OpenIDUserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfo.#ctor">
            <summary>
            Constructor - Creates an empty OpenIDUser object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new OpenIDUser object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.OpenIDUserInfo.OpenIDUserID">
            <summary>
            Object ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.OpenIDUserInfo.OpenID">
            <summary>
            OpenID Claimed Identifier.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.OpenIDUserInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.OpenIDUserInfo.OpenIDProviderUrl">
            <summary>
            URL of OpenID provider.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.OpenIDUserInfoProvider">
            <summary>
            Class providing UserOpenIDInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.GetOpenIDUserInfo(System.String)">
            <summary>
            Returns the OpenIDUserInfo structure for the specified OpenID Claimed Identifier.
            </summary>
            <param name="openID">OpenID Claimed Identifier</param>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.SetOpenIDUserInfo(CMS.SiteProvider.OpenIDUserInfo)">
            <summary>
            Sets (updates or inserts) specified openIDUser object.
            </summary>
            <param name="openIDUser">OpenIDUserInfo to set</param>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.DeleteOpenIDUserInfo(CMS.SiteProvider.OpenIDUserInfo)">
            <summary>
            Deletes specified openIDUser object.
            </summary>
            <param name="infoObj">OpenIDUserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.DeleteOpenIDUserInfo(System.String)">
            <summary>
            Deletes specified openIDUser object.
            </summary>
            <param name="openID">OpenID Claimed Identifier</param>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.GetUserInfoByOpenID(System.String)">
            <summary>
            Returns UserInfo connected to specified OpenID Claimed Identifier.
            </summary>
            <param name="openId">OpenID Claimed Identifier</param>
            <returns>UserInfo</returns>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.GetOpenIDByUserID(System.Int32)">
            <summary>
            Returns OpenID Claimed Identifier connected with specified UserID.
            </summary>
            <param name="userId">UserID to look for</param>
            <returns>OpenID Claimed Identifier</returns>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.AddOpenIDToUser(System.String,System.String,System.Int32)">
            <summary>
            Assigns OpenID Claimed Identifier to the user.
            </summary>
            <param name="openId">OpenID Claimed Identifier</param>
            <param name="openIdProviderUrl">URL of OpenID provider</param>
            <param name="userId">User ID</param>
            <returns>Returns true if user exists and OpenID Claimed Identifier is not already assigned.</returns>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.RemoveOpenIDFromUser(System.String,System.Int32)">
            <summary>
            Deletes OpenIDUserInfo by specified OpenID Claimed Identifier and checks if given User ID is part of this object.
            </summary>
            <param name="openId">OpenID Claimed Identifier</param>
            <param name="userId">UserID for check</param>
            <returns>Returns true if OpenIDUserInfo was found by OpenID Claimed Identifier and if User ID matches to this object.</returns>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.UpdateOpenIDUserInfo(System.String,System.String,System.Int32)">
            <summary>
            Updates OpenID Claimed Identifier for associated user. 
            </summary>
            <param name="oldOpenID">Old OpenID Claimed Identifier related to some user</param>
            <param name="newOpenID">New OpenID Claimed Identifier</param>
            <param name="userID">ID of given user</param>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.GetUserInfoByOpenIDInternal(System.String)">
            <summary>
            Returns UserInfo connected to specified OpenID Claimed Identifier.
            </summary>
            <param name="openId">OpenID Claimed Identifier</param>
            <returns>UserInfo</returns>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.GetOpenIDByUserIDInternal(System.Int32)">
            <summary>
            Returns OpenID Claimed Identifier connected with specified UserID.
            </summary>
            <param name="userId">UserID to look for</param>
            <returns>OpenID Claimed Identifier</returns>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.SetOpenIDUserInfoInternal(CMS.SiteProvider.OpenIDUserInfo)">
            <summary>
            Sets (updates or inserts) specified openIDUser object.
            </summary>
            <param name="openIDUser">OpenIDUserInfo to set</param>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.DeleteOpenIDUserInfoInternal(CMS.SiteProvider.OpenIDUserInfo)">
            <summary>
            Deletes specified openIDUser object.
            </summary>
            <param name="infoObj">OpenIDUserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.GetOpenIDUserInfoInternal(System.String)">
            <summary>
            Returns the OpenIDUserInfo structure for the specified OpenID Claimed Identifier.
            </summary>
            <param name="openID">OpenID Claimed Identifier</param>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.AddOpenIDToUserInternal(System.String,System.String,System.Int32)">
            <summary>
            Assigns OpenID Claimed Identifier to the user.
            </summary>
            <param name="openId">OpenID Claimed Identifier</param>
            <param name="openIdProviderUrl">URL of OpenID provider</param>
            <param name="userId">User ID</param>
            <returns>Returns true if user exists and OpenID Claimed Identifier is not already assigned.</returns>
        </member>
        <member name="M:CMS.SiteProvider.OpenIDUserInfoProvider.RemoveOpenIDFromUserInternal(System.String,System.Int32)">
            <summary>
            Deletes OpenIDUserInfo by specified OpenID Claimed Identifier and checks if given User ID is part of this object.
            </summary>
            <param name="openId">OpenID Claimed Identifier</param>
            <param name="userId">UserID for check</param>
            <returns>Returns true if OpenIDUserInfo was found by OpenID Claimed Identifier and if User ID matches to this object.</returns>
        </member>
        <member name="T:CMS.SiteProvider.UIElementInfo">
            <summary>
            Permission info data container.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UIElementInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfo.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfo.#ctor">
            <summary>
            Constructor, creates an empty UIElementInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty UIElementInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementDescription">
            <summary>
            Description of the UI Element (used for example in the UI Guide).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementSize">
            <summary>
            Size of the UI Element when it is element of UIToolbar.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementIsCustom">
            <summary>
            Indicates if UI element is custom or system.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementName">
            <summary>
            UI Element code name (unique within the parent resource).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementTargetURL">
            <summary>
            URL of the page which is displayed when UI element (menu item / tab) is clicked. 
            If element does not represent menu item / tab it is empty.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementID">
            <summary>
            ID of the UIElement.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementGUID">
            <summary>
            Unique identifier of the UI element.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementIDPath">
            <summary>
            Path representing the tree path of the UI element.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementLevel">
            <summary>
            UI element level within the tree of all UI elements of the resource.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementLastModified">
            <summary>
            Data and time the element was last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementDisplayName">
            <summary>
            UI Element display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementParentID">
            <summary>
            ID of the parent UI element.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementChildCount">
            <summary>
            Number of child UI elements.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementResourceID">
            <summary>
            ID of the resource the UI element belongs to.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementOrder">
            <summary>
            Order within the parent UI element.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementIconPath">
            <summary>
            Relative path to the UI element icon.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementCaption">
            <summary>
            UI element caption. If set, UI element represents menu item / tab.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfo.ElementFromVersion">
            <summary>
            Version from which is UI element present in CMS.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UIElementInfoProvider">
            <summary>
            UIElement info data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UIElementInfoProvider.UIElementIDLength">
            <summary>
            Length of the UI element ID, 8 by default.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementInfo(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementInfo(System.Int32)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementId">ID of the UIElement to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRootUIElementInfo(System.Int32)">
            <summary>
            Returns the root UIElement info object for Resource.
            </summary>
            <param name="resourceId">ID of resource (module)</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementInfo(System.String,System.String)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementName">Codename of the UIElement to retrieve</param>
            <param name="resourceName">Name of the resource (module)</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementInfo(System.Int32,System.String)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementName">Codename of the UIElement to retrieve</param>
            <param name="resourceId">ID of the resource (module)</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.SetUIElementInfo(CMS.SiteProvider.UIElementInfo)">
            <summary>
            Sets the specified UIElement data.
            </summary>
            <param name="infoObj">UIElement info data</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.DeleteUIElementInfo(CMS.SiteProvider.UIElementInfo)">
            <summary>
            Deletes the specified UIElement.
            </summary>
            <param name="infoObj">UIElement object</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.DeleteUIElementInfo(System.Int32)">
            <summary>
            Deletes the specified UIElement.
            </summary>
            <param name="elementId">Element ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElements(System.String)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElements(System.String,System.String)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElements(System.String,System.String,System.Int32)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElements(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIMenuElements(System.String)">
            <summary>
            Returns DataSet with UI elements from second level to fill UI menu and panel.
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetChildUIElements(System.String,System.String)">
            <summary>
            Returns DataSet with child elements of the specified element ordered by ElementOrder. 
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
            <param name="elementName">CodeName of the UIElement</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetChildUIElements(System.Int32)">
            <summary>
            Returns DataSet with child elements of the specified parent element.
            </summary>
            <param name="parentElementId">ID of the parent UIElement</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetChildUIElements(System.Int32,System.String)">
            <summary>
            Returns DataSet with child elements of the specified parent element.
            </summary>
            <param name="parentElementId">ID of the parent UIElement</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetResourceUIElements(System.Int32)">
            <summary>
            Returns DataSet with child elements of the specified resource element.
            Only first level will be returned.
            </summary>
            <param name="resourceId">ID of the resource</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.MoveUIElementUp(System.Int32)">
            <summary>
            Moves specified UI element up within the parent UI element.
            </summary>
            <param name="elementId">ID of the UI element</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.MoveUIElementDown(System.Int32)">
            <summary>
            Moves specified UI element down within the parent UI element.
            </summary>
            <param name="elementId">ID of the UI element</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.SetUIElementChildCount(System.Int32)">
            <summary>
            Sets correct ElementChildCount to the specified UIElement.
            </summary>
            <param name="elementId">ID of the UIElement</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRolesUIElements(System.String,System.String)">
            <summary>
            Returns all UIElements for which the roles have permission.
            </summary>
            <param name="roles">Role IDs</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRolesUIElements(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Returns all UIElements for which the user have permission.
            </summary>
            <param name="ui">User info object</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRootUIElementInfo(System.String)">
            <summary>
            Returns root UIElement for the specified module.
            </summary>
            <param name="resourceName">Name of the module</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRootChildUIElements(System.String)">
            <summary>
            Returns child UIElements for the specified module.
            </summary>
            <param name="resourceName">Name of the module</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetLastElementOrder(System.Int32)">
            <summary>
            Returns last element order for specified parent element.
            </summary>
            <param name="parentElementId">Parent element id</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.RefreshDataCounts">
            <summary>
            Updates all counts for all sub-objects.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementInfoInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementInfoInternal(System.Int32)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementId">ID of the UIElement to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementInfoInternal(System.String,System.String)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementName">Codename of the UIElement to retrieve</param>
            <param name="resourceName">Name of the resource (module)</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementInfoInternal(System.Int32,System.String)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementName">Codename of the UIElement to retrieve</param>
            <param name="resourceId">ID of the resource (module)</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.SetUIElementInfoInternal(CMS.SiteProvider.UIElementInfo)">
            <summary>
            Sets the specified UIElement data.
            </summary>
            <param name="infoObj">UIElement info data</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.DeleteUIElementInfoInternal(CMS.SiteProvider.UIElementInfo)">
            <summary>
            Deletes the specified UIElement.
            </summary>
            <param name="infoObj">UIElement object</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIElementsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetUIMenuElementsInternal(System.String)">
            <summary>
            Returns DataSet with UI elements from second level to fill UI menu and panel.
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetChildUIElementsInternal(System.String,System.String)">
            <summary>
            Returns DataSet with child elements of the specified element ordered by ElementOrder. 
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
            <param name="elementName">CodeName of the UIElement</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetChildUIElementsInternal(System.Int32,System.String)">
            <summary>
            Returns DataSet with child elements of the specified parent element.
            </summary>
            <param name="parentElementId">ID of the parent UIElement</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetResourceUIElementsInternal(System.Int32)">
            <summary>
            Returns DataSet with child elements of the specified resource element.
            Only first level will be returned.
            </summary>
            <param name="resourceId">ID of the resource</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.MoveUIElementUpInternal(System.Int32)">
            <summary>
            Moves specified UI element up within the parent UI element.
            </summary>
            <param name="elementId">ID of the UI element</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.MoveUIElementDownInternal(System.Int32)">
            <summary>
            Moves specified UI element down within the parent UI element.
            </summary>
            <param name="elementId">ID of the UI element</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.SetUIElementChildCountInternal(System.Int32)">
            <summary>
            Sets correct ElementChildCount to the specified UIElement.
            </summary>
            <param name="elementId">ID of the UIElement</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRolesUIElementsInternal(System.String,System.String)">
            <summary>
            Returns all UIElements for which the given roles have permission.
            </summary>
            <param name="roles">Roles IDs separated with comma</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRolesUIElementsInternal(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Returns all UIElements for which the given user have permission (applies validTo condition).
            </summary>
            <param name="ui">User info object</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRootUIElementInfoInternal(System.Int32)">
            <summary>
            Returns the root UIElement info object for Resource.
            </summary>
            <param name="resourceId">ID of resource (module)</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRootUIElementInfoInternal(System.String)">
            <summary>
            Returns root UIElement for the specified module.
            </summary>
            <param name="resourceName">Name of the module</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetRootChildUIElementsInternal(System.String)">
            <summary>
            Returns child UIElements for the specified module.
            </summary>
            <param name="resourceName">Name of the module</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetLastElementOrderInternal(System.Int32)">
            <summary>
            Returns last order for specified parent element.
            </summary>
            <param name="parentElementId">Parent element id</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.RefreshDataCounts(CMS.DataEngine.GeneralConnection)">
            <summary>
            Updates all counts for all sub-objects.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.RemoveObjectDependencies(CMS.SiteProvider.UIElementInfo)">
            <summary>
            Removes object dependencies.
            </summary>
            <param name="infoObj">Object for which the dependencies should be removed</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.UpdateIDPath(System.Int32,System.Int32)">
            <summary>
            Updates the IDPaths for the elements which has been moved.
            </summary>
            <param name="oldParentId">ID of the old parent</param>
            <param name="newParentid">ID of the new parent</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.CreateIDPath(System.String,System.Int32)">
            <summary>
            Returns (and sets in DB) ID path for given UIElementID using his parent ID path.
            </summary>
            <param name="parentPath">ElementIDPath of the parent UIElement</param>
            <param name="elementId">UIElement ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UIElementInfoProvider.GetIDPath(System.String,System.Int32)">
            <summary>
            Returns ElementIDPath in correct format.
            </summary>
            <param name="parentPath">ElementIDPath of the parent UIElement</param>
            <param name="elmentId">Post ID</param>
        </member>
        <member name="P:CMS.SiteProvider.UIElementInfoProvider.MaxUIElementLevel">
            <summary>
            Returns maximal availbale level of the UI element.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.RoleUIElementInfo">
            <summary>
            RoleUIElementInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RoleUIElementInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfo.#ctor">
            <summary>
            Constructor - Creates an empty RoleUIElementInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RoleUIElementInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleUIElementInfo.ElementID">
            <summary>
            ID of the UIElement.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleUIElementInfo.RoleID">
            <summary>
            ID of the role.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.RoleUIElementInfoProvider">
            <summary>
            Class providing RoleUIElementInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.GetRoleUIElements(System.String,System.String)">
            <summary>
            Returns the RoleUIElementInfo structure for the specified role UI element.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.GetRoleUIElementInfo(System.Int32,System.Int32)">
            <summary>
            Returns the RoleUIElementInfo structure for the specified role UI element.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="elementId">ElementID</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.SetRoleUIElementInfo(CMS.SiteProvider.RoleUIElementInfo)">
            <summary>
            Sets (updates or inserts) specified role UI element.
            </summary>
            <param name="infoObj">RoleUIElement to set</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.DeleteRoleUIElementInfo(CMS.SiteProvider.RoleUIElementInfo)">
            <summary>
            Deletes specified role UI element.
            </summary>
            <param name="infoObj">RoleUIElement object</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.DeleteRoleUIElementInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified role UI Element.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="elementId">ElementID</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.AddRoleUIElementInfo(System.Int32,System.Int32)">
            <summary>
            Add specified role UI Element.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="elementId">ElementID</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.GetRoleUIElementInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the RoleUIElementInfo structure for the specified role UI element.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="elementId">ElementID</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.GetRoleUIElementsInternal(System.String,System.String)">
            <summary>
            Gets all the role UI elements data.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.SetRoleUIElementInfoInternal(CMS.SiteProvider.RoleUIElementInfo)">
            <summary>
            Sets (updates or inserts) specified role UI element.
            </summary>
            <param name="infoObj">RoleUIElement to set</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleUIElementInfoProvider.DeleteRoleUIElementInfoInternal(CMS.SiteProvider.RoleUIElementInfo)">
            <summary>
            Deletes specified role UI element.
            </summary>
            <param name="infoObj">RoleUIElement object</param>
        </member>
        <member name="T:CMS.SiteProvider.CustomTableHelper">
            <summary>
            Class providing helper methods for custom tables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableHelper.LogDataChanges">
            <summary>
            Indicates if logging data changes is enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CMS.SiteProvider.UIElementSizeEnum">
            <summary>
            Size of the UI Element when used in UI Toolbar.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UIElementSizeEnum.Large">
            <summary>
            Large.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UIElementSizeEnum.Regular">
            <summary>
            Regular.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.IControlContextManager">
            <summary>
            Context manager interface.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.IControlContextManager.ControlContext">
            <summary>
            Gets the current ControlContext object.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.MetaFileURLProvider">
            <summary>
            Provider for metafiles URLs.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileURLProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileURLProvider.GetMetaFileUrl(System.Guid,System.String)">
            <summary>
            Returns meta file url.
            </summary>
            <param name="metaFileGuid">Meta file GUID</param>
            <param name="fileName">File name without extension</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileURLProvider.GetWebDAVUrl(System.Guid,System.String,System.String)">
            <summary>
            Gets meta file relative URL.
            </summary>
            <param name="GUID">Meta file GUID</param>
            <param name="fileName">Meta file name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileURLProvider.GetMetaFileUrlInternal(System.Guid,System.String)">
            <summary>
            Returns meta file url.
            </summary>
            <param name="metaFileGuid">Meta file GUID</param>
            <param name="fileName">File name without extension</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileURLProvider.GetWebDAVUrlInternal(System.Guid,System.String,System.String)">
            <summary>
            Gets meta file relative URL.
            </summary>
            <param name="GUID">Meta file GUID</param>
            <param name="fileName">Meta file name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.SiteProvider.ControlContext">
            <summary>
            Context object contains properties with information about current context.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ControlContext.WIDGET_PROPERTIES">
            <summary>
            Widget properties.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ControlContext.LIVE_SITE">
            <summary>
            Live site.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ControlContext.ContextName">
            <summary>
            Gets or sets the current context name.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteListInfo.#ctor">
            <summary>
            Constructor - Creates an empty SiteListInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SiteListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.SiteProvider.ICustomSearchIndex">
            <summary>
            Custom search index interface.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ICustomSearchIndex.Rebuild(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Rebuild custom search index.
            </summary>
            <param name="srchInfo">Current index info</param>
        </member>
        <member name="T:CMS.SiteProvider.SearchDirectory">
            <summary>
            Provides methods for manipulation with Lucene.NET index.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.#ctor(System.String)">
            <summary>
            Creates instance of directory class.
            </summary>
            <param name="dirName">Directory name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.Close">
            <summary>
            Free all resources and prepares object for new using.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.CreateOutput(System.String)">
            <summary>
            Creates instance of IndexOutput for writing to file. 
            </summary>
            <param name="name">File name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.DeleteFile(System.String)">
            <summary>
            Deletes file.
            </summary>
            <param name="name">File name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.FileExists(System.String)">
            <summary>
            Returns whether file exists.
            </summary>
            <param name="name">Filename.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.FileLength(System.String)">
            <summary>
            Returns length of the file.
            </summary>
            <param name="name">File name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.FileModified(System.String)">
            <summary>
            Returns when was file modified for last time.
            </summary>
            <param name="name">File name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.List">
            <summary>
            Returns list of files in directory.
            </summary>        
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.OpenInput(System.String)">
            <summary>
            Opens file for reading.
            </summary>
            <param name="name">File name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.RenameFile(System.String,System.String)">
            <summary>
            Renames file.
            </summary>
            <param name="from">Original file name.</param>
            <param name="to">New file name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.TouchFile(System.String)">
            <summary>
            Creates empty file.
            </summary>
            <param name="name">File name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.ClearLock(System.String)">
            <summary>
            Clears (releases) lock.
            </summary>
            <param name="name">Lock name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchDirectory.MakeLock(System.String)">
            <summary>
            Makes (creates) lock.
            </summary>
            <param name="name">Lock name.</param>
        </member>
        <member name="T:CMS.SiteProvider.SearchIndexInput">
            <summary>
            Class providing methods for getting data from file.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInput.#ctor(System.String)">
            <summary>
            Creates new instance of index input.
            </summary>
            <param name="path">File path.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInput.Close">
            <summary>
            Closes the input.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInput.GetFilePointer">
            <summary>
            Returns current file position.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInput.Length">
            <summary>
            Returns lenght of current file.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInput.ReadByte">
            <summary>
            Returns one byte from input file.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInput.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads specified number of bytes from input file.
            </summary>
            <param name="b">Array where result is stored.</param>
            <param name="offset">Begin offset.</param>
            <param name="len">Number of bytes to read.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInput.Seek(System.Int64)">
            <summary>
            Seeks to given position.
            </summary>
            <param name="pos">Position.</param>
        </member>
        <member name="T:CMS.SiteProvider.SearchIndexOutput">
            <summary>
            Class providing methods for writing data to file.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexOutput.#ctor(System.String)">
            <summary>
            Creates new instance of index input.
            </summary>
            <param name="path">File path.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexOutput.Close">
            <summary>
            Closes the file.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexOutput.Flush">
            <summary>
            Flushes file output.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexOutput.GetFilePointer">
            <summary>
            Returns file postition.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexOutput.Length">
            <summary>
            Returns file lenght.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexOutput.Seek(System.Int64)">
            <summary>
            Seeks to position.
            </summary>
            <param name="pos">Position.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexOutput.WriteByte(System.Byte)">
            <summary>
            Writes single byte to output.
            </summary>
            <param name="b">Byte to write.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexOutput.WriteBytes(System.Byte[],System.Int32)">
            <summary>
            Writes n bytes into file specified by array.
            </summary>
            <param name="b">Bytes to write.</param>
            <param name="length">Number of bytes to be written.</param>
        </member>
        <member name="T:CMS.SiteProvider.SearchLock">
            <summary>
            Provides instance methods for locking files. Primary used by Smart search module when Index writer writes data into index.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchLock.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of SearchLock class.
            </summary>
            <param name="dirPath">Path to directory.</param>
            <param name="lockName">Lock file name.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchLock.IsLocked">
            <summary>
            Returns whether current directory is locked.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchLock.Obtain">
            <summary>
            Obtains lock for directory.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchLock.Release">
            <summary>
            Releases lock for directory.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SubSetAnalyzer">
            <summary>
            SubSet smart search analyzer.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SubSetAnalyzer.#ctor(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            SubSetAnalyzer constructor.
            </summary>
            <param name="isSearch">Indicates whether analyzer is used for indexing or searchning</param>
            <param name="startsWith">If is true the words are indexed similar to word*, if is false the words are indexed similar to *word*</param>
            <param name="minimalLength">Sets the minimal length of set which should be indexed</param>
        </member>
        <member name="M:CMS.SiteProvider.SubSetAnalyzer.TokenStream(System.String,System.IO.TextReader)">
            <summary>
            Token stream method.
            </summary>
            <param name="fieldName">Field name</param>
            <param name="reader">Text reader</param>
        </member>
        <member name="M:CMS.SiteProvider.SubSetAnalyzer.GetSubsets(System.String)">
            <summary>
            Returns the subsets for words in specified text.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:CMS.SiteProvider.SubSetAnalyzer.ProcessWord(System.String,System.Boolean)">
            <summary>
            Returns subsets for specified word.
            </summary>
            <param name="word">Word</param>
            <param name="startsWith">Indicates whether word should be processed as 'subset' or startsWith'</param>
        </member>
        <member name="M:CMS.SiteProvider.SubSetAnalyzer.SubSets(System.String,System.Int32,System.Int32)">
            <summary>
            Returns the subset for specified word, with dependence on recursive round.
            </summary>
            <param name="word">Word</param>
            <param name="round">Recursive round</param>
            <param name="length">Required subset length</param>
        </member>
        <member name="P:CMS.SiteProvider.SubSetAnalyzer.MinimalLength">
            <summary>
            Gets or sets the minimal length of set which should be indexed.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SubSetAnalyzer.WordRegex">
            <summary>
            Gets the regular expression for word splitting.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TagHelper">
            <summary>
            Tag helper class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TagHelper.mTagsRegex">
            <summary>
            Regex for detection tags separated with comma or space from string.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagHelper.GetTags(System.String)">
             <summary>
             Returns hash table of tags from tags string.
             </summary>
            <param name="tags">Tags string separtated with comma or space</param>
        </member>
        <member name="M:CMS.SiteProvider.TagHelper.GetAllTags(System.Int32,System.Collections.Hashtable@)">
            <summary>
            Returns Hastable of all tags.
            </summary>
            <param name="groupId">Tags group id</param>
            <param name="tags">Tags hash table used as referention table for comparsion</param>
        </member>
        <member name="M:CMS.SiteProvider.TagHelper.GetNewTags(System.Collections.Hashtable,System.Collections.Hashtable@)">
            <summary>
            Returns ArrayList of new tags.
            </summary>
            <param name="tagTable">Tags hash table</param>
            <param name="tags">Tags hash table used as referention table for comparsion</param>
        </member>
        <member name="M:CMS.SiteProvider.TagHelper.GetCheckedOldTags(System.Collections.Hashtable,System.Int32)">
            <summary>
            Returns arraylist of tags witch are used before.
            </summary>
            <param name="tagTable">Tags hash table</param>
            <param name="groupId">Tag group id</param>
        </member>
        <member name="M:CMS.SiteProvider.TagHelper.GetTagsForSave(System.String)">
            <summary>
            Returns tags prepared for save for document
            (alphabetical sorted and with maximal length 250)
            </summary>
            <param name="tags">Unsorted tags string</param>
        </member>
        <member name="T:CMS.SiteProvider.UserCultureInfo">
            <summary>
            UserCultureInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserCultureInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserCultureInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserCultureInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserCultureInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserCultureInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserCultureInfo.CultureID">
            <summary>
            Culture ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UserCultureInfoProvider">
            <summary>
            Class providing UserCultureInfo managment.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.GetUserCultureInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the UserCultureInfo structure for the specified userCulture.
            </summary>
            <param name="userId">ID of user</param>
            <param name="cultureId">ID of culture</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.RemoveUserFromAllCultures(System.Int32)">
            <summary>
            Deletes allowed cultures on all sites for given user.
            </summary>
            <param name="userId">ID of user</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.RemoveUserFromSite(System.Int32,System.Int32)">
            <summary>
            Removes user's allowed cultures for given site.
            </summary>
            <param name="userId">ID of user</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.SetUserCultureInfo(CMS.SiteProvider.UserCultureInfo)">
            <summary>
            Sets (updates or inserts) specified userCulture.
            </summary>
            <param name="userCulture">UserCulture to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.DeleteUserCultureInfo(CMS.SiteProvider.UserCultureInfo)">
            <summary>
            Deletes specified UserCulture.
            </summary>
            <param name="infoObj">UserCulture object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.RemoveUserFromCulture(System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes user from given culture of the given site.
            </summary>
            <param name="userId">ID of user</param>
            <param name="cultureId">ID of culture</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.RemoveUserFromCulture(CMS.SiteProvider.UserInfo,CMS.SiteProvider.CultureInfo,CMS.SiteProvider.SiteInfo)">
            <summary>
            Removes user from given culture of the given site.
            </summary>
            <param name="user">User info object</param>
            <param name="culture">Culture info object</param>
            <param name="site">Site info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.AddUserToCulture(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds user to allowed culture of the site.
            </summary>
            <param name="userId">ID of user</param>
            <param name="cultureId">ID of culture</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.AddUserToCulture(CMS.SiteProvider.UserInfo,CMS.SiteProvider.CultureInfo,CMS.SiteProvider.SiteInfo)">
            <summary>
            Adds user to allowed culture of the site.
            </summary>
            <param name="user">User info object</param>
            <param name="culture">Culture info object</param>
            <param name="site">Site info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.GetUserCultures(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Gets all allowed cultures for given user and site filtered by where condition and ordered by orderBy expression.
            </summary>
            <param name="userId">ID of user</param>
            <param name="siteId">ID of site</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <returns>User's allowed cultures.</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.DeleteSiteAllowedCulture(System.Int32,System.Int32)">
            <summary>
            Deletes allowed culture for all users on given site.
            </summary>
            <param name="cultureId">ID of culture</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.GetUserCultureInfoInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the UserCultureInfo structure for the specified userCulture.
            </summary>
            <param name="userId">ID of user</param>
            <param name="cultureId">ID of culture</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.RemoveUserFromAllCulturesInternal(System.Int32)">
            <summary>
            Deletes allowed cultures on all sites for given user.
            </summary>
            <param name="userId">ID of user</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.RemoveUserFromSiteInternal(System.Int32,System.Int32)">
            <summary>
            Removes user's allowed cultures for given site.
            </summary>
            <param name="userId">ID of user</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.SetUserCultureInfoInternal(CMS.SiteProvider.UserCultureInfo)">
            <summary>
            Sets (updates or inserts) specified userCulture.
            </summary>
            <param name="userCulture">UserCulture to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.DeleteUserCultureInfoInternal(CMS.SiteProvider.UserCultureInfo)">
            <summary>
            Deletes specified userCulture.
            </summary>
            <param name="infoObj">UserCulture object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.GetUserCulturesInternal(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Gets all allowed cultures for given user and site filtered by where condition and ordered by orderBy expression.
            </summary>
            <param name="userId">ID of user</param>
            <param name="siteId">ID of site, 0 for all sites</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <returns>User's allowed cultures.</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.DeleteSiteAllowedCultureInternal(System.Int32,System.Int32)">
            <summary>
            Deletes allowed culture for all users on given site.
            </summary>
            <param name="cultureId">ID of culture</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserCultureInfoProvider.AddUserToCultureInternal(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds user to allowed culture of the site.
            </summary>
            <param name="userId">ID of user</param>
            <param name="cultureId">ID of culture</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="T:CMS.SiteProvider.SiteModule">
            <summary>
            Module registration.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteModule.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteModule.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteModule.ProcessCommand(System.String,System.Object[])">
            <summary>
            Processes the specified command.
            </summary>
            <param name="commandName">Command name</param>
            <param name="parameters">Command parameters</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteModule.GetContexts">
            <summary>
            Returns the hashtable of the module contexts. [name.ToLower()] -> [AbstractContext]
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="T:CMS.SiteProvider.TimeZoneTypeEnum">
            <summary>
            Defines timezone types. 
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneTypeEnum.Inherit">
            <summary>
            Indicates whether time zone type is inherited.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneTypeEnum.Server">
            <summary>
            Server timezone type.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneTypeEnum.WebSite">
            <summary>
             WebSite timezone type.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneTypeEnum.User">
            <summary>
            User timezone type.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneTypeEnum.Custom">
            <summary>
            Custom timezone type.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ActivityPointsEnum">
            <summary>
            Activity points enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ActivityPointsEnum.ForumPost">
            <summary>
            Forum post.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ActivityPointsEnum.MessageBoardPost">
            <summary>
            Messsage board post.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ActivityPointsEnum.BlogCommentPost">
            <summary>
            Blog comment post.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ActivityPointsEnum.BlogPosts">
            <summary>
            Blog posts.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ActivityPointsEnum.All">
            <summary>
            All.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BadgeInfo">
            <summary>
            BadgeInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadgeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfo.#ctor">
            <summary>
            Constructor - Creates an empty BadgeInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BadgeInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadgeInfo.BadgeID">
            <summary>
            Badge id.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadgeInfo.BadgeImageURL">
            <summary>
            Badge image URL.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadgeInfo.BadgeName">
            <summary>
            Badge name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadgeInfo.BadgeDisplayName">
            <summary>
            Badge display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadgeInfo.BadgeIsAutomatic">
            <summary>
            Badge is automatic.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadgeInfo.BadgeTopLimit">
            <summary>
            Badge top limit.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadgeInfo.BadgeGUID">
            <summary>
            Badge guid.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadgeInfo.BadgeLastModified">
            <summary>
            Badge last modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BadgeInfoProvider">
            <summary>
            Class providing BadgeInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.GetBadgeInfo(System.Int32)">
            <summary>
            Returns the BadgeInfo structure for the specified badge.
            </summary>
            <param name="badgeId">Badge id</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.GetBadgeInfo(System.String)">
            <summary>
            Returns the BadgeInfo structure for the specified badge.
            </summary>
            <param name="badgeName">Badge name</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.SetBadgeInfo(CMS.SiteProvider.BadgeInfo)">
            <summary>
            Sets (updates or inserts) specified badge.
            </summary>
            <param name="badge">Badge to set</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.DeleteBadgeInfo(CMS.SiteProvider.BadgeInfo)">
            <summary>
            Deletes specified badge.
            </summary>
            <param name="infoObj">Badge object</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.DeleteBadgeInfo(System.Int32)">
            <summary>
            Deletes specified badge.
            </summary>
            <param name="badgeId">Badge id</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.UpdateActivityPointsToUser(CMS.SiteProvider.ActivityPointsEnum,System.Int32,System.String,System.Boolean)">
            <summary>
            Adds (subtracts) activity points to specified user.
            </summary>
            <param name="pointsType">Activity points type</param>
            <param name="userID">User ID</param>
            <param name="siteName">Site name</param>
            <param name="add">If true add points else subtract poits</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.UpdateUserBadge(System.Int32)">
            <summary>
            Udates badge to specified user.
            </summary>
            <param name="userID">User id</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.GetBadges(System.String,System.String)">
            <summary>
            Returns DataSet with all badges according to WHERE condition.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.GetBadges(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with all badges according to WHERE condition.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY</param>
            <param name="topN">TOP N condition</param>
            <param name="columns">Specifies dataset's columns</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.BadgeCollectionChanged">
            <summary>
            Re-distributes user badges according to current badge collection.
            This opperation is time-consuming for large amount of users. It's recommended
            call this method from separate thread.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, the clear tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.GetBadgeInfoInternal(System.Int32)">
            <summary>
            Returns the BadgeInfo structure for the specified badge.
            </summary>
            <param name="badgeId">Badge id</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.GetBadgeInfoInternal(System.String)">
            <summary>
            Returns the BadgeInfo structure for the specified badge.
            </summary>
            <param name="badgeName">Badge name</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.SetBadgeInfoInternal(CMS.SiteProvider.BadgeInfo)">
            <summary>
            Sets (updates or inserts) specified badge.
            </summary>
            <param name="badge">Badge to set</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.DeleteBadgeInfoInternal(CMS.SiteProvider.BadgeInfo)">
            <summary>
            Deletes specified badge.
            </summary>
            <param name="infoObj">Badge object</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.UpdateUserBadgeInternal(System.Int32)">
            <summary>
            Udates badge to specified user.
            </summary>
            <param name="userID">User id</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.GetBadgesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with all badges according to WHERE condition.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY</param>
            <param name="topN">TOP N condition</param>
            <param name="columns">Specifies dataset's columns</param>
        </member>
        <member name="M:CMS.SiteProvider.BadgeInfoProvider.BadgeCollectionChangedInternal">
            <summary>
            Re-distributes user badges according to current badge collection.
            This opperation is time-consuming for large amount of users. It's recommended
            call this method from separate thread.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UserGenderEnum">
            <summary>
            User gender enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserGenderEnum.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserGenderEnum.Male">
            <summary>
            Male.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserGenderEnum.Female">
            <summary>
            Female.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.FriendshipStatusEnum">
            <summary>
            Friendship status enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FriendshipStatusEnum.Waiting">
            <summary>
             Waiting
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FriendshipStatusEnum.Rejected">
            <summary>
             Rejected
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FriendshipStatusEnum.Approved">
            <summary>
             Approved
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FriendshipStatusEnum.None">
            <summary>
             None
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BadWordsHelper">
            <summary>
            Helper class for bad words.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.BadWordsAction(System.String)">
            <summary>
            Gets default action for the bad words from the settings.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.BadWordsReplacement(System.String)">
            <summary>
            Gets default replacement for the bad words from the settings.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.PerformBadWordsCheck(System.String)">
            <summary>
            Indicates if the bad words check should be performed.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.CheckBadWords(CMS.SettingsProvider.GeneralizedInfo,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Int32)">
            <summary>
            Performs bad words check.
            </summary>
            <param name="obj">GeneralizedInfo info object</param>
            <param name="columns">Columns to check (column name and column size). If columns size is zero, column has maximal size and will not checked.</param>
            <param name="currentUserId">ID of current user</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.CheckBadWords(CMS.SettingsProvider.GeneralizedInfo,System.Collections.Generic.Dictionary{System.String,System.Int32},System.String,System.String,System.Int32)">
            <summary>
            Performs bad words check.
            </summary>
            <param name="obj">GeneralizedInfo info object</param>
            <param name="columns">Columns to check (column name and column size). If columns size is zero, column has maximal size and will not checked.</param>
            <param name="approvalColumn">Approval column name</param>
            <param name="approvalUserColumn">Approval user column name</param>
            <param name="currentUserId">ID of current user</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.CheckBadWords(CMS.SettingsProvider.GeneralizedInfo,System.Collections.Generic.Dictionary{System.String,System.Int32},System.String,System.String,System.String,System.Int32)">
            <summary>
            Performs bad words check.
            </summary>
            <param name="obj">Abstract info object</param>
            <param name="columns">Columns to check (column name and column size). If columns size is zero, column has maximal size and will not checked.</param>
            <param name="approvalColumn">Approval column name</param>
            <param name="approvalUserColumn">Approval user column name</param>
            <param name="reportTitle">Abuse report title</param>
            <param name="currentUserId">ID of current user</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.GetOptimizedUrl(System.String)">
            <summary>
            Gets URL of reported abuse and performes optimizations.
            </summary>
            <param name="objectType">Type of reported object</param>
            <returns>Optimized URL</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.GetReportComment(CMS.SettingsProvider.GeneralizedInfo,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Gets report comment.
            </summary>
            <param name="obj">Abstract info object</param>
            <param name="columns">Dictionary of columns (column name and size).</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordsHelper.GenerateWordList(System.Collections.Hashtable,CMS.SiteProvider.BadWordActionEnum)">
            <summary>
            Generates bad words list.
            </summary>
            <param name="foundWords">Hashtable with found words</param>
            <param name="action">Performed action</param>
            <returns>Comma-separated list of found words</returns>
        </member>
        <member name="P:CMS.SiteProvider.BadWordsHelper.DefaultReplacement">
            <summary>
            Default replacement for 'replace' action. It is used when replaced string has greater size than maximum limit.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.DefaultAvatarTypeEnum">
            <summary>
            Defines default avatar types.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.DefaultAvatarTypeEnum.User">
            <summary>
            Default user avatar type.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.DefaultAvatarTypeEnum.Male">
            <summary>
            Default male avatar type.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.DefaultAvatarTypeEnum.Female">
            <summary>
            Default female avatar type.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.DefaultAvatarTypeEnum.Group">
            <summary>
            Default group avatar type.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.FloodProtectionHelper">
            <summary>
            Flood protection class.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FloodProtectionHelper.CheckFlooding(System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if the current IP address or user floods the system.
            </summary>
            <param name="sitename">Site name</param> 
            <param name="ui">User info object</param>
        </member>
        <member name="P:CMS.SiteProvider.FloodProtectionHelper.UserBasedProtection">
            <summary>
            Gets or sets the value that indictaes whether for authenticated user is action's
            flood interval checked with dependence on current user or IP address
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CustomTableItemProvider">
            <summary>
            Class for retrieving custom table items.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CustomTableItemProvider.mConnection">
            <summary>
            Connection object to use for the DB access.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CustomTableItemProvider.mTypeInfos">
            <summary>
            Custom table TypeInfos [className.ToLower()] -> [TypeInfo]
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetSearchDocuments(CMS.SiteProvider.SearchIndexInfo,System.String,System.String,System.Int32)">
            <summary>
            Returns collection of search index documents filtered by input criteria.
            </summary>
            <param name="indexInfo">Search index info object</param>
            <param name="customTableClassName">Custom table class name</param>
            <param name="whereCondition">Where condition</param>
            <param name="lastItemId">Last item id</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetItem(System.Int32,System.String)">
            <summary>
            Returns custom table item of specified class name and item id.
            </summary>
            <param name="itemId">Item id</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetItem(System.Guid,System.String)">
            <summary>
            Returns custom table item of specified class name and item guid.
            </summary>
            <param name="itemGuid">Item guid</param>   
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetItems(System.String,System.String,System.String)">
            <summary>
            Returns Dataset of all data record for given custom table filtered out by where condition and ordered by given expression.
            </summary>
            <param name="className">Class name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>        
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetItems(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns Dataset of all data record for given custom table filtered out by where condition and ordered by given expression.
            </summary>
            <param name="className">Class name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>        
            <param name="topN">Top N items</param>        
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetItems(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns Dataset of all data record for given custom table filtered out by where condition and ordered by given expression.
            </summary>
            <param name="className">Class name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>        
            <param name="topN">Top N items</param>
            <param name="columns">Coluns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetItems(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns Dataset of all data record for given custom table filtered out by where condition and ordered by given expression.
            </summary>
            <param name="className">Class name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>        
            <param name="topN">Top N items</param>
            <param name="columns">Coluns to select, null or empty returns all columns</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total records</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.DeleteItems(System.String)">
            <summary>
            Deletes all items for given class.
            </summary>
            <param name="className">Custom table class name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.MoveItemUp(System.Int32,System.String)">
            <summary>
            Moves table item up in the order sequence.
            </summary>   
            <param name="itemId">Item ID</param>
            <param name="className">Custom table class name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.MoveItemDown(System.Int32,System.String)">
            <summary>
            Moves table item down in the order sequence.
            </summary>        
            <param name="itemId">Item ID</param>
            <param name="className">Custom table class name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.LicenseVersionCheck(System.String,CMS.SettingsProvider.FeatureEnum,CMS.SettingsProvider.VersionActionEnum)">
            <summary>
            License version checker.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature type</param>
            <param name="action">Type of ocation - edit, insert, delete</param>
            <returns>Returns true if feature is without any limitations for domain and action</returns>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.CheckLicense(CMS.SettingsProvider.VersionActionEnum,System.String)">
            <summary>
            Checks the license.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.ClearCustomLicHash">
            <summary>
            Clear custom tables hash count values.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetLastItemOrder(System.String)">
            <summary>
            Returns last item order for specified custom table.
            </summary>
            <param name="className">Custom table class name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetClassName(System.String)">
            <summary>
            Gets custom table class name from given object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetObjectType(System.String)">
            <summary>
            Gets custom table object type from given class name.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetItemName(CMS.SiteProvider.CustomTableItem,System.String)">
            <summary>
            Gets custom table item name.
            </summary>
            <param name="item">Custom table item</param>
            <param name="classDisplayName">Class display name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.#ctor(CMS.SettingsProvider.IUserInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="userInfo">Usre info</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.GetTypeInfo(System.String)">
            <summary>
            Returns the TypeInfo for specified class.
            </summary>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.Clear(System.Boolean)">
            <summary>
            Clear the class infos and properties lists of all object types.
            </summary>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItemProvider.Remove(System.String,System.Boolean)">
            <summary>
            Removes the specified TypeInfo.
            </summary>
            <param name="className">Class name to remove</param>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItemProvider.TypeInfos">
            <summary>
            Custom table TypeInfos [className.ToLower()] -> [TypeInfo]
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItemProvider.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched on item update.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItemProvider.UpdateSystemFields">
            <summary>
            True if system fileds should be updated.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItemProvider.UserInfo">
            <summary>
            User who sets the custom table item.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItemProvider.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on custom table operations.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CustomTableItem">
            <summary>
            Class providing access to custom table data.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.GetObjectTypeResourceKey">
            <summary>
            Gets the resource key for the name of the object type.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.Clone">
            <summary>
            Creates a clone of custom table item
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.UpdateData">
            <summary>
            Update custom table item DataClass.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.InsertData">
            <summary>
            Insert custom table item DataClass.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.DeleteData(System.Boolean)">
            <summary>
            Delete custom table item DataClass.
            </summary>
            <param name="logObjectChange">Indicates if the object change should be logged</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.#ctor(System.String)">
            <summary>
            Creates new CustomTableItem from data class name.
            </summary>
            <param name="className">Class name</param>        
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.#ctor(System.String,CMS.SiteProvider.CustomTableItemProvider)">
            <summary>
            Creates new CustomTableItem from data class name.
            </summary>
            <param name="className">Class name</param>
            <param name="provider">Existing instance of CustomTableItemProvider</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.#ctor(System.Data.DataRow,System.String)">
            <summary>
            Creates new CustomTableItem from data class name and fills the data from DataRow.
            </summary>
            <param name="dataRow">DataRow with all data</param>
            <param name="className">Class name</param>        
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.#ctor(System.Data.DataRow,System.String,CMS.SiteProvider.CustomTableItemProvider)">
            <summary>
            Creates new CustomTableItem from data class name and fills the data from DataRow.
            </summary>
            <param name="dataRow">DataRow with all data</param>
            <param name="className">Class name</param>
            <param name="provider">Existing instance of CustomTableItemProvider</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.#ctor(CMS.SiteProvider.CustomTableItem,System.Boolean)">
            <summary>
            Creates new CustomTableItem from source CustomTableItem.
            </summary>
            <param name="sourceInfo">Source custom table item</param>
            <param name="keepSourceData">If true, source data are kept</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.#ctor(CMS.SiteProvider.CustomTableItem,System.Boolean,CMS.SiteProvider.CustomTableItemProvider)">
            <summary>
            Creates new CustomTableItem from source CustomTableItem.
            </summary>
            <param name="sourceInfo">Source custom table item</param>
            <param name="keepSourceData">If true, source data are kept</param>
            <param name="provider">Existing instance of CustomTableItemProvider or null</param>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.GetValue(System.String)">
            <summary>
            Gets custom table item value.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.SetValue(System.String,System.Object)">
            <summary>
            Sets value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Column value</param> 
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.GetSearchID">
            <summary>
            Gets the id column value which is used as search id by default.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CustomTableItem.GetSearchDocument(CMS.SettingsProvider.ISearchIndexInfo)">
            <summary>
            Returns index document for current object.
            </summary>
            <param name="info">Search index info object</param>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.CustomTableItemProvider">
            <summary>
            CustomTableItemProvider instance used to access data. If no CustomTableItemProvider is assigned, 
            a new CustomTableItemProvider instance is created.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.CustomTableClassName">
            <summary>
            Gets classname of custom table item.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.OrderEnabled">
            <summary>
            Gets bool value, that is true if custom table contains ItemOrder column.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.ItemID">
            <summary>
            Gets or sets custom table item ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.ItemGUID">
            <summary>
            Gets or sets custom table item guid.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.ItemCreatedBy">
            <summary>
            Gets or sets id of user who created custom table item.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.ItemCreatedWhen">
            <summary>
            Gets or sets custom table item creation date.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.ItemModifiedBy">
            <summary>
            Gets or sets is of user who modified the custom table item.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.ItemModifiedWhen">
            <summary>
            Gets or sets date of modification of custom table item.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.ItemOrder">
            <summary>
            Gets or sets custom table item order.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.TouchCacheDependencies">
            <summary>
            If true, cache dependencies are touched when the object is changed.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.LogSynchronization">
            <summary>
            If true, synchronization tasks are logged on the object update.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.UpdateTimeStamp">
            <summary>
            If true, timestamp of the object is updated when saved.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.CreateSearchTask">
            <summary>
            If true, search task is created for the object.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.ObjectDisplayName">
            <summary>
            Object display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CustomTableItem.SearchType">
            <summary>
            Gets the type of current object.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TimeZoneHelper">
            <summary>
            Static timezone accessing methods.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetTimeZoneManager(System.Web.UI.Control)">
            <summary>
            Gets the time zone manager for the given control.
            </summary>
            <param name="control">Control for which to get the time zone manager</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.TimeZonesEnabled">
            <summary>
            Returns true if global CMSTimeZonesEnable setting key is true.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetSiteTimeZoneInfo(CMS.SiteProvider.SiteInfo)">
            <summary>
            Returns site timezone.
            </summary>
            <param name="siteInfo">User info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertTimeZoneDateTime(System.DateTime,CMS.SiteProvider.TimeZoneInfo,CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Returns DateTime according timezone information.
            </summary>
            <param name="dateTime">Source datetime</param>
            <param name="srcTimeZoneInfo">Source timezone</param>
            <param name="destTimeZoneInfo">Destination timezone</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertTimeZoneDateTime(System.DateTime,CMS.SiteProvider.TimeZoneInfo,CMS.SiteProvider.TimeZoneInfo,System.Boolean)">
            <summary>
            Returns DateTime according timezone information.
            </summary>
            <param name="dateTime">Source datetime</param>
            <param name="srcTimeZoneInfo">Source timezone</param>
            <param name="destTimeZoneInfo">Destination timezone</param>
            <param name="timeZonesRequired">If true than the time is converted only if timezones are enabled in the system</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetGMToffset(System.DateTime,CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Compute gmt offset with dependence on daylight saving time.
            </summary>
            <param name="dt">DateTime to convert</param>
            <param name="tzi">Time zone info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetUserDateTime(CMS.SiteProvider.UserInfo)">
            <summary>
            Returns user current date time in dependence on user time zone.
            </summary>
            <param name="userInfo">User info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertUserDateTime(System.DateTime,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns  user date time in dependence on user time zone.
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="userInfo">User info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertUserDateTime(System.DateTime,CMS.SiteProvider.UserInfo,CMS.SiteProvider.TimeZoneInfo@)">
            <summary>
            Returns  user date time in dependence on user time zone.
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="userInfo">User info</param>
            <param name="usedTimeZone">Destination time zone</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetSiteDateTime(CMS.SiteProvider.SiteInfo)">
            <summary>
            Returns user current date time in dependence on user time zone.
            </summary>
            <param name="siteInfo">Site info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertSiteDateTime(System.DateTime,CMS.SiteProvider.SiteInfo)">
            <summary>
            Returns  site date time in dependence on site time zone.
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="siteInfo">Site info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertSiteDateTime(System.DateTime,CMS.SiteProvider.SiteInfo,CMS.SiteProvider.TimeZoneInfo@)">
            <summary>
            Returns  site date time in dependence on site time zone.
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="siteInfo">Site info</param>
            <param name="usedTimeZone">Destination time zone</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertServerDateTime(System.DateTime,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns  server date time in dependence on server time zone.
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="userInfo">User info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertServerDateTime(System.DateTime,CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Returns server date time in dependence on server time zone.
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="customTimeZone">User info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertServerDateTime(System.DateTime,CMS.SiteProvider.SiteInfo)">
            <summary>
            Returns server date time in dependence on server time zone.
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="siteInfo">Site info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertTimeZoneDateTimeToGMT(System.DateTime,CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Returns GMT date time in dependence on given time zone.
            </summary>
            <param name="dateTime">DateTime to convert</param>
            <param name="timeZoneInfo">Time zone</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertTimeZoneDateTimeToUser(System.DateTime,CMS.SiteProvider.TimeZoneInfo,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns user date time in dependence on user time zone from specified DateTime a TimeZone.
            </summary>
            <param name="dateTime">DateTime</param>
            <param name="timeZoneInfo">Time zone</param>
            <param name="userInfo">User info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertDataSet(System.Data.DataSet,CMS.SiteProvider.UserInfo)">
            <summary>
            Converts the DateTime columns values of the DataSet to user datetime.
            </summary>
            <param name="dataSet">DataSet to be converted</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertDataTable(System.Data.DataTable,CMS.SiteProvider.UserInfo)">
            <summary>
            Converts the DateTime columns of the table values to user datetime.
            </summary>
            <param name="table">DataTable to be converted</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetGMTStringOffset(CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Returns string representation of time zone shift in form '(GMT+0:00)'.
            </summary>
            <param name="tzi">Time zone info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetGMTLongStringOffset(CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Returns "long" string representation of time zone shift in form 'TimeZoneDisplayName (GMT+0:00)'.
            </summary>
            <param name="tzi">Time zone info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetGMTStringOffset(System.String,CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Returns string representation of time zone shift in form '(GMT+0:00)'.
            </summary>
            <param name="format">Format string</param>
            <param name="tzi">Time zone info</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.GetCurrentTimeZoneDateTimeString(System.DateTime,CMS.SiteProvider.UserInfo,CMS.SiteProvider.SiteInfo,CMS.SiteProvider.TimeZoneInfo@)">
            <summary>
            Returns string representation of the given date/time converted to user or site time zone.
            </summary>
            <param name="dt">Server time</param>
            <param name="ui">Current user info</param>
            <param name="si">Current site info</param>
            <param name="usedTimeZone">Used time zone</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.AdjustDateTimeValues(System.Data.DataRow,System.Int32[],CMS.SiteProvider.UserInfo)">
            <summary>
            Converts DateTime values in DataRow according to user TimeZone settings.
            </summary>
            <param name="dr">DataRow to be converted</param>
            <param name="dateTimeColumnsIndexes">Indexes of DateTime columns in datarow</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneHelper.ConvertToUserTimeZone(System.DateTime,System.Boolean,CMS.SiteProvider.UserInfo,CMS.SiteProvider.SiteInfo)">
            <summary>
            Returns string representing given time converted into user date time.
            </summary>
            <param name="time">DateTime to be converted</param>
            <param name="displayGMT">Indicates if GMT information should be appended</param>
            <param name="ui">UserInfo</param>
            <param name="si">SiteInfo</param>
            <returns>Returns string with DateTime information</returns>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneHelper.ServerTimeZone">
            <summary>
            Returns server timezone.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TimeZoneInfo">
            <summary>
            TimeZoneInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfo.#ctor">
            <summary>
            Constructor - Creates an empty TimeZoneInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TimeZoneInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneName">
            <summary>
            Time zone name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneDaylight">
            <summary>
            If time zone uses daylight saving time.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneDisplayName">
            <summary>
            Display Name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneID">
            <summary>
            ID of time zone.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneRuleEndIn">
            <summary>
            Rule End In.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneRuleStartRule">
            <summary>
            Rule Start Rule.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneRuleEndRule">
            <summary>
            TimeZone Rule End Rule.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneRuleStartIn">
            <summary>
            Rule Start In.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneGMT">
            <summary>
            GMT shift of time zone.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneGUID">
            <summary>
            Time zone GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TimeZoneInfo.TimeZoneLastModified">
            <summary>
            Time zone modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TimeZoneInfoProvider">
            <summary>
            Class providing TimeZoneInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneInfo(System.Int32)">
            <summary>
            Returns the TimeZoneInfo structure for the specified Id.
            </summary>
            <param name="timeZoneId">TimeZone id</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneInfo(System.String)">
            <summary>
            Returns the TimeZoneInfo structure for the specified name.
            </summary>
            <param name="timeZoneName">TimeZone name</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneInfoFromDB(System.Int32)">
            <summary>
            Returns the TimeZoneInfo structure for the specified timeZone.
            </summary>
            <param name="timeZoneId">TimeZone id</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneInfoFromDB(System.String)">
            <summary>
            Returns the TimeZoneInfo structure for the specified timeZone.
            </summary>
            <param name="timeZoneName">TimeZone Name</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZones(System.String,System.String)">
            <summary>
            Returns DataSet with all time zones.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZones(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with all time zones.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Specifies number of returned records</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZones">
            <summary>
            Returns DataSet with all time zones.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.SetTimeZoneInfo(CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Sets (updates or inserts) specified timeZone.
            </summary>
            <param name="timeZone">TimeZone to set</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.DeleteTimeZoneInfo(CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Deletes specified timeZone.
            </summary>
            <param name="infoObj">TimeZone object</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.DeleteTimeZoneInfo(System.Int32)">
            <summary>
            Deletes specified timeZone.
            </summary>
            <param name="timeZoneId">TimeZone id</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.CreateRuleDateTime(System.String)">
            <summary>
            Returns DateTime for specified rule.
            </summary>
            <param name="rule">Rule</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.CreateRuleDateTime(System.String,System.Int32)">
            <summary>
            Returns DateTime for specified rule and year.
            </summary>
            <param name="rule">Rule</param>
            <param name="year">Year</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GenerateTimeZoneRules">
            <summary>
            Regenerate all timzezone rules.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneTypeEnum(System.String)">
            <summary>
            Returns the enum representation of timezone based on specified string.
            </summary>
            <param name="timeZoneTypeString">String representation of timezone</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneTypeString(CMS.SiteProvider.TimeZoneTypeEnum)">
            <summary>
            Returns the string representation of timezone type based on specified enum value.
            </summary>
            <param name="timeZoneType">Enum representation of avatar type</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneTypeString(System.Type,System.Int32)">
            <summary>
            Returns TimeZoneTypeEnum string code derived from type of enumeration and enum value.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneInfoProvider.timezonesById">
            <summary>
            TimeZones info table indexed by timezone table id.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneInfoProvider.timezonesByName">
            <summary>
            TimeZones info table indexed by timezone table code name.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneInfoInternal(System.Int32)">
            <summary>
            Returns the TimeZoneInfo structure for the specified Id.
            </summary>
            <param name="timeZoneId">TimeZone id</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneInfoInternal(System.String)">
            <summary>
            Returns the TimeZoneInfo structure for the specified name.
            </summary>
            <param name="timeZoneName">TimeZone name</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneInfoFromDBInternal(System.Int32)">
            <summary>
            Returns the TimeZoneInfo structure for the specified timeZone.
            </summary>
            <param name="timeZoneId">TimeZone id</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZoneInfoFromDBInternal(System.String)">
            <summary>
            Returns the TimeZoneInfo structure for the specified timeZone.
            </summary>
            <param name="timeZoneName">TimeZone Name</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZonesInternal(System.String,System.String)">
            <summary>
            Returns DataSet with all time zones.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetTimeZonesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with all time zones.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Specifies number of returned records</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.SetTimeZoneInfoInternal(CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Sets (updates or inserts) specified timeZone.
            </summary>
            <param name="timeZone">TimeZone to set</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.DeleteTimeZoneInfoInternal(CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Deletes specified timeZone.
            </summary>
            <param name="infoObj">TimeZone object</param>
        </member>
        <member name="F:CMS.SiteProvider.TimeZoneInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.LoadTimeZones">
            <summary>
            Load TimeZones info into ProviderHashtable.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtable.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.TimeZoneInfoProvider.GetDay(System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Returns day of specified condition.
            </summary>
            <param name="weekDay">3 digit code of week day</param>
            <param name="dayValue">Starting day</param>
            <param name="month">Month</param>
            <param name="year">Year</param>
            <param name="add">Step (1,-1)</param>
        </member>
        <member name="T:CMS.SiteProvider.BanControlEnum">
            <summary>
            Banned IP control enumeration
            Order 1,2,4,8,... is important because of bitwise operation
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BanControlEnum.Complete">
            <summary>
            Check user IP on Session start, If IP is banned redirect to the information page.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BanControlEnum.Login">
            <summary>
            Check user IP during login.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BanControlEnum.Registration">
            <summary>
            Check user IP during registration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BanControlEnum.AllNonComplete">
            <summary>
            (Default) Check user IP during login and registration.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BannedIPInfo">
            <summary>
            BannedIPInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BannedIPInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfo.#ctor">
            <summary>
            Constructor - Creates an empty BannedIPInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BannedIPInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressID">
            <summary>
            IP address ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressSiteID">
            <summary>
            IP address site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressAllowed">
            <summary>
            Indicated whether IP address is allowed.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressBanType">
            <summary>
            Ban type of IP address.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressAllowOverride">
            <summary>
            Indicates whether ban can be overriden.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressBanEnabled">
            <summary>
            Indicates whether ban is enabled.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddress">
            <summary>
            IP address.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressRegular">
            <summary>
            IP Address regular expression.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressBanReason">
            <summary>
            Reason of ban.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressGUID">
            <summary>
            IP Address GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfo.IPAddressLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BannedIPInfoProvider">
            <summary>
            Class providing BannedIPInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BannedIPInfoProvider.ALLOWED">
            <summary>
            Bool indicating that IP was allowed.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BannedIPInfoProvider.DENIED">
            <summary>
            Bool indicating that IP was denied.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BannedIPInfoProvider.globalBannedIPs">
            <summary>
            Stores global banned IPs and if it is allowed.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BannedIPInfoProvider.sitesBannedIPs">
            <summary>
            Stores site related banned IPs and if it is allowed.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BannedIPInfoProvider.cachedBannedIPs">
            <summary>
            Contains denied IP address which accessed site from last change in banned IP.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BannedIPInfoProvider.mLastChange">
            <summary>
            Sets the last chage date time.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.GetBannedIPInfo(System.Int32)">
            <summary>
            Returns the BannedIPInfo structure for the specified bannedIP.
            </summary>
            <param name="bannedIPId">BannedIP id</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.SetBannedIPInfo(CMS.SiteProvider.BannedIPInfo)">
            <summary>
            Sets (updates or inserts) specified bannedIP.
            </summary>
            <param name="bannedIP">BannedIP to set</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.DeleteBannedIPInfo(CMS.SiteProvider.BannedIPInfo)">
            <summary>
            Deletes specified bannedIP.
            </summary>
            <param name="infoObj">BannedIP object</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.DeleteBannedIPInfo(System.Int32)">
            <summary>
            Deletes specified bannedIP.
            </summary>
            <param name="bannedIPId">BannedIP id</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.GetBannedIPs(System.String,System.String)">
            <summary>
            Gets all banned IPs from the database.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.IsAllowed(System.String,CMS.SiteProvider.BanControlEnum)">
            <summary>
            Returns true if client IP address( from HttpContext) is allowed to access the site, false if it is banned.
            </summary>
            <param name="siteName">Ban settings of this site will be used</param>   
            <param name="banType">Which ban type should be checked</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.IsAllowed(System.String,System.String,CMS.SiteProvider.BanControlEnum)">
            <summary>
            Returns true if client IP address is allowed to access the site, false if it is banned.
            </summary>
            <param name="ipAddress">Check this ip address</param>
            <param name="siteName">Ban settings of this site will be used</param>        
            <param name="banType">Which ban type should be checked</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.CheckIPandRedirect(System.String,CMS.SiteProvider.BanControlEnum)">
            <summary>
            Check if IP address id allowed and if not redirects to the page specified in App settigns, key CMSBannedIPRedirectURL.
            </summary>
            <param name="siteName">Ban settings of this site will be used</param>
            <param name="banType">Which ban type should be checked</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.BanRedirect(System.String)">
            <summary>
            Redirects current http response to special page for banned IPs (settings key CMSBannedIPRedirectURL).
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.IsBannedIPEnabled(System.String)">
            <summary>
            Returns true if BannedIP module is enabled for specified site (Settings key).
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.LoadBannedIPs">
            <summary>
            Load all banned ip from DB to Hash tables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.GetInfoById(System.Int32,System.Boolean)">
            <summary>
            Gets the info by its ID.
            </summary>
            <param name="id">ID of the object</param>
            <param name="useHashtable">If true, the get operation uses hashtable</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.GetBannedIPsInternal(System.String,System.String)">
            <summary>
            Gets all banned IPs from the database.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.GetBannedIPInfoInternal(System.Int32)">
            <summary>
            Returns the BannedIPInfo structure for the specified bannedIP.
            </summary>
            <param name="bannedIPId">BannedIP id</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.SetBannedIPInfoInternal(CMS.SiteProvider.BannedIPInfo)">
            <summary>
            Sets (updates or inserts) specified bannedIP.
            </summary>
            <param name="bannedIP">BannedIP to set</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.DeleteBannedIPInfoInternal(CMS.SiteProvider.BannedIPInfo)">
            <summary>
            Deletes specified bannedIP.
            </summary>
            <param name="infoObj">BannedIP object</param>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.GetRegularIPAddress(System.String)">
            <summary>
            Returns regular expression corresponding to ip address.
            </summary>
            <param name="ipAddress">Ip address with special marks</param>        
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.GetBanControlEnum(System.String)">
            <summary>
            Returns BanControlEnum type derived from string.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.BanControlEnumString(CMS.SiteProvider.BanControlEnum)">
            <summary>
            Returns BanControlEnum string code.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BannedIPInfoProvider.BanControlEnumString(System.Type,System.Int32)">
            <summary>
            Returns BanControlEnum string code derived from type of enumeration and enum value.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BannedIPInfoProvider.LastChange">
            <summary>
            Returns time of the last change in banned IP settings.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UserSettingsInfo">
            <summary>
            UserSettingsInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserSettingsInfo.MAX_RECENTLY_USED_WEBPARTS">
            <summary>
            Maximum number of recently used webparts.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserSettingsInfo.MAX_RECENTLY_USED_WIDGETS">
            <summary>
            Maximum number of recently used widgets.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserSettingsInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserSettingsInfo.mUserCustomData">
            <summary>
            User custom data.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserSettingsInfo.mUserPreferences">
            <summary>
            User custom data.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserSettingsInfo.mUserRegistrationInfo">
            <summary>
            Contains information of user registration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserSettingsInfo.mUserDialogsConfiguration">
            <summary>
            Contains information about user dialogs settings.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserSettingsInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserSettingsInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfo.UpdateRecentlyUsedWebPart(System.String)">
            <summary>
            Updates information about which webparts user used recently.
            </summary>        
            <param name="webPartName">Web part name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfo.UpdateRecentlyUsedWidget(System.String)">
            <summary>
            Updates information about which widgets user used recently.
            </summary>        
            <param name="widgetName">Widget codename</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfo.UpdateRecentlyUsedObject(System.String,System.String,System.Int32)">
            <summary>
             Returns updated version of last used object.
            </summary>
            <param name="codename">Codename of last used object</param>
            <param name="codenames">List of all used object</param>
            <param name="maxValue">Size of list with objects</param>        
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserDialogsConfiguration">
            <summary>
            Gets or sets the XmlData object with information about user dialogs settings.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserSettingsUserGUID">
            <summary>
            User guid.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserSettingsID">
            <summary>
            User settings ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserSettingsUserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserCampaign">
            <summary>
            User campaign.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserWaitingForApproval">
            <summary>
            Indicates whether user is waiting for approval.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserLogActivities">
            <summary>
            Indicates whether logging activities is enabled for this user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserActivationDate">
            <summary>
            Date of user's activation.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserSignature">
            <summary>
            User signature.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserPicture">
            <summary>
            User picture.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserAvatarID">
            <summary>
            User avatar ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserNickName">
            <summary>
            User nick name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserActivatedByUserID">
            <summary>
            User Activated by user ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserMessagingNotificationEmail">
            <summary>
            Messaging notification email address.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserCustomData">
            <summary>
            User custom data.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserRegistrationInfo">
            <summary>
            User registration info.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserPreferences">
            <summary>
            User preferences.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserTimeZoneID">
            <summary>
            User time zone ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserURLReferrer">
            <summary>
            URL Referrer of user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserBadgeID">
            <summary>
            User badge ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserShowSplashScreen">
            <summary>
            Indicates whether the user should be displayed with splash screen or not.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserActivityPoints">
            <summary>
            User activity points.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserForumPosts">
            <summary>
            User forum posts.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserBlogComments">
            <summary>
            User blog comments.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserMessageBoardPosts">
            <summary>
            User message board posts.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserGender">
            <summary>
            User gender.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserDateOfBirth">
            <summary>
            User date of birth.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.WindowsLiveID">
            <summary>
            Windows LiveID user identification token.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserFacebookID">
            <summary>
            Facebook user identification token.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserLinkedInID">
            <summary>
            LinkedIn user id.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserBlogPosts">
            <summary>
            Total count of all user posts.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserDescription">
            <summary>
            Description of user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserUsedWebParts">
            <summary>
            Sets or gets user used web parts.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserUsedWidgets">
            <summary>
            Sets or gets user used widgets.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserBounces">
            <summary>
            Gets or sets the number of bounced e-mails for this user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfo.UserPasswordRequestHash">
            <summary>
            Gets or sets user password change request hash.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UserSettingsInfoProvider">
            <summary>
            Class providing UserSettingsInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.GetUserSettingsInfoByUser(System.Int32)">
            <summary>
            Returns UserSettings info for specified user.
            </summary>
            <param name="userId">User whose Settings info is to be returned</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.GetUserSettingsInfo(System.Int32)">
            <summary>
            Returns the UserSettingsInfo structure for the specified userSettings.
            </summary>
            <param name="userSettingsId">UserSettings id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.GetUserSettings(System.String,System.String)">
            <summary>
            Returns all user settings.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.SetUserSettingsInfo(CMS.SiteProvider.UserSettingsInfo)">
            <summary>
            Sets (updates or inserts) specified userSettings.
            </summary>
            <param name="userSettings">UserSettings to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.DeleteUserSettingsInfo(CMS.SiteProvider.UserSettingsInfo)">
            <summary>
            Deletes specified userSettings.
            </summary>
            <param name="infoObj">UserSettings object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.DeleteUserSettingsInfo(System.Int32)">
            <summary>
            Deletes specified userSettings.
            </summary>
            <param name="userSettingsId">UserSettings id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.GetUserSettingsInternal(System.String,System.String)">
            <summary>
            Returns all user settings.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.GetUserSettingsInfoByUserInternal(System.Int32)">
            <summary>
            Returns UserSettings info for specified user.
            </summary>
            <param name="userId">User whose Settings info is to be returned</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.GetUserSettingsInfoInternal(System.Int32)">
            <summary>
            Returns the UserSettingsInfo structure for the specified userSettings.
            </summary>
            <param name="userSettingsId">UserSettings id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.SetUserSettingsInfoInternal(CMS.SiteProvider.UserSettingsInfo)">
            <summary>
            Sets (updates or inserts) specified userSettings.
            </summary>
            <param name="userSettings">UserSettings to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.DeleteUserSettingsInfoInternal(CMS.SiteProvider.UserSettingsInfo)">
            <summary>
            Deletes specified userSettings.
            </summary>
            <param name="infoObj">UserSettings object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSettingsInfoProvider.RemoveObjectDependencies(CMS.SiteProvider.UserSettingsInfo)">
            <summary>
            Removes object dependencies.
            </summary>
            <param name="infoObj">Object for which the dependencies should be removed</param>
        </member>
        <member name="P:CMS.SiteProvider.UserSettingsInfoProvider.DeleteCustomAvatars">
            <summary>
            Defines whether to delete custom avatar along with user settings object (if exists).
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AllowedChildClassInfo">
            <summary>
            AllowedChildClass data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AllowedChildClassInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfo.#ctor">
            <summary>
            Constructor - Creates an empty AllowedChildClass object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AllowedChildClass object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AllowedChildClassInfo.ChildClassID">
            <summary>
            Child class ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AllowedChildClassInfo.ParentClassID">
            <summary>
            Parent class ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AllowedChildClassInfoProvider">
            <summary>
            Class providing AllowedChildClassInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.GetAllowedChildClasses(System.String,System.String)">
            <summary>
            Returns the DataSet of all the allowed child classes records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.GetAllowedChildClassInfo(System.Int32,System.Int32)">
            <summary>
            Returns the AllowedChildClassInfo structure for the specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.SetAllowedChildClassInfo(CMS.SiteProvider.AllowedChildClassInfo)">
            <summary>
            Sets (updates or inserts) specified allowedChildClass.
            </summary>
            <param name="allowedChildClass">AllowedChildClass to set</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.DeleteAllowedChildClassInfo(CMS.SiteProvider.AllowedChildClassInfo)">
            <summary>
            Deletes specified allowedChildClass.
            </summary>
            <param name="infoObj">AllowedChildClass object</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.RemoveAllowedChildClass(System.Int32,System.Int32)">
            <summary>
            Deletes specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.AddAllowedChildClass(System.Int32,System.Int32)">
            <summary>
            Inserts new record to CMS_AllowedChildClasses table if no one exists.
            </summary>
            <param name="parentClassId">Parent ClassID</param>
            <param name="childClassId">Child ClassID</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.IsChildClassAllowed(System.Int32,System.Int32)">
            <summary>
            Returns true if child class is allowed within given parent class.
            </summary>
            <param name="parentClassId">Parent class ID</param>
            <param name="childClassId">Child class ID</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.GetAllowedChildClassInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the AllowedChildClassInfo structure for the specified allowedChildClass.
            </summary>
            <param name="parentClassId">ParentClassID</param>
            <param name="childClassId">ChildClassID</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.GetAllowedChildClassesInternal(System.String,System.String)">
            <summary>
            Returns the DataSet of all the allowed child classes records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.SetAllowedChildClassInfoInternal(CMS.SiteProvider.AllowedChildClassInfo)">
            <summary>
            Sets (updates or inserts) specified allowedChildClass.
            </summary>
            <param name="allowedChildClass">AllowedChildClass to set</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.DeleteAllowedChildClassInfoInternal(CMS.SiteProvider.AllowedChildClassInfo)">
            <summary>
            Deletes specified allowedChildClass.
            </summary>
            <param name="infoObj">AllowedChildClass object</param>
        </member>
        <member name="M:CMS.SiteProvider.AllowedChildClassInfoProvider.InvalidateFileHasChildClass(System.Int32)">
            <summary>
            Invalidates variable CMSFileHasChildClass
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="P:CMS.SiteProvider.AllowedChildClassInfoProvider.CMSFileHasChildClass">
            <summary>
            Indicates if CMS File has allowed child classes.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AuthenticationResultEnum">
            <summary>
            Authentication result enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AuthenticationResultEnum.OK">
            <summary>Provided credentials are valid. The user can log on.</summary>
        </member>
        <member name="F:CMS.SiteProvider.AuthenticationResultEnum.WrongUserNameOrPassword">
            <summary>Provided credentials are invalid. The user cannot log on.</summary>
        </member>
        <member name="T:CMS.SiteProvider.AvatarInfo">
            <summary>
            AvatarInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarInfo.mInputStreamData">
            <summary>
            Input stream avatar data.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarInfo.mStreamProcessed">
            <summary>
            Indicates whether the data from input stream were processed.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.GetDependencyCacheKeys(System.String,System.String)">
            <summary>
            Gets the array of dependency cache keys for current object.
            </summary>
            <param name="key">Cache key</param>
            <param name="context">Cache context</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.GetDependencyCacheKeys">
            <summary>
            Gets the array of dependency cache keys for current object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.#ctor">
            <summary>
            Constructor - Creates an empty AvatarInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AvatarInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.#ctor(System.Web.HttpPostedFile,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor - Creates a new AvatarInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
            <param name="maxWidth">Maximal image width</param>
            <param name="maxHeight">Maximal image height</param>
            <param name="maxSideSize">Maximal side size</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.#ctor(System.String)">
            <summary>
            Creates a new AvatarInfo object based on the file specified by given path.
            </summary>
            <param name="filePath">File path</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.GetBinaryData">
            <summary>
            Ensures the binary data - loads the binary data from file stream if present.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfo.EnsureBinaryData">
            <summary>
            Ensures the binary data - loads the binary data from file stream if present.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarLastModified">
            <summary>
            Avatar last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarBinary">
            <summary>
            Avatar binary data.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarFileName">
            <summary>
            Avatar file name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarID">
            <summary>
            Avatar ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarName">
            <summary>
            Avatar name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarIsCustom">
            <summary>
            Whether avatar is custom.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarGUID">
            <summary>
            Avatar GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarType">
            <summary>
            Avatar type - All,User or Group.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarFileExtension">
            <summary>
            Avatar file extension.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarMimeType">
            <summary>
            Avatar MIME type specification.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarFileSize">
            <summary>
            Avatar file size detail.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarImageHeight">
            <summary>
            Avatar image height.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.AvatarImageWidth">
            <summary>
            Avatar image height.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.DefaultUserAvatar">
            <summary>
            Gets or sets the value that indicates whether the avatar is default user avatar.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.DefaultMaleUserAvatar">
            <summary>
            Gets or sets the value that indicates whether the avatar is default male avatar.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.DefaultFemaleUserAvatar">
            <summary>
            Gets or sets the value that indicates whether the avatar is default female avatar.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfo.DefaultGroupAvatar">
            <summary>
            Gets or sets the value that indicates whether the avatar is default group avatar.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AvatarInfoProvider">
            <summary>
            Class providing AvatarInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarInfoProvider.mThumbnailQuality">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarInfoProvider.defaultAvatars">
            <summary>
            Contains default avatars, key is DefaultAvatarTypeEnum.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarInfoProvider.ensureFileLock">
            <summary>
            Lock object for ensuring of the physical files.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatars(System.String,System.String)">
            <summary>
            Returns DataSet with all avatars.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatars(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns DataSet with all avatars.
            </summary>
            <param name="columns">Specifies dataset's columns</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N expression</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfo(System.Guid)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="guid">Avatar id</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfo(System.Int32)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="avatarId">Avatar id</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfo(System.String)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="avatarName">Avatar name</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoWithoutBinary(System.Int32)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="avatarId">Avatar id</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoWithoutBinary(System.Guid)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="guid">GUID of the avatar to return</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoWithoutBinary(System.String)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="avatarName">Name of the avatar to return</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetDefaultAvatar(CMS.SiteProvider.DefaultAvatarTypeEnum)">
            <summary>
            Returns default avatar of specified type or null if such is not set.
            </summary>
            <param name="type">Default avatar type</param>      
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.ClearDefaultAvatar(CMS.SiteProvider.DefaultAvatarTypeEnum)">
            <summary>
            Clears specified default avatar type from all avatars.
            </summary>
            <param name="type">Default avatar type</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.ClearDefaultAvatar(CMS.SiteProvider.DefaultAvatarTypeEnum,System.Boolean)">
            <summary>
            Clears specified default avatar type from all avatars.
            </summary>
            <param name="type">Default avatar type</param>
            <param name="onlyDefaultAvatarChahe">If true clears only default avatar cache</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.ClearDefaultAvatar(CMS.SiteProvider.DefaultAvatarTypeEnum,System.Boolean,System.Boolean)">
            <summary>
            Clears specified default avatar type from all avatars.
            </summary>
            <param name="type">Default avatar type</param>
            <param name="onlyDefaultAvatarCache">If true clears only default avatar cache</param>
            <param name="logWebFarm">Enables or disables webfarm task logging</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.SetAvatarInfo(CMS.SiteProvider.AvatarInfo)">
            <summary>
            Sets (updates or inserts) specified avatar.
            </summary>
            <param name="avatar">Avatar to set</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.DeleteAvatarInfo(CMS.SiteProvider.AvatarInfo)">
            <summary>
            Deletes specified avatar.
            </summary>
            <param name="infoObj">Avatar object</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.DeleteAvatarInfo(System.Int32)">
            <summary>
            Deletes specified avatar.
            </summary>
            <param name="avatarId">ID of the avatar object</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.DeleteAvatarFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete avatar file stored in the file system.
            </summary>
            <param name="avatarGuid">Guid file to delete</param>
            <param name="fileExtension">Extension of the avatar file</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not</param>
            <param name="synchronization">Indicates wehther the method is called due to synchronization</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarFile(System.Guid)">
            <summary>
            Returns the avatar file from disk or (if not available on the disk) from database.
            </summary>
            <param name="guid">Guid of the avatar file to get</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarFile(CMS.SiteProvider.AvatarInfo)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="avatarInfo">Avatar info object</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarFileBinary(System.Guid)">
            <summary>
            Returns the file binary from disk.
            </summary>
            <param name="guid">Avatar guid</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetImageThumbnail(CMS.SiteProvider.AvatarInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesnt exist).
            </summary>
            <param name="avatarInfo">Avatar info</param>        
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetImageThumbnailFile(System.Guid,System.Int32,System.Int32)">
            <summary>
            Returns the image thumbnail from the disk.
            </summary>
            <param name="guid">Guid of the file to get</param>        
            <param name="height">Image thumbnail width</param>
            <param name="width">Image thumbnail height</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.EnsureThumbnailFile(CMS.SiteProvider.AvatarInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ensures the thumbnail avatar.
            </summary>
            <param name="avatarInfo">Avatar info</param>
            <param name="width">File width</param>
            <param name="height">File height</param>
            <param name="maxSideSize">Maximum side size</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarTypeEnum(System.String)">
            <summary>
            Returns the enum representation of avatar type based on specified string.
            </summary>
            <param name="avatarTypeString">String representation of avatar type</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarTypeString(CMS.SiteProvider.AvatarTypeEnum)">
            <summary>
            Returns the string representation of avatar type based on specified enum value.
            </summary>
            <param name="avatarTypeEnum">Enum representation of avatar type</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarTypeString(System.Type,System.Int32)">
            <summary>
            Returns AvatarTypeEnum string code derived from type of enumeration and enum value.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.EnsureAvatarPhysicalFile(CMS.SiteProvider.AvatarInfo)">
            <summary>
            Ensures the avatar file in the file system and returns the path to the file.
            </summary>
            <param name="avatarInfo">Avatar info</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetFileFolder(System.String,System.String)">
            <summary>
            Returns physical path to the avatar file folder (avatars files folder path + subfolder).
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">Avatar file GUID</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetFilePhysicalPath(System.String,System.String,System.String)">
            <summary>
            Returns physical path to the file.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetFilesFolderPath">
            <summary>
            Returns physical path to folder with avatar files which are associated with the specified site.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.SaveAvatarFileToDisk(System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Saves avatar file to the disk.
            </summary>
            <param name="guid">File GUID</param>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="fileData">File data (byte[] or Stream)</param>   
            <param name="synchronization">Indicates if this function is called from "ProcessTask"</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.CanResizeImage(CMS.SiteProvider.AvatarInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks whether the image should be processed (resized) by the Image manager (if the destination size is smaller).
            </summary>
            <param name="avatarInfo">Avatar file info to check</param>
            <param name="width">New width</param>
            <param name="height">New height</param>
            <param name="maxSideSize">Max side size</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.StoreFilesInFileSystem">
            <summary>
            Indicates whether the files should be stored in the file system according the global settings.
            </summary>                
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.StoreFilesInDatabase">
            <summary>
            Indicates whether the files should be stored in the DB according to the global settings.
            </summary>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GenerateThumbnails">
            <summary>
            Returns the current settings whether the thumbnails should be generated.
            </summary>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.UploadAvatar(CMS.SiteProvider.AvatarInfo,System.Web.HttpPostedFile,System.Int32,System.Int32,System.Int32)">
            <summary>
            Uploads and resizes (if needed) avatar to specified AvatarInfo and sets its properties.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetUniqueAvatarName(System.String)">
            <summary>
            Returns unique name for avatar.
            </summary>
            <param name="avatarName">Avatar name</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarsInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns DataSet with all avatars.
            </summary>
            <param name="columns">Specifies dataset's columns</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N expression</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoInternal(System.Guid)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="guid">Avatar id</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetDefaultAvatarInternal(CMS.SiteProvider.DefaultAvatarTypeEnum)">
            <summary>
            Returns default avatar of specified type or null if such is not set.
            </summary>
            <param name="type">Default avatar type</param>        
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoInternal(System.Int32)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="avatarId">Avatar id</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoInternal(System.String)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="avatarName">Avatar name</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoWithoutBinaryInternal(System.Int32)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="avatarId">Avatar id</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoWithoutBinaryInternal(System.Guid)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="guid">GUID of the avatar to return</param>     
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.GetAvatarInfoWithoutBinaryInternal(System.String)">
            <summary>
            Returns the AvatarInfo structure for the specified avatar.
            </summary>
            <param name="avatarName">Avatar name</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.SetAvatarInfoInternal(CMS.SiteProvider.AvatarInfo)">
            <summary>
            Sets (updates or inserts) specified avatar.
            </summary>
            <param name="avatar">Avatar to set</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.DeleteAvatarInfoInternal(CMS.SiteProvider.AvatarInfo)">
            <summary>
            Deletes specified avatar.
            </summary>
            <param name="infoObj">Avatar object</param>
        </member>
        <member name="M:CMS.SiteProvider.AvatarInfoProvider.RemoveObjectDependencies(CMS.SiteProvider.AvatarInfo)">
            <summary>
            Removes object dependencies.
            </summary>
            <param name="infoObj">Object for which the dependencies should be removed</param>
        </member>
        <member name="P:CMS.SiteProvider.AvatarInfoProvider.WebApplicationPhysicalPath">
            <summary>
            Full path to the root of the web.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AvatarTypeEnum">
            <summary>
            Defines type of the avatar object.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarTypeEnum.All">
            <summary>
            Global avatar, can be used anywhere.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarTypeEnum.User">
            <summary>
            User avatar, used in forums, message board, messaging, etc.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AvatarTypeEnum.Group">
            <summary>
            Group avatar, used in groups.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BadWordActionEnum">
            <summary>
            Defines the bad word action.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordActionEnum.None">
            <summary>
            No action is performed.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordActionEnum.Remove">
            <summary>
            Removes bad word.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordActionEnum.Replace">
            <summary>
            Replaces bad word with replacement.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordActionEnum.ReportAbuse">
            <summary>
            Reports abuse.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordActionEnum.RequestModeration">
            <summary>
            Requests moderation.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordActionEnum.Deny">
            <summary>
            Denies bad word.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BadWordCultureInfo">
            <summary>
            BadWordCultureInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordCultureInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfo.#ctor">
            <summary>
            Constructor - Creates an empty BadWordCultureInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BadWordCultureInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordCultureInfo.WordID">
            <summary>
            Word ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordCultureInfo.CultureID">
            <summary>
            Culture ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BadWordCultureInfoProvider">
            <summary>
            Class providing BadWordCultureInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.GetBadWordCultureInfo(System.Int32,System.Int32)">
            <summary>
            Returns the BadWordCultureInfo structure for the specified BadWordCulture.
            </summary>
            <param name="wordId">Word ID</param>
            <param name="cultureId">Culture ID</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.SetBadWordCultureInfo(CMS.SiteProvider.BadWordCultureInfo)">
            <summary>
            Sets (updates or inserts) specified BadWordCulture.
            </summary>
            <param name="badWordCulture">BadWordCulture object to set</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.DeleteBadWordCultureInfo(CMS.SiteProvider.BadWordCultureInfo)">
            <summary>
            Deletes specified BadWordCulture.
            </summary>
            <param name="infoObj">BadWordCulture object</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.DeleteBadWordCultureInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified BadWordCulture.
            </summary>
            <param name="wordId">Word ID</param>
            <param name="cultureId">Culture ID</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.AddBadWordToCulture(System.Int32,System.Int32)">
            <summary>
            Adds bad word to specified culture and cleares bad word hashtables.
            </summary>
            <param name="wordId">ID of bad word</param>
            <param name="cultureId">ID of culture</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.RemoveBadWordFromCulture(System.Int32,System.Int32)">
            <summary>
            Removes bad word from specified culture and cleares bad word hashtables.
            </summary>
            <param name="wordId">ID of bad word</param>
            <param name="cultureId">ID of culture</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.GetWordCultures(System.Int32)">
            <summary>
            Gets cultures of specified bad word.
            </summary>
            <param name="wordId">ID of bad word</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.GetBadWordCultures(System.String,System.String)">
            <summary>
            Gets all cultures records.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.GetBadWordCultureInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the BadWordCultureInfo object.
            </summary>
            <param name="wordId">Word ID</param>
            <param name="cultureId">Culture ID</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.SetBadWordCultureInfoInternal(CMS.SiteProvider.BadWordCultureInfo)">
            <summary>
            Sets (updates or inserts) specified BadWordCulture object.
            </summary>
            <param name="badWordCulture">BadWordCulture to set</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.DeleteBadWordCultureInfoInternal(CMS.SiteProvider.BadWordCultureInfo)">
            <summary>
            Deletes specified BadWordCulture object.
            </summary>
            <param name="infoObj">BadWordCulture object</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.GetWordCulturesInternal(System.Int32)">
            <summary>
            Gets cultures of specified bad word.
            </summary>
            <param name="wordId">ID of bad word</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordCultureInfoProvider.GetBadWordCulturesInternal(System.String,System.String)">
            <summary>
            Gets all cultures records.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
        </member>
        <member name="T:CMS.SiteProvider.BadWordInfo">
            <summary>
            BadWordInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfo.#ctor">
            <summary>
            Constructor - Creates an empty BadWordInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new BadWordInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordExpression">
            <summary>
            Word expression.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordAction">
            <summary>
            Word action.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordID">
            <summary>
            Word ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordLastModified">
            <summary>
            Word last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordGUID">
            <summary>
            Word GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordReplacement">
            <summary>
            Word replacement.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordIsGlobal">
            <summary>
            Indicates if word is global (all cultures).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordIsRegularExpression">
            <summary>
            Idnicates if word is regular expression.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.BadWordInfo.WordMatchWholeWord">
            <summary>
            Indicates if word should match whole word.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.BadWordInfoProvider">
            <summary>
            Class providing BadWordInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordInfoProvider.REMOVE">
            <summary>
            Remove action.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordInfoProvider.REPLACE">
            <summary>
            Replace action.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordInfoProvider.REPORT">
            <summary>
            Report abuse action.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordInfoProvider.MODERATION">
            <summary>
            Moderation action.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordInfoProvider.DENY">
            <summary>
            Deny action.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordInfoProvider.cultureBadWords">
            <summary>
            Culture specified bad words provider dictionary.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.BadWordInfoProvider.globalBadWords">
            <summary>
            Global bad words list.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.CanUseBadWords(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Determines whether user can use bad words.
            </summary>
            <param name="user">User info object</param>
            <param name="siteName">Site name</param>
            <returns>True if user can use bad words.</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.BadWordExists(System.String)">
            <summary>
            Checks whether bad word exists.
            </summary>
            <param name="badWord">Bad word</param>
            <returns>True if bad word exists.</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWordInfo(System.Int32)">
            <summary>
            Returns the BadWordInfo structure for the specified badWord.
            </summary>
            <param name="badWordId">Bad word ID</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWordInfo(System.Guid)">
            <summary>
            Returns the BadWordInfo structure for the specified bad word GUID.
            </summary>
            <param name="wordGuid">Bad word GUID</param>
            <returns>BadWord info object</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.SetBadWordInfo(CMS.SiteProvider.BadWordInfo)">
            <summary>
            Sets (updates or inserts) specified badWord.
            </summary>
            <param name="badWord">BadWord to set</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.DeleteBadWordInfo(CMS.SiteProvider.BadWordInfo)">
            <summary>
            Deletes specified badWord and updates hashtables.
            </summary>
            <param name="infoObj">BadWord object</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.DeleteBadWordInfo(System.Int32)">
            <summary>
            Deletes specified badWord and clears hashtables.
            </summary>
            <param name="wordId">Bad word ID</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.CheckBadWord(CMS.SiteProvider.BadWordInfo,System.String,System.String,System.String@,System.Collections.Hashtable,System.Int32)">
            <summary>
            Checks given text for given bad word.
            </summary>
            <param name="word">BadWordInfo object</param>
            <param name="cultureCode">Code of culture</param>
            <param name="siteName">Site name</param>
            <param name="text">Text to check</param>
            <param name="foundWords">Found words</param>
            <param name="maxTextLength">Maximum length of the text to be checked. If value is zero, text length is unlimited.</param>
            <returns>What action should be performed and modified text through the text parameter.</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.CheckAllBadWords(System.String,System.String,CMS.SettingsProvider.GeneralizedInfo,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Collections.Hashtable)">
            <summary>
            Checks given text for all bad words.
            </summary>
            <param name="cultureCode">Code of culture</param>
            <param name="siteName">Site name</param>
            <param name="infoObject">Object info</param>
            <param name="columns">Columns to check (column name and column size). If columns size is zero, column has maximal size and will not checked.</param>
            <param name="foundWords">Found words</param>
            <returns>What action should be performed and modified text through the text parameter.</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.CheckAllBadWords(System.String,System.String,System.String@,System.Collections.Hashtable)">
            <summary>
            Checks given text for all bad words.
            </summary>
            <param name="cultureCode">Code of culture</param>
            <param name="siteName">Site name</param>
            <param name="text">Text to check</param>
            <param name="foundWords">Found words</param>
            <returns>What action should be performed and modified text through the text parameter.</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.CheckAllBadWords(System.String,System.String,System.String@,System.Collections.Hashtable,System.Int32)">
            <summary>
            Checks given text for all bad words.
            </summary>
            <param name="cultureCode">Code of culture</param>
            <param name="siteName">Site name</param>
            <param name="text">Text to check</param>
            <param name="foundWords">Found words</param>
            <param name="maxTextLength">Maximum length of the text to be checked. If value is zero, text length is unlimited.</param>
            <returns>What action should be performed and modified text through the text parameter.</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.Clear">
            <summary>
            Clears bad words hash tables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears bad words hash tables.
            </summary>
            <param name="logWebFarm">Enables or disables webfarm task logging, if false no task is logged</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.Clear(System.String)">
            <summary>
            Clears bad words culture dictionary.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetReplacementFromSettings(System.String)">
            <summary>
            Gets default replacement from settings.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWords(System.Int32)">
            <summary>
            Returns all bad words for given culture.
            </summary>
            <param name="cultureId">ID of culture</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWords(System.String,System.String)">
            <summary>
            Returns all bad words for given culture.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWords(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all bad words matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.CheckWords(System.String,System.String,System.String@,System.Collections.Hashtable,System.Int32)">
            <summary>
            Check bad words and returns action.
            </summary>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
            <param name="text">Checked text</param>
            <param name="foundWords">Found words</param>
            <param name="maxTextLength">Maximum length of the text to be checked. If value is zero, text length is unlimited.</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.PerformCheck(CMS.SiteProvider.BadWordInfo,System.String@,System.Collections.Hashtable,System.String,System.Int32)">
            <summary>
            Performes bad word check.
            </summary>
            <param name="badWord">Bad word to check</param>
            <param name="text">Text to check</param>
            <param name="foundWords">Hash table of found words</param>
            <param name="siteName">Name of site</param>
            <param name="maxTextLength">Maximum length of the text to be checked. If value is zero, text length is unlimited.</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.Replace(System.String,System.String,System.String@,System.Int32)">
            <summary>
            Replaces expression with replacement in given text.
            </summary>
            <param name="expression">Expression to be replaced</param>
            <param name="replacement">String replacement</param>
            <param name="text">Text in which the given expression is being searched</param>
            <param name="maxTextLength">Maximum length of the text to be checked. If value is zero, text length is unlimited.</param>
            <returns>ArrayList with found occurrences of expression</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.Find(System.String,System.String)">
            <summary>
            Finds occurrences of string in given text.
            </summary>
            <param name="expression">Expression to find</param>
            <param name="text">Text to search in</param>
            <returns>ArrayList with found occurrences</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.Find(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Finds occurrences of regular expression in given text.
            </summary>
            <param name="regularExpression">Regular expression to find</param>
            <param name="text">Text to search in</param>
            <returns>ArrayList with found occurrences</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.LoadBadWords">
            <summary>
            Loads the values to the hash tables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.LoadBadWords(System.String)">
            <summary>
            Loads the values to the culture hash table.
            </summary>
            <param name="cultureCode">Code of culture</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWordsInternal(System.Int32)">
            <summary>
            Returns all bad words for given culture.
            </summary>
            <param name="cultureId">ID of culture</param>
            <returns>DataSet with bad words</returns>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWordsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all bad words for given culture.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Number of records to be selected</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.BadWordExistsInternal(System.String)">
            <summary>
            Returns true if bad word exists.
            </summary>
            <param name="badWord">Bad word</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWordInfoInternal(System.Int32)">
            <summary>
            Returns the BadWordInfo structure for the specified badWord.
            </summary>
            <param name="badWordId">BadWord ID</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.GetBadWordInfoByGuidInternal(System.Guid)">
            <summary>
            Returns the BadWordInfo structure for the specified GUID.
            </summary>
            <param name="guid">Bad word GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.SetBadWordInfoInternal(CMS.SiteProvider.BadWordInfo)">
            <summary>
            Sets (updates or inserts) specified BadWord object.
            </summary>
            <param name="badWord">BadWord object to set</param>
        </member>
        <member name="M:CMS.SiteProvider.BadWordInfoProvider.DeleteBadWordInfoInternal(CMS.SiteProvider.BadWordInfo)">
            <summary>
            Deletes specified BadWord object.
            </summary>
            <param name="infoObj">BadWord object</param>
        </member>
        <member name="T:CMS.SiteProvider.CategoryInfo">
            <summary>
            CategoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CategoryInfo.TYPEINFO">
            <summary>
            Type information for global categories.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CategoryInfo.TYPEINFOUSERCATEGORY">
            <summary>
            Type information for user categories.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty CategoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CategoryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryLastModified">
            <summary>
            Category last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryName">
            <summary>
            Category code name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryEnabled">
            <summary>
            Category enabled.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryID">
            <summary>
            Category ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryDisplayName">
            <summary>
            Category display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryGUID">
            <summary>
            Category GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryCount">
            <summary>
            Category count.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryDescription">
            <summary>
            Category description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryUserID">
            <summary>
            Category User ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategorySiteID">
            <summary>
            ID of the site on which category can be used. 0 for global categories.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryParentID">
            <summary>
            ID of the parent category. 0 for top-level categories.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryIDPath">
            <summary>
            Path consisiting of IDs of categories preceding this category.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryNamePath">
            <summary>
            Path consisting of display names of categories preceding this category.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryLevel">
            <summary>
            Level of nesting for this category. 0 for top-level categories.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryOrder">
            <summary>
            Order of the category.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryChildCount">
            <summary>
            Order of the category.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryIsGlobal">
            <summary>
            Indicates whether category is global.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.CategoryIsPersonal">
            <summary>
            Indicates whether category is personal.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CategoryInfoProvider">
            <summary>
            Class providing CategoryInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CategoryInfoProvider.CategoryIDLength">
            <summary>
            Length of the category ID, 8 by default.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all categories matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategories(System.String,System.String)">
            <summary>
            Returns dataset of all categories matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoryInfo(System.Int32)">
            <summary>
            Returns category with specified ID.
            </summary>
            <param name="categoryId">Category ID.</param>        
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoryInfo(System.String,System.String)">
            <summary>
            Returns category with specified name.
            </summary>
            <param name="categoryName">Category name.</param>                
            <param name="siteName">Site name.</param>                
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.SetCategoryInfo(CMS.SiteProvider.CategoryInfo)">
            <summary>
            Sets (updates or inserts) specified category.
            </summary>
            <param name="categoryObj">Category to be set.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.DeleteCategoryInfo(CMS.SiteProvider.CategoryInfo)">
            <summary>
            Deletes specified category.
            </summary>
            <param name="categoryObj">Category to be deleted.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.DeleteCategoryInfo(System.Int32)">
            <summary>
            Deletes category with specified ID.
            </summary>
            <param name="categoryId">Category ID.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategories(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all categories for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
            <param name="siteId">Site ID.</param>            
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetChildCategories(System.Int32,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all subcategories for specified site matching the specified parameters.
            </summary>
            <param name="categoryId">ID of the category to get child categories for.</param>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategories(System.Int32)">
            <summary>
            Returns dataset of all categories for specified site.
            </summary>
            <param name="siteId">Site ID.</param>        
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoryCount(System.Int32)">
            <summary>
            Gets count of the documents related to the specified category.
            </summary>
            <param name="categoryId">ID of the category.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetDocumentCategories(System.String,System.String,System.Int32)">
            <summary>
            Returns dataset of all categories base on complete where condition from TreeProvider.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by condition.</param>
            <param name="topN">Top N condition.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetDocumentCategories(System.Int32,System.String,System.String)">
            <summary>
            Returns all categories the document is a member of.
            </summary>
            <param name="documentID">ID of the document categories are related to.</param>
            <param name="where">Where condition to filter returned categories.</param>
            <param name="orderBy">Order by expression to sort the returned categories.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.MoveCategoryUp(System.Int32)">
            <summary>
            Moves specified category up within the parent category.
            </summary>
            <param name="categoryId">ID of the category</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.MoveCategoryDown(System.Int32)">
            <summary>
            Moves specified category down within the parent category.
            </summary>
            <param name="categoryId">ID of the category.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetLastCategoryOrder(CMS.SiteProvider.CategoryInfo)">
            <summary>
            Returns maximum order value for given category siblings.
            </summary>
            <param name="category">Category to get max order for.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoryDocumentsWhereCondition(CMS.SiteProvider.CategoryInfo,System.Boolean)">
            <summary>
            Returns where condition usable for filtering documents by category.
            </summary>
            <param name="category">Category to create condition for.</param>
            <param name="onlyEnabled">Indicates if only documents belonging to enabled (sub)categories are to be filtered out.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoriesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all categories matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoryInfoInternal(System.Int32)">
            <summary>
            Returns category with specified ID.
            </summary>
            <param name="categoryId">Category ID.</param>        
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoryInfoInternal(System.String,System.String)">
            <summary>
            Returns category with specified name.
            </summary>
            <param name="categoryName">Category name.</param>                
            <param name="siteName">Site name.</param>         
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.SetCategoryInfoInternal(CMS.SiteProvider.CategoryInfo)">
            <summary>
            Sets (updates or inserts) specified category.
            </summary>
            <param name="categoryObj">Category to be set.</param>        
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.DeleteCategoryInfoInternal(CMS.SiteProvider.CategoryInfo)">
            <summary>
            Deletes specified category.
            </summary>
            <param name="categoryObj">Category to be deleted.</param>        
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoriesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all categories for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetChildCategoriesInternal(System.Int32,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all subcategories for specified site matching the specified parameters.
            </summary>
            <param name="categoryId">ID of the category to get child categories for.</param>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
            <param name="siteId">Site ID.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoryCountInternal(System.Int32)">
            <summary>
            Gets count of the documents related to the specified category.
            </summary>
            <param name="categoryId">ID of the category.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetDocumentCategoriesInternal(System.String,System.String,System.Int32)">
            <summary>
            Returns dataset of all categories base on complete where condition from TreeProvider.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by condition.</param>
            <param name="topN">Top N condition.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetDocumentCategoriesInternal(System.Int32,System.String,System.String)">
            <summary>
            Returns all categories the document is a member of.
            </summary>
            <param name="documentID">ID of the document categories are related to.</param>
            <param name="where">Where condition to filter returned categories.</param>
            <param name="orderBy">Order by expression to sort the returned categories.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.MoveCategoryUpInternal(System.Int32)">
            <summary>
            Moves specified category up within the parent category.
            </summary>
            <param name="categoryId">ID of the category</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.MoveCategoryDownInternal(System.Int32)">
            <summary>
            Moves specified category down within the parent category.
            </summary>
            <param name="categoryId">ID of the category.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetLastCategoryOrderInternal(CMS.SiteProvider.CategoryInfo)">
            <summary>
            Returns maximum order value for given category siblings.
            </summary>
            <param name="category">Category to get max order for.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetCategoryDocumentsWhereConditionInternal(CMS.SiteProvider.CategoryInfo,System.Boolean)">
            <summary>
            Returns where condition usable for filtering documents by category.
            </summary>
            <param name="category">Category to create condition for.</param>
            <param name="onlyEnabled">Indicates if only documents belonging to enabled (sub)categories are to be filtered out.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.UpdateIDPath(System.Int32,System.Int32)">
            <summary>
            Updates the ID paths for the categories which has been moved.
            </summary>
            <param name="oldParentId">ID of the old parent.</param>
            <param name="newParentId">ID of the new parent.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.CreateIDPath(System.String,System.Int32)">
            <summary>
            Returns (and sets in DB) ID path for given CategoryID using its parent ID path.
            </summary>
            <param name="parentPath">CategoryIDPath of the parent category.</param>
            <param name="categoryId">Category ID.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetIDPath(System.String,System.Int32)">
            <summary>
            Returns CategoryIDPath in correct format.
            </summary>
            <param name="parentPath">CategoryIDPath of the parent category.</param>
            <param name="categoryId">Category ID.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.UpdateNamePath(System.Int32,System.Int32)">
            <summary>
            Updates the NamePaths for the categories which has been moved.
            </summary>
            <param name="oldParentId">ID of the old parent.</param>
            <param name="newParentId">ID of the new parent.</param>
        </member>
        <member name="M:CMS.SiteProvider.CategoryInfoProvider.GetNamePath(System.String,System.String)">
            <summary>
            Returns CategoryNamePath in correct format.
            </summary>
            <param name="parentPath">CategorynamePath of the parent category.</param>
            <param name="categoryName">Category display name.</param>
        </member>
        <member name="P:CMS.SiteProvider.CategoryInfoProvider.MaxCategoryLevel">
            <summary>
            Returns maximal availbale level of the category.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ClassSiteInfo">
            <summary>
            ClassSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ClassSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty ClassSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ClassSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ClassSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ClassSiteInfo.ClassID">
            <summary>
            Class ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ClassSiteInfoProvider">
            <summary>
            Class providing ClassSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.GetClassSites(System.String,System.String)">
            <summary>
            Returns DataSet with all classsites.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.GetClassSites(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between classes and sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.GetClassSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the ClassSiteInfo structure for the specified classSite.
            </summary>
            <param name="classId">ClassID</param>
            <param name="siteId">SiteID</param>        
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.SetClassSiteInfo(CMS.SiteProvider.ClassSiteInfo)">
            <summary>
            Sets (updates or inserts) specified classSite.
            </summary>
            <param name="classSite">ClassSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.DeleteClassSiteInfo(CMS.SiteProvider.ClassSiteInfo)">
            <summary>
            Deletes specified classSite.
            </summary>
            <param name="infoObj">ClassSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.RemoveClassFromSite(System.Int32,System.Int32)">
            <summary>
            Deletes specified classSite.
            </summary>
            <param name="classId">ClassID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.AddClassToSite(System.Int32,System.Int32)">
            <summary>
            Adds the class to the specified site.
            </summary>
            <param name="classId">ClassID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.GetClassSitesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between classes and sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.GetClassSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the ClassSiteInfo structure for the specified classSite.
            </summary>
            <param name="classId">ClassID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.SetClassSiteInfoInternal(CMS.SiteProvider.ClassSiteInfo)">
            <summary>
            Sets (updates or inserts) specified classSite.
            </summary>
            <param name="classSite">ClassSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.ClassSiteInfoProvider.DeleteClassSiteInfoInternal(CMS.SiteProvider.ClassSiteInfo)">
            <summary>
            Deletes specified classSite.
            </summary>
            <param name="infoObj">ClassSite object</param>
        </member>
        <member name="T:CMS.SiteProvider.CssStylesheetSiteInfoProvider">
            <summary>
            Class providing CssStylesheetSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.GetCssStylesheetSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the CssStylesheetSiteInfo structure for the specified cssStylesheetSite.
            </summary>
            <param name="stylesheetId">StylesheetID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.SetCssStylesheetSiteInfo(CMS.SiteProvider.CssStylesheetSiteInfo)">
            <summary>
            Sets (updates or inserts) specified cssStylesheetSite.
            </summary>
            <param name="cssStylesheetSite">CssStylesheetSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.DeleteCssStylesheetSiteInfo(CMS.SiteProvider.CssStylesheetSiteInfo)">
            <summary>
            Deletes specified cssStylesheetSite.
            </summary>
            <param name="infoObj">CssStylesheetSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.RemoveCssStylesheetFromSite(System.Int32,System.Int32)">
            <summary>
            Removes CSS stylesheet from site.
            </summary>
            <param name="stylesheetId">StylesheetID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.AddCssStylesheetToSite(System.Int32,System.Int32)">
            <summary>
            Adds the class to the specified site.
            </summary>
            <param name="stylesheetId">StylesheetID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.GetCssStylesheetSites(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between CSS stylesheets and Sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.GetCssStylesheetSitesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between CSS stylesheets and Sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.GetCssStylesheetSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the CssStylesheetSiteInfo structure for the specified cssStylesheetSite.
            </summary>
            <param name="stylesheetId">StylesheetID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.SetCssStylesheetSiteInfoInternal(CMS.SiteProvider.CssStylesheetSiteInfo)">
            <summary>
            Sets (updates or inserts) specified cssStylesheetSite.
            </summary>
            <param name="cssStylesheetSite">CssStylesheetSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfoProvider.DeleteCssStylesheetSiteInfoInternal(CMS.SiteProvider.CssStylesheetSiteInfo)">
            <summary>
            Deletes specified cssStylesheetSite.
            </summary>
            <param name="infoObj">CssStylesheetSite object</param>
        </member>
        <member name="T:CMS.SiteProvider.CultureSiteInfoProvider">
            <summary>
            Class providing CultureSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.GetCultureSites(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between cultures and sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.GetCultureSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the CultureSiteInfo structure for the specified cultureSite.
            </summary>
            <param name="cultureId">CultureID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.SetCultureSiteInfo(CMS.SiteProvider.CultureSiteInfo)">
            <summary>
            Sets (updates or inserts) specified cultureSite.
            </summary>
            <param name="cultureSite">CultureSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.DeleteCultureSiteInfo(CMS.SiteProvider.CultureSiteInfo)">
            <summary>
            Deletes specified cultureSite.
            </summary>
            <param name="infoObj">CultureSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.RemoveCultureFromSite(System.Int32,System.Int32)">
            <summary>
            Deletes specified cultureSite.
            </summary>
            <param name="cultureId">CultureID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.AddCultureToSite(System.Int32,System.Int32)">
            <summary>
            Adds the class to the specified site.
            </summary>
            <param name="cultureId">CultureID</param>
            <param name="siteId">SiteID</param>
            <exception cref="T:System.Exception">Throws Exception if license limitations are not fulfilled.</exception>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.IsCultureOnSite(System.Int32,System.Int32)">
            <summary>
            Determines whether specified culture is on specified site.
            </summary>
            <param name="cultureId">Culture ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.GetCultureSitesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between cultures and sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.GetCultureSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the CultureSiteInfo structure for the specified cultureSite.
            </summary>
            <param name="cultureId">CultureID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.SetCultureSiteInfoInternal(CMS.SiteProvider.CultureSiteInfo)">
            <summary>
            Sets (updates or inserts) specified cultureSite.
            </summary>
            <param name="cultureSite">CultureSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfoProvider.DeleteCultureSiteInfoInternal(CMS.SiteProvider.CultureSiteInfo)">
            <summary>
            Deletes specified cultureSite.
            </summary>
            <param name="infoObj">CultureSite object</param>
        </member>
        <member name="T:CMS.SiteProvider.InlineControlSiteInfoProvider">
            <summary>
            Class providing InlineControlSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.GetInlineControlSites(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between inline controls and sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.GetInlineControlSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the InlineControlSiteInfo structure for the specified inlineControlSite.
            </summary>
            <param name="controlId">ControlID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.SetInlineControlSiteInfo(CMS.SiteProvider.InlineControlSiteInfo)">
            <summary>
            Sets (updates or inserts) specified inlineControlSite.
            </summary>
            <param name="inlineControlSite">InlineControlSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.DeleteInlineControlSiteInfo(CMS.SiteProvider.InlineControlSiteInfo)">
            <summary>
            Deletes specified inlineControlSite.
            </summary>
            <param name="infoObj">InlineControlSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.RemoveInlineControlFromSite(System.Int32,System.Int32)">
            <summary>
            Deletes specified inlineControlSite.
            </summary>
            <param name="controlId">ControlID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.AddInlineControlToSite(System.Int32,System.Int32)">
            <summary>
            Add specified InlineControl to specified site.
            </summary>
            <param name="controlId">ControlID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.IsInlineControlInSite(System.Int32,System.Int32)">
            <summary>
            Check whether InlineControl is in site given by id.
            </summary>
            <param name="controlId">Inline control ID</param>
            <param name="siteId">ID of site to check</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.GetInlineControlSitesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between inline controls and sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.GetInlineControlSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the InlineControlSiteInfo structure for the specified inlineControlSite.
            </summary>
            <param name="controlId">ControlID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.SetInlineControlSiteInfoInternal(CMS.SiteProvider.InlineControlSiteInfo)">
            <summary>
            Sets (updates or inserts) specified inlineControlSite.
            </summary>
            <param name="inlineControlSite">InlineControlSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfoProvider.DeleteInlineControlSiteInfoInternal(CMS.SiteProvider.InlineControlSiteInfo)">
            <summary>
            Deletes specified inlineControlSite.
            </summary>
            <param name="infoObj">InlineControlSite object</param>
        </member>
        <member name="T:CMS.SiteProvider.RelationshipNameSiteInfoProvider">
            <summary>
            Class providing RelationshipNameSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.GetRelationshipNameSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the RelationshipNameSiteInfo structure for the specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.SetRelationshipNameSiteInfo(CMS.SiteProvider.RelationshipNameSiteInfo)">
            <summary>
            Sets (updates or inserts) specified relationshipNameSite.
            </summary>
            <param name="relationshipNameSite">RelationshipNameSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.DeleteRelationshipNameSiteInfo(CMS.SiteProvider.RelationshipNameSiteInfo)">
            <summary>
            Deletes specified relationshipNameSite.
            </summary>
            <param name="infoObj">RelationshipNameSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.RemoveRelationshipNameFromSite(System.Int32,System.Int32)">
            <summary>
            Deletes specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.AddRelationshipNameToSite(System.Int32,System.Int32)">
            <summary>
            Adds the relationship name specified by id to the site.
            </summary>
            <param name="relationshipNameId">ID of relationship name to add</param>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.IsRelationShipInSite(System.Int32,System.Int32)">
            <summary>
            Returns true if the relationship is assigned to the given site.
            </summary>
            <param name="relationshipNameId">Relationship name ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.GetRelationshipNameSites(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between relationship names and sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.GetRelationshipNameSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the RelationshipNameSiteInfo structure for the specified relationshipNameSite.
            </summary>
            <param name="relationshipNameId">RelationshipNameID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.SetRelationshipNameSiteInfoInternal(CMS.SiteProvider.RelationshipNameSiteInfo)">
            <summary>
            Sets (updates or inserts) specified relationshipNameSite.
            </summary>
            <param name="relationshipNameSite">RelationshipNameSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.DeleteRelationshipNameSiteInfoInternal(CMS.SiteProvider.RelationshipNameSiteInfo)">
            <summary>
            Deletes specified relationshipNameSite.
            </summary>
            <param name="infoObj">RelationshipNameSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfoProvider.GetRelationshipNameSitesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between relationship names and sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="T:CMS.SiteProvider.ResourceSiteInfoProvider">
            <summary>
            Class providing ResourceSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.GetResourceSites(System.String,System.String)">
            <summary>
            Returns the bindings between modules(resources) and sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.GetResourceSites(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the bindings between modules(resources) and sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.GetResourceSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the ResourceSiteInfo structure for the specified resourceSite.
            </summary>
            <param name="resourceId">ResourceID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.SetResourceSiteInfo(CMS.SiteProvider.ResourceSiteInfo)">
            <summary>
            Sets (updates or inserts) specified resourceSite.
            </summary>
            <param name="resourceSite">ResourceSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.DeleteResourceSiteInfo(CMS.SiteProvider.ResourceSiteInfo)">
            <summary>
            Removes specified resource from site.
            </summary>
            <param name="infoObj">ResourceSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.Clear">
            <summary>
            Clears the SiteResources hashtable.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.RemoveResourceFromSite(System.Int32,System.Int32)">
            <summary>
            Removes specified resource from site.
            </summary>
            <param name="resourceId">ResourceID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.AddResourceToSite(System.Int32,System.Int32)">
            <summary>
            Adds specified resource to the site.
            </summary>
            <param name="resourceId">ResourceID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.IsResourceOnSite(System.String,System.String)">
            <summary>
            Returns if the resource is available for specified site.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.GetResourceSitesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the bindings between modules(resources) and sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.GetResourceSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the ResourceSiteInfo structure for the specified resourceSite.
            </summary>
            <param name="resourceId">ResourceID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.SetResourceSiteInfoInternal(CMS.SiteProvider.ResourceSiteInfo)">
            <summary>
            Sets (updates or inserts) specified resourceSite.
            </summary>
            <param name="resourceSite">ResourceSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.DeleteResourceSiteInfoInternal(CMS.SiteProvider.ResourceSiteInfo)">
            <summary>
            Deletes specified resourceSite.
            </summary>
            <param name="infoObj">ResourceSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfoProvider.IsResourceOnSiteInternal(System.String,System.String)">
            <summary>
            Returns if the resource is available for specified site.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="T:CMS.SiteProvider.RolePermissionInfo">
            <summary>
            RolePermissionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RolePermissionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfo.#ctor">
            <summary>
            Constructor - Creates an empty RolePermissionInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RolePermissionInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.SiteProvider.RolePermissionInfo.PermissionID">
            <summary>
            Permission ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RolePermissionInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.RolePermissionInfoProvider">
            <summary>
            Class providing RolePermissionInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.GetRolePermissions(System.String,System.String)">
            <summary>
            Returns the RolePermissionInfo structure for the specified rolePermission.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.GetRolePermissions(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the RolePermissionInfo structure for the specified rolePermission.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.GetRolePermissionInfo(System.Int32,System.Int32)">
            <summary>
            Returns the RolePermissionInfo structure for the specified rolePermission.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="permissionId">PermissionID</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.SetRolePermissionInfo(CMS.SiteProvider.RolePermissionInfo)">
            <summary>
            Sets (updates or inserts) specified rolePermission.
            </summary>
            <param name="rolePermission">RolePermission to set</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.SetRolePermissionInfo(System.Int32,System.Int32)">
            <summary>
            Sets (updates or inserts) specified rolePermission.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="permissionId">PermissionID</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.DeleteRolePermissionInfo(CMS.SiteProvider.RolePermissionInfo)">
            <summary>
            Deletes specified rolePermission.
            </summary>
            <param name="infoObj">RolePermission object</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.DeleteRolePermissionInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified rolePermission.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="permissionId">PermissionID</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.GetRolePermissionInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the RolePermissionInfo structure for the specified rolePermission.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="permissionId">PermissionID</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.GetRolePermissionsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all the role permissions data.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.SetRolePermissionInfoInternal(CMS.SiteProvider.RolePermissionInfo)">
            <summary>
            Sets (updates or inserts) specified rolePermission.
            </summary>
            <param name="rolePermission">RolePermission to set</param>
        </member>
        <member name="M:CMS.SiteProvider.RolePermissionInfoProvider.DeleteRolePermissionInfoInternal(CMS.SiteProvider.RolePermissionInfo)">
            <summary>
            Deletes specified rolePermission.
            </summary>
            <param name="infoObj">RolePermission object</param>
        </member>
        <member name="T:CMS.SiteProvider.SettingsCategoryInfo">
            <summary>
            Represents a Settings key.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SettingsCategoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfo.#ctor">
            <summary>
            Constructor, creates an empty SettingsKeyInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates the DataClassInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryID">
            <summary>
            Category ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryDisplayName">
            <summary>
            Category display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryName">
            <summary>
            Category name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryOrder">
            <summary>
            Category order.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryParentID">
            <summary>
            Category parent ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryIDPath">
            <summary>
            Category ID path within the category tree.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryLevel">
            <summary>
            Category level in the category tree.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryChildCount">
            <summary>
            Number of category child categories.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryIconPath">
            <summary>
            Category icon path.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryIsGroup">
            <summary>
            Indicates if category represents group. True -> It is a settings group, False -> It is a settings category.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfo.CategoryIsCustom">
            <summary>
            Indicates if categor is custom. True -> It is a custom category, False -> It is a system category.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SettingsCategoryInfoProvider">
            <summary>
            Class providing Settings category management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SettingsCategoryInfoProvider.SettingsCategoryIDLength">
            <summary>
            Length of the SettingsCategory ID, 8 by default.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetSettingsCategoryInfo(System.Int32)">
            <summary>
            Returns the SettingsCategoryInfo structure for the specified category.
            </summary>
            <param name="categoryId">Category ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetSettingsCategoryInfoByName(System.String)">
            <summary>
            Returns the SettingsCategoryInfo structure for the name.
            </summary>
            <param name="categoryName">CategoryName</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.SetSettingsCategoryInfo(CMS.SiteProvider.SettingsCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified category.
            </summary>
            <param name="category">Settings category to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.DeleteSettingsCategoryInfo(CMS.SiteProvider.SettingsCategoryInfo)">
            <summary>
            Deletes specified category.
            </summary>
            <param name="categoryObj">Country object</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.DeleteSettingsCategoryInfo(System.Int32)">
            <summary>
            Deletes specified category.
            </summary>
            <param name="categoryId">Country ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetAllSettingsCategories">
            <summary>
            Gets all categories.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetRootSettingsCategoryInfo">
            <summary>
            Gets root of categories. This is distinguished by CategoryLevel = 0. If more found -> use first.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetSettingsCategories(System.String,System.String)">
            <summary>
            Gets all categories.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement to use</param>        
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetSettingsCategories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all categories.
            </summary>    
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="topN">Number of data rows which should be included in the result</param>
            <param name="columns">Table columns separated by comma which should be included in the result</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetChildSettingsCategories(System.Int32)">
            <summary>
            Gets DataSet with child setting categories of the specified parent setting category.
            </summary>
            <param name="parentCategoryId">ID of the parent setting category</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetChildSettingsCategories(System.String,System.String)">
            <summary>
            Gets DataSet with child setting categories of the specified parent setting category, filtered by where condition.
            </summary>
            <param name="parentCategoryName">Name of the parent setting category</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.MoveCategoryUp(System.Int32)">
            <summary>
            Moves specified category up.
            </summary>
            <param name="categoryId">Category ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.MoveCategoryDown(System.Int32)">
            <summary>
            Moves specified category down.
            </summary>
            <param name="categoryId">Category ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.SetSettingsCategoryChildCount(System.Int32)">
            <summary>
            Sets correct SettingsCategoryChildCount to the specified SettingsCategory.
            </summary>
            <param name="settingsCategoryID">ID of the SettingsCategory</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetLastSettingsCategoryOrder(System.Int32)">
            <summary>
            Returns last SettingsCategory order for specified parent SettingsCategory.
            </summary>
            <param name="parentCategoryID">Parent SettingsCategory ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.RefreshDataCounts">
            <summary>
            Updates all counts for all sub-objects.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetCategoriesOnPathWhereCondition(System.String,System.Boolean)">
            <summary>
            Gets where condition for all parent categories on path except root
            </summary>
            <param name="groupIDPath">IDPath from settings group</param>
            <param name="includeCurrent">Include current item (the exact path)</param>
            <returns>Where condition for all parent categories from IDPath</returns>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetSettingsCategoryInfoInternal(System.Int32)">
            <summary>
            Returns the SettingsCategoryInfo structure for the specified category.
            </summary>
            <param name="categoryId">Category id</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetSettingsCategoryInfoByNameInternal(System.String)">
            <summary>
            Returns the SettingsCategoryInfo structure for the name.
            </summary>
            <param name="categoryName">CategoryName</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.SetSettingsCategoryInfoInternal(CMS.SiteProvider.SettingsCategoryInfo)">
            <summary>
            Sets (updates or inserts) specified category.
            </summary>
            <param name="category">Settings category to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.DeleteSettingsCategoryInfoInternal(CMS.SiteProvider.SettingsCategoryInfo)">
            <summary>
            Deletes specified category.
            </summary>
            <param name="categoryObj">Country object</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetSettingsCategoriesInternal(System.String,System.String)">
            <summary>
            Gets all categories.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement to use</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetSettingsCategoriesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all categories.
            </summary>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
            <param name="topN">Number of data rows which should be included in the result</param>
            <param name="columns">Table columns which should be included in the result</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetChildSettingsCategoriesInternal(System.Int32)">
            <summary>
            Gets DataSet with child setting categories of the specified parent category.
            </summary>
            <param name="parentCategoryId">ID of the parent setting category</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetChildSettingsCategoriesInternal(System.String,System.String)">
            <summary>
            Gets DataSet with child setting categories of the specified parent category.
            </summary>
            <param name="parentCategoryName">Code name of the parent setting category</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.MoveCategoryUpInternal(System.Int32)">
            <summary>
            Moves specified category up.
            </summary>
            <param name="categoryId">Category ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.MoveCategoryDownInternal(System.Int32)">
            <summary>
            Moves specified category down.
            </summary>
            <param name="categoryId">Category ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.SetSettingsCategoryChildCountInternal(System.Int32)">
            <summary>
            Sets correct CategoryChildCount to the specified SettingsCategory.
            </summary>
            <param name="settingsCategoryID">ID of the SettingsCategory</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetLastSettingsCategoryOrderInternal(System.Int32)">
            <summary>
            Returns last order for specified parent SettingsCategory.
            </summary>
            <param name="parentCategoryID">Parent SettingsCategory ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.RefreshDataCounts(CMS.DataEngine.GeneralConnection)">
            <summary>
            Updates all counts for all sub-objects.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.RemoveObjectDependencies(CMS.SiteProvider.SettingsCategoryInfo)">
            <summary>
            Removes object dependencies.
            </summary>
            <param name="infoObj">Object for which the dependencies should be removed</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetParentPath(System.String)">
            <summary>
            Returns the parent path for the specified path (any kind of path with "/" as a separator)
            </summary>
            <param name="path">Original path</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.GetIDPath(System.String,System.Int32)">
            <summary>
            Returns SettingsCategoryIDPath in correct format.
            </summary>
            <param name="parentPath">SettingsCategoryIDPath of the parent SettingsCategory</param>
            <param name="settingsCategoryID">Post ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.UpdateIDPath(System.Int32,System.Int32)">
            <summary>
            Updates the IDPaths for the SettingsCategory which has been moved.
            </summary>
            <param name="oldParentId">ID of the old parent</param>
            <param name="newParentid">ID of the new parent</param>
        </member>
        <member name="M:CMS.SiteProvider.SettingsCategoryInfoProvider.CreateIDPath(System.String,System.Int32)">
            <summary>
            Returns (and sets in DB) ID path for given SettingsCategoryID using his parent ID path.
            </summary>
            <param name="parentPath">CategoryIDPath of the parent SettingsCategory</param>
            <param name="settingsCategoryID">SettingsCategory ID</param>
        </member>
        <member name="P:CMS.SiteProvider.SettingsCategoryInfoProvider.MaxSettingsCategoryLevel">
            <summary>
            Returns maximal available level of the SettingsCategory.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UserRoleInfo">
            <summary>
            UserRoleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserRoleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserRoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserRoleInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserRoleInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserRoleInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserRoleInfo.ValidTo">
            <summary>
            Date to membership is valid for given user.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CountryInfo">
            <summary>
            CountryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CountryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfo.#ctor">
            <summary>
            Constructor - Creates an empty CountryInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CountryInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CountryInfo.CountryID">
            <summary>
            Country ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CountryInfo.CountryDisplayName">
            <summary>
            Country display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CountryInfo.CountryName">
            <summary>
            Country code name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CountryInfo.CountryGUID">
            <summary>
            Country GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CountryInfo.CountryLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CountryInfoProvider">
            <summary>
            Class providing management of the countries.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountryInfo(System.Int32)">
            <summary>
            Returns the CountryInfo structure for the specified country.
            </summary>
            <param name="countryId">Country id</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountryInfo(System.String)">
            <summary>
            Returns the CountryInfo structure for the specified country.
            </summary>
            <param name="countryName">Country name</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.SetCountryInfo(CMS.SiteProvider.CountryInfo)">
            <summary>
            Sets (updates or inserts) specified country.
            </summary>
            <param name="country">Country to set</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.DeleteCountryInfo(CMS.SiteProvider.CountryInfo)">
            <summary>
            Deletes specified country.
            </summary>
            <param name="countryObj">Country object</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.DeleteCountryInfo(System.Int32)">
            <summary>
            Deletes specified country.
            </summary>
            <param name="countryId">Country id</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountries(System.String,System.String)">
            <summary>
            Gets the countries.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountries(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets the countries.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">TOP N rows</param>
            <param name="columns">Returned columns</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetAllCountries">
            <summary>
            Gets all countries.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountriesWithStates">
            <summary>
            Returns DataSet with all countries which have some states.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Check dependencies. Returns true if something is dependent.
            </summary>
            <param name="countryId">Country ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountryInfoInternal(System.Int32)">
            <summary>
            Returns the CountryInfo structure for the specified country.
            </summary>
            <param name="countryId">Country id</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountryInfoInternal(System.String)">
            <summary>
            Returns the CountryInfo structure for the specified country.
            </summary>
            <param name="countryName">Country name</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.SetCountryInfoInternal(CMS.SiteProvider.CountryInfo)">
            <summary>
            Sets (updates or inserts) specified country.
            </summary>
            <param name="country">Country to set</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.DeleteCountryInfoInternal(CMS.SiteProvider.CountryInfo)">
            <summary>
            Deletes specified country.
            </summary>
            <param name="countryObj">Country object</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountriesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all countries according specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">TOP N rows</param>
            <param name="columns">Returned columns</param>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.GetCountriesWithStatesInternal">
            <summary>
            Returns DataSet with all countries which have some states.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CountryInfoProvider.CheckDependenciesInternal(System.Int32)">
            <summary>
            Check dependencies. Returns true if something is dependent.
            </summary>
            <param name="countryId">Country ID</param>
        </member>
        <member name="T:CMS.SiteProvider.CssStylesheetInfo">
            <summary>
            CSS style sheet info data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CssStylesheetInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfo.#ctor">
            <summary>
            Constructor, creates an empty CssStyleSheet structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates CssStylesheetInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfo.IsInSite(System.Int32)">
            <summary>
            Check whether CssStylesheet is in site given by id.
            </summary>
            <param name="siteId">ID of site to check</param>
            <returns>Returns true if CssStyleSheet is in site</returns>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetID">
            <summary>
            The stylesheet Id.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetDisplayName">
            <summary>
            The stylesheet display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetName">
            <summary>
            The stylesheet name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetText">
            <summary>
            The stylesheet text.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetCheckedOutByUserID">
            <summary>
            Stylesheet checked out user ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetCheckedOutFilename">
            <summary>
            Stylesheet checked out file name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetCheckedOutMachineName">
            <summary>
            Stylesheet check out machine name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetVersionGUID">
            <summary>
            Stylesheet version GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetGUID">
            <summary>
            Stylesheet GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.StylesheetLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfo.IsCheckedOut">
            <summary>
            Indicates if object is checked-out.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CssStylesheetInfoProvider">
            <summary>
            Provides acces to information about cssstylesheet.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CssStylesheetInfoProvider.mCSSStylesheetsDirectory">
            <summary>
            CSS stylesheet directory path.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetAllCssStylesheets">
            <summary>
            Returns DataSet with informations about all CssStyleSheets in db.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheets(System.String,System.String)">
            <summary>
            Returns DataSet with informations about all CssStyleSheets in db.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheets(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with informations about all CssStyleSheets in db.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Specifies number of returned records</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheets(System.String)">
            <summary>
            Returns DataSet with CssStyleSheets available for specified site.
            </summary>
            <param name="siteName">Name of site</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheets(System.String,System.String,System.Int32)">
            <summary>
            Returns DataSet with CssStyleSheets available for specified site.
            </summary>
            <param name="siteName">Name of site</param>
            <param name="columns">Columns to select</param>
            <param name="topN">Top N rows to select</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.SetCssStylesheetInfo(CMS.SiteProvider.CssStylesheetInfo)">
            <summary>
            Sets or updates specified CssStylesheetInfo.
            </summary>
            <param name="stylesheet">Css stylesheet info object</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheetInfo(System.Int32)">
            <summary>
            Returns CssStylesheetInfo object for specified CssStylesheetID.
            </summary>
            <param name="cssStylesheetId">Stylesheet ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheetInfo(System.String)">
            <summary>
            Returns CssStylesheetInfo object for specified CssStylesheetName.
            </summary>
            <param name="cssStylesheetName">Stylesheet name</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.DeleteCssStylesheetInfo(CMS.SiteProvider.CssStylesheetInfo)">
            <summary>
            Deletes specified CssStyleSheet.
            </summary>
            <param name="cssObject">CssStylesheet object to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.DeleteCssStylesheetInfo(System.Int32)">
            <summary>
            Deletes specified CssStyleSheet.
            </summary>
            <param name="cssStyleSheetId">CssStylesheetId to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.DeleteCssStylesheetInfo(System.String)">
            <summary>
            Deletes specified CssStyleSheet.
            </summary>
            <param name="cssStyleSheetName">CssStylesheetName to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtable.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetVirtualStylesheetUrl(System.String,System.String)">
            <summary>
            Returns virtual path to the stylesheet file.
            </summary>
            <param name="codeName">CSS stylesheet code name</param>
            <param name="versionGuid">Version GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCSSStylesheetName(System.String)">
            <summary>
            Returns full cssstylesheet name from the given virtual cssstylesheet path.
            </summary>
            <param name="url">Virtual cssstylesheet path</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheetsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with informations about all CssStyleSheets in db.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Specifies number of returned records</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheetsInternal(System.String,System.String,System.Int32)">
            <summary>
            Returns DataSet with CssStyleSheets available for specified site.
            </summary>
            <param name="siteName">Name of the site stylesheets should be related to</param>
            <param name="columns">Columns to select</param>
            <param name="topN">Top N rows to select</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.SetCssStylesheetInfoInternal(CMS.SiteProvider.CssStylesheetInfo)">
            <summary>
            Sets or updates specified CssStylesheetInfo.
            </summary>
            <param name="stylesheet">CSS stylesheet info object</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheetInfoInternal(System.Int32)">
            <summary>
            Returns CssStylesheetInfo object for specified CssStylesheetID.
            </summary>
            <param name="cssStylesheetId">Stylesheet ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.GetCssStylesheetInfoInternal(System.String)">
            <summary>
            Returns CssStylesheetInfo object for specified CssStylesheetName.
            </summary>
            <param name="cssStylesheetName">Stylesheet name</param>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetInfoProvider.DeleteCssStylesheetInfoInternal(CMS.SiteProvider.CssStylesheetInfo)">
            <summary>
            Deletes specified CssStyleSheet.
            </summary>
            <param name="stylesheet">CssStylesheet object to delete</param>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetInfoProvider.CSSStylesheetsDirectory">
            <summary>
            Gets the CSS stylesheet directory path.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CssStylesheetSiteInfo">
            <summary>
            Css stylesheet site binding info.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CssStylesheetSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty CssStylesheetSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CssStylesheetSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CssStylesheetSiteInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CssStylesheetSiteInfo.StylesheetID">
            <summary>
            Stylesheet ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CultureInfo">
            <summary>
            Culture info data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CultureInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfo.#ctor">
            <summary>
            Constructor, creates an empty CultureInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates the CultureInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the culture info data</param>
        </member>
        <member name="P:CMS.SiteProvider.CultureInfo.CultureID">
            <summary>
            Gets or sets culture ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CultureInfo.CultureName">
            <summary>
            Gets or sets culture name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CultureInfo.CultureCode">
            <summary>
            Gets or sets culture code.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CultureInfo.CultureShortName">
            <summary>
            Gets or setes culture shrot name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CultureInfo.CultureAlias">
            <summary>
            Gets or setes culture alias.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CultureInfo.CultureGUID">
            <summary>
            Culture GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CultureInfo.CultureLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.CultureInfoProvider">
            <summary>
            Class to provide the culture management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CultureInfoProvider.cultureInfos">
            <summary>
            Culture info table indexed by culture code.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CultureInfoProvider.cultureInfosByAlias">
            <summary>
            Culture info table indexed by culture alias.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CultureInfoProvider.siteCultures">
            <summary>
            Cultures per site - DataSet indexed by siteName.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CultureInfoProvider.siteCultureCodes">
            <summary>
            Culture codes per site - ArrayList indexed by siteName.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CultureInfoProvider.siteCultureCount">
            <summary>
            Cultures count per site - int indexed by domain name.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfoForCulture(System.String)">
            <summary>
            Returns CultureInfo object for specified culture code or culture alias.
            </summary>
            <param name="cultureCode">Code of culture or culture alias to retrive</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfo(System.String)">
            <summary>
            Returns CultureInfo object for specified culture code.
            </summary>
            <param name="cultureCode">Code of culture to retrive</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfo(System.Int32)">
            <summary>
            Returns CultureInfo object for specified culture ID.
            </summary>
            <param name="cultureId">ID of culture to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetSafeCulture(System.Int32)">
            <summary>
            Returns CultureInfo object for specified culture ID or null if it does not exist.
            </summary>
            <param name="cultureId">Culture ID</param>
            <returns>CultureInfo with the specified ID or null</returns>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.SetCultureInfo(CMS.SiteProvider.CultureInfo)">
            <summary>
            Sets the specified culture info data.
            </summary>
            <param name="infoObj">CultureInfo object to set (save as new or update existing)</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.DeleteCultureInfo(CMS.SiteProvider.CultureInfo)">
            <summary>
            Deletes specified culture.
            </summary>
            <param name="ci">Culture object</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.DeleteCultureInfo(System.Int32)">
            <summary>
            Deletes specified culture.
            </summary>
            <param name="cultureId">Culture ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.DeleteCultureInfo(System.String)">
            <summary>
            Delete specified culture.
            </summary>
            <param name="cultureCode">Code name of the culture to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultures(System.String,System.String)">
            <summary>
            Returns the DataSet of all the culture records with where condition and order by clause applied.
            </summary>
            <param name="where">Where condition</param>]
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultures(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the DataSet of all the culture records with where condition and order by clause applied.
            </summary>
            <param name="where">Where condition</param>]
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N users</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetAllCultures">
            <summary>
            Gets all cultures.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureSites(System.String)">
            <summary>
            Returns the dataset containing the sites of the specified culture.
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureSites(System.Int32,System.String)">
            <summary>
            Returns the dataset containing the sites of the specified culture.
            </summary>
            <param name="cultureId">Culture id</param>
            <param name="orderBy">ORDER BX expression</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.IsAnyDocument(System.String,System.String)">
            <summary>
            Returns true if exist any document with selected culture on site.
            </summary>
            <param name="siteName">Site name</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetSiteCultureList(System.Int32)">
            <summary>
            Returns dataset of all cultures with joined column SiteID from CMS_SiteCulture table.
            </summary>
            <param name="siteId">ID of the editing site</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.AddCultureToSite(System.Int32,System.Int32)">
            <summary>
            Adds culture to specified site.
            </summary>
            <param name="cultureId">Culture ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.AddCultureToSite(System.String,System.String)">
            <summary>
            Adds culture to specified site.
            </summary>
            <param name="culturedCode">Code of culture to add</param>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.IsCultureOnSite(System.Int32,System.Int32)">
            <summary>
            Determines whether specified culture is on specified site.
            </summary>
            <param name="cultureId">Culture ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.IsCultureOnSite(System.String,System.String)">
            <summary>
            Determines whether specified culture is on specified site.
            </summary>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.RemoveCultureFromSite(System.Int32,System.Int32)">
            <summary>
            Removes culture from the specified site.
            </summary>
            <param name="cultureId">Culture ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.RemoveCultureFromSite(System.String,System.String)">
            <summary>
            Remove culture from the specified site.
            </summary>
            <param name="cultureCode">Code of culture to remove from the site</param>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetSiteCultureCodes(System.String)">
            <summary>
            Returns the arraylist containing the culture codes of the specified site.
            If this feature not available for license type, returns only the first culture found
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetSiteCultures(System.String)">
            <summary>
            Returns the dataset containing the cultures of the specified site.
            If this feature not available for license type, returns only the first culture in the dataset
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.RemoveSiteCultures(System.String)">
            <summary>
            Removes all cultures from specified site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.IsCultureAllowed(System.String,System.String)">
            <summary>
            Checks if the culture is allowed on the site. Returns true if the culture is allowed.
            </summary>
            <param name="culture">Culture to check</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.IsSiteMultilignual(System.String)">
            <summary>
             Finds out whether given site is multilingual
            </summary>
            <param name="siteName">Name of site</param>
            <returns>True if site is multilingual.</returns>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.CheckCultureCode(System.String,System.String)">
            <summary>
            Check if culture code is in web, and return culturecode, if no, return default culture code.
            </summary>
            <param name="cultureCode">Culture code</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.ClearSiteCultures">
            <summary>
            Clears the site cultures hashtables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.ClearSiteCultures(System.Boolean)">
            <summary>
            Clears the site cultures hashtables.
            </summary>
            <param name="logWebFarmTask">Indicates whether webfarm task should be created</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.LicenseVersionCheck">
            <summary>
            Checks if current domain has license supporting Multilingual feature.
            </summary>
            <returns>True if license includes the feature, otherwise false</returns>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.LicenseVersionCheck(System.String,CMS.SettingsProvider.FeatureEnum,CMS.SettingsProvider.VersionActionEnum)">
            <summary>
            Checks if domain has license supporting specified feature.
            </summary>
            <param name="domain">The domain carriing the license</param>
            <param name="feature">The feature to be checked</param>
            <param name="action">The action to complete. If it is insert action currentStatus count is increased to check the state after insertion</param>                
            <returns>True if license includes the feature, otherwise false</returns>
        </member>
        <member name="F:CMS.SiteProvider.CultureInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.LoadCultures">
            <summary>
            Loads culture information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfoForCultureInternal(System.String)">
            <summary>
            Returns CultureInfo object for specified culture code or culture alias.
            </summary>
            <param name="cultureCodeOrAlias">Culture code or culture alias</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfoInternal(System.String)">
            <summary>
            Returns CultureInfo object for specified culture code.
            </summary>
            <param name="cultureCode">Code of culture to retrive</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfoFromDB(System.String,System.Boolean)">
            <summary>
            Returns the CultureInfo structure for the specified culture from database.
            </summary>
            <param name="cultureCode">Culture code name or culture alias</param>
            <param name="getAlias">Idnicates whether culture should be selected by culture code or alias</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfoFromDB(System.String)">
            <summary>
            Returns the CultureInfo structure for the specified culture from database.
            </summary>
            <param name="cultureCode">Culture code name</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureInfoInternal(System.Int32)">
            <summary>
            Returns CultureInfo object for specified culture ID.
            </summary>
            <param name="cultureId">ID of culture to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.SetCultureInfoInternal(CMS.SiteProvider.CultureInfo)">
            <summary>
            Sets the specified culture info data.
            </summary>
            <param name="infoObj">CultureInfo object to set (save as new or update existing)</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.DeleteCultureInfoInternal(CMS.SiteProvider.CultureInfo)">
            <summary>
            Deletes specified culture.
            </summary>
            <param name="ci">Culture object</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCulturesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the DataSet of all the culture records with where condition and order by clause applied.
            </summary>
            <param name="where">Where condition</param>]
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N users</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetCultureSitesInternal(System.String)">
            <summary>
            Returns the dataset containing the sites of the specified culture.
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.IsAnyDocumentInternal(System.String,System.String)">
            <summary>
            Returns true if exist any document with selected culture on site.
            </summary>
            <param name="siteName">Site name</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.LoadSiteCulturesInternal(System.Int32)">
            <summary>
            Returns dataset with all cultures for specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.CultureInfoProvider.GetSiteCultureListInternal(System.Int32)">
            <summary>
            Returns dataset of all cultures with joined column SiteID from CMS_SiteCulture table.
            </summary>
            <param name="siteID">ID of the editing site</param>
        </member>
        <member name="T:CMS.SiteProvider.CultureSiteInfo">
            <summary>
            CultureSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.CultureSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty CultureSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.CultureSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new CultureSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CultureSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.CultureSiteInfo.CultureID">
            <summary>
            Culture ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.FormUserControlInfo">
            <summary>
            FormUserControl info data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfo.#ctor">
            <summary>
            Constructor, creates an empty FormUserControlInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates FormUserControlInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlID">
            <summary>
            ID of the user control.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlDisplayName">
            <summary>
            Display name of the user control.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlCodeName">
            <summary>
            Code name of the user control.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlFileName">
            <summary>
            File name of the user control.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForText">
            <summary>
            Indicates if user control can be used for Text values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForLongText">
            <summary>
            Indicates if user control can be used for Long Text values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForInteger">
            <summary>
            Indicates if user control can be used for Integer values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForLongInteger">
            <summary>
            Indicates if user control can be used for Long Integer values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForDecimal">
            <summary>
            Indicates if user control can be used for Decimal values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForDateTime">
            <summary>
            Indicates if user control can be used for DateTime values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForBoolean">
            <summary>
            Indicates if user control can be used for Boolean values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForFile">
            <summary>
            Indicates if user control can be used for Files.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForDocAttachments">
            <summary>
            Indicates if user control can be used for Document attachments.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForGUID">
            <summary>
            Indicates if control should be used for GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlForVisibility">
            <summary>
            Indicates if control should be used for GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlShowInBizForms">
            <summary>
            Indicates if user control can be used for BizForms.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlDefaultDataType">
            <summary>
            Indicates default data type for control.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlDefaultDataTypeSize">
            <summary>
            Indicates default data type size.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlShowInDocumentTypes">
            <summary>
            Indicates if user control can be displayed for Document types.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlShowInSystemTables">
            <summary>
            Indicates if user control can be displayed in System tables.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlShowInWebParts">
            <summary>
            Indicates if user control can be displayed in Web parts.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlShowInReports">
            <summary>
            Indicates if user control can be displayed in Reports.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlShowInCustomTables">
            <summary>
            Enables or disables use of the form control in custom tables.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlGUID">
            <summary>
            User control GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlParameters">
            <summary>
            Parameters for control.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlResourceID">
            <summary>
            Control resource (module) ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfo.UserControlType">
            <summary>
            Type od user control.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.FormUserControlInfoProvider">
            <summary>
            Class to provide FormUserControl management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetAllFormUserControls">
            <summary>
            Returns dataset with all FormUserControlInfo objects.
            </summary>        
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControls(System.String,System.String)">
            <summary>
            Returns dataset with all FormUserControlInfo objects.
            </summary>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControls(System.String,System.String,System.String)">
            <summary>
            Returns dataset with all FormUserControlInfo objects.
            </summary>
            <param name="columns">Selected columns</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlInfo(System.String)">
            <summary>
            Returns the FormUserControlInfo structure for the specified FormUserControl.
            </summary>
            <param name="userControlCodeName">Formusercontrol code name</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlInfo(System.Int32)">
            <summary>
            Returns the FormUserControlInfo structure for the specified FormUserControl.
            </summary>
            <param name="userControlID">Formusercontrol id</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.SetFormUserControlInfo(CMS.SiteProvider.FormUserControlInfo)">
            <summary>
            Sets the specified FormUserControl info data.
            </summary>
            <param name="infoObj">FormUserControlInfo object to set (save as new or update existing)</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.DeleteFormUserControlInfo(CMS.SiteProvider.FormUserControlInfo)">
            <summary>
            Deletes specified FormUserControl.
            </summary>
            <param name="infoObj">FormUserControl object to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.DeleteFormUserControlInfo(System.Int32)">
            <summary>
            Deletes specified FormUserControl.
            </summary>
            <param name="userControlID">FormUserControl ID</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.DeleteFormUserControlInfo(System.String)">
            <summary>
            Deletes specified FormUserControl.
            </summary>
            <param name="userControlCodeName">FormUserControl code name</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlUrl(CMS.SiteProvider.FormUserControlInfo)">
            <summary>
            Returns virtual path to the form user control file.
            </summary>
            <param name="controlInfo">Form user control info object</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFullPhysicalPath(CMS.SiteProvider.FormUserControlInfo)">
            <summary>
            Returns full path of the form control.
            </summary>
            <param name="controlInfo">Form control info object</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFullPhysicalPath(CMS.SiteProvider.FormUserControlInfo,System.String)">
            <summary>
            Returns full path of the form control.
            </summary>
            <param name="controlInfo">Form control info object</param>
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtable.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetUserControlDefaultDataType(System.String)">
            <summary>
            Returns string array with two values - default data type and default size. If control is not found then "text" and "500" are returned.
            </summary>
            <param name="controlName">Control code name</param>
            <returns>Returns string array with two values. First is default data type for control. Second is default size.</returns>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetTypeEnum(System.Int32)">
            <summary>
            Returns control type enum from integer representation.
            </summary>
            <param name="type">Type as integer</param>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlInfoProvider.formcontrolById">
            <summary>
            FormUserControl info table indexed by currency id.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlInfoProvider.formcontrolByName">
            <summary>
            FormUserControl info table indexed by currency code name.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlInfoProvider.mFormUserControlsDirectory">
            <summary>
            Form user controls directory.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.FormUserControlInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.LoadFormControls">
            <summary>
            Load form controls info into hastable.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlInfoInternal(System.String)">
            <summary>
            Returns the FormUserControlInfo structure for the specified FormUserControl.
            </summary>
            <param name="userControlCodeName">Formusercontrol code name</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlInfoInternal(System.Int32)">
            <summary>
            Returns the FormUserControlInfo structure for the specified FormUserControl.
            </summary>
            <param name="userControlID">Formusercontrol id</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlsInternal(System.String,System.String,System.String)">
            <summary>
            Returns dataset with all FormUserControlInfo objects.
            </summary>
            <param name="columns">Selected columns</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlsInternal(System.String,System.String)">
            <summary>
            Returns dataset with all FormUserControlInfo objects.
            </summary>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.SetFormUserControlInfoInternal(CMS.SiteProvider.FormUserControlInfo)">
            <summary>
            Sets the specified FormUserControl info data.
            </summary>
            <param name="infoObj">FormUserControlInfo object to set (save as new or update existing)</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.DeleteFormUserControlInfoInternal(CMS.SiteProvider.FormUserControlInfo)">
            <summary>
            Deletes specified FormUserControl.
            </summary>
            <param name="infoObj">FormUserControl object to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlInfoFromDBInternal(System.Int32)">
            <summary>
            Returns the UserFormControl info structure for the specified formcontrol from database.
            </summary>
            <param name="formcontrolId">Form control id</param>
        </member>
        <member name="M:CMS.SiteProvider.FormUserControlInfoProvider.GetFormUserControlInfoFromDBInternal(System.String)">
            <summary>
            Returns the UserFormControl info structure for the specified formcontrol from database.
            </summary>
            <param name="formcontrolName">Form control name</param>
        </member>
        <member name="P:CMS.SiteProvider.FormUserControlInfoProvider.FormUserControlsDirectory">
            <summary>
            Form user controls directory.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.InlineControlInfo">
            <summary>
            InlineControlInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.InlineControlInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfo.#ctor">
            <summary>
            Constructor - Creates an empty InlineControlInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new InlineControlInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfo.IsInSite(System.Int32)">
            <summary>
            Check whether InlineControl is in site given by id.
            </summary>
            <param name="siteId">ID of site to check</param>
            <returns>Returns true if InlineControl is in site</returns>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlDescription">
            <summary>
            Control description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlDisplayName">
            <summary>
            Control display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlID">
            <summary>
            Control ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlParameterName">
            <summary>
            Control parameter name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlName">
            <summary>
            Control name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlFileName">
            <summary>
            Control file name (for system purposes).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlGUID">
            <summary>
            Control GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlProperties">
            <summary>
            Control properties.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfo.ControlResourceID">
            <summary>
            Control resource (module) ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.InlineControlInfoProvider">
            <summary>
            Class providing InlineControlInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.InlineControlInfoProvider.mInlineControlsDirectory">
            <summary>
            Inline controls directory.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.InlineControlInfoProvider.controlsById">
            <summary>
            Hashtable indexed by ControlID.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.InlineControlInfoProvider.controlsByName">
            <summary>
            Hashtable indexed by ControlName.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.InlineControlInfoProvider.controlsByGuid">
            <summary>
            Hashtable indexed by ControlGuid.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlInfo(System.Int32)">
            <summary>
            Returns the InlineControlInfo structure for the specified inlineControl.
            </summary>
            <param name="inlineControlId">InlineControl id</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlInfo(System.String)">
            <summary>
            Returns the InlineControlInfo structure for the specified inlineControl.
            </summary>
            <param name="controlName">InlineControl name</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.SetInlineControlInfo(CMS.SiteProvider.InlineControlInfo)">
            <summary>
            Sets (updates or inserts) specified inlineControl.
            </summary>
            <param name="inlineControl">InlineControl to set</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.DeleteInlineControlInfo(CMS.SiteProvider.InlineControlInfo)">
            <summary>
            Deletes specified inlineControl.
            </summary>
            <param name="inlineControlObj">InlineControl object</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.DeleteInlineControlInfo(System.Int32)">
            <summary>
            Deletes specified inlineControl.
            </summary>
            <param name="inlineControlId">InlineControl id</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlsForSite(System.Int32)">
            <summary>
            Returns the dataset containing the inline controls for the specified site.
            </summary>
            <param name="siteID">Site id</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlsForSite(System.Int32,System.String)">
            <summary>
            Returns the dataset containing the inline controls for the specified site.
            </summary>
            <param name="siteID">Site id</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControls(System.String,System.String)">
            <summary>
            Returns all the inline controls within the system.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement to use</param>        
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlUrl(System.String)">
            <summary>
            Returns virtual path to the inline control file.
            </summary>
            <param name="controlName">Inline control name</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlUrl(CMS.SiteProvider.InlineControlInfo)">
            <summary>
            Returns virtual path to the inline control file.
            </summary>
            <param name="controlInfo">Inline control info object</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetFullPhysicalPath(CMS.SiteProvider.InlineControlInfo)">
            <summary>
            Returns full path of the inline control.
            </summary>
            <param name="controlInfo">Inline control info object</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetFullPhysicalPath(CMS.SiteProvider.InlineControlInfo,System.String)">
            <summary>
            Returns full path of the inline control.
            </summary>
            <param name="controlInfo">Inline control info object</param>
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlsInternal(System.String,System.String)">
            <summary>
            Returns all the inline controls within the system.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement to use</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlInfoInternal(System.Int32)">
            <summary>
            Returns the InlineControlInfo structure for the specified inlineControl.
            </summary>
            <param name="inlineControlId">InlineControl id</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlInfoInternal(System.String)">
            <summary>
            Returns the InlineControlInfo structure for the specified inlineControl.
            </summary>
            <param name="controlName">InlineControl name</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.SetInlineControlInfoInternal(CMS.SiteProvider.InlineControlInfo)">
            <summary>
            Sets (updates or inserts) specified inlineControl.
            </summary>
            <param name="inlineControl">InlineControl to set</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.DeleteInlineControlInfoInternal(CMS.SiteProvider.InlineControlInfo)">
            <summary>
            Deletes specified inlineControl.
            </summary>
            <param name="inlineControlObj">InlineControl object</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlsForSiteInternal(System.Int32)">
            <summary>
            Returns the dataset containing the inline controls for the specified site.
            </summary>
            <param name="siteID">Site id</param>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.GetInlineControlsForSiteInternal(System.Int32,System.String)">
            <summary>
            Returns the dataset containing the inline controls for the specified site.
            </summary>
            <param name="siteID">Site id</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="F:CMS.SiteProvider.InlineControlInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.LoadControls">
            <summary>
            Loads the inline controls to the hashtables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlInfoProvider.InlineControlsDirectory">
            <summary>
            Inline controls directory.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.InlineControlSiteInfo">
            <summary>
            InlineControlSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.InlineControlSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty InlineControlSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.InlineControlSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new InlineControlSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlSiteInfo.ControlID">
            <summary>
            Control ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.InlineControlSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.MetaFileInfo">
            <summary>
            MetaFileInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfo.mInputStream">
            <summary>
            Input stream - for file upload.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfo.mStreamProcessed">
            <summary>
            True if the input stream has already been processed.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfo.mMetaFileCustomData">
            <summary>
            Attachment custom data.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.GetDependencyCacheKeys(System.String,System.String)">
            <summary>
            Gets the array of dependency cache keys for current object.
            </summary>
            <param name="key">Cache key</param>
            <param name="context">Cache context</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.GetDependencyCacheKeys">
            <summary>
            Gets the array of dependency cache keys for current object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.#ctor">
            <summary>
            Constructor - Creates an empty MetaFileInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new MetaFileInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Creates a new MetaFileInfo object based on the file specified by given path.
            </summary>
            <param name="filePath">File path</param>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="category">Category</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.#ctor(System.Web.HttpPostedFile,System.Int32,System.String,System.String)">
            <summary>
            Creates a new AttachmentInfo object based on the file posted through the upload control.
            </summary>
            <param name="postedFile">Posted file</param>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="category">Category</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.EnsureBinaryData(System.Boolean)">
            <summary>
            Ensures the binary data - loads the binary data from file stream if present.
            </summary>
            <param name="forceLoadFromDB">If true, the data are loaded even from DB</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.LoadDataFromStream">
            <summary>
            Loads the attachment data from the input stream.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfo.GetParent">
            <summary>
            Returns the parent object.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileImageWidth">
            <summary>
            MetaFile image width.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileMimeType">
            <summary>
            MetaFile MIME type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileExtension">
            <summary>
            MetaFile extension.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileBinary">
            <summary>
            MetaFile binary.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileGroupName">
            <summary>
            MetaFile group name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileImageHeight">
            <summary>
            MetaFile image height.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileObjectID">
            <summary>
            MetaFile object ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileName">
            <summary>
            MetaFile name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileID">
            <summary>
            MetaFile ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileGUID">
            <summary>
            MetaFile GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileObjectType">
            <summary>
            MetaFile object type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileSize">
            <summary>
            MetaFile size.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileSiteID">
            <summary>
            MetaFile site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.InputStream">
            <summary>
            File input stream (for large files).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileTitle">
            <summary>
            MetaFile title.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileDescription">
            <summary>
            MetaFile description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfo.MetaFileCustomData">
            <summary>
            MetaFile custom data.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.MetaFileInfoProvider">
            <summary>
            Class providing MetaFileInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.mThumbnailQuality">
            <summary>
            Thumbnail quality.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.OBJECT_CATEGORY_LAYOUT">
            <summary>
            Layouts category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.OBJECT_CATEGORY_FORM_LAYOUT">
            <summary>
            Form layout category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.OBJECT_CATEGORY_THUMBNAIL">
            <summary>
            Thumbnails category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.OBJECT_CATEGORY_TEMPLATE">
            <summary>
            Templates category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.OBJECT_CATEGORY_INVOICE">
            <summary>
            Invoice category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.OBJECT_CATEGORY_ISSUE">
            <summary>
            Issue category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.OBJECT_CATEGORY_IMAGE">
            <summary>
            Image category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.OBJECT_CATEGORY_EPRODUCT">
            <summary>
            E-product category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.MetaFileInfoProvider.ensureFileLock">
            <summary>
            Lock object for ensuring of the physical files.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFileInfo(System.Int32)">
            <summary>
            Returns the MetaFileInfo structure for the specified metaFile.
            </summary>
            <param name="metaFileId">MetaFile id</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFileInfo(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns the MetaFileInfo structure for the specified metaFile.
            </summary>
            <param name="metaFileGuid">MetaFile guid</param>
            <param name="siteName">Site name</param>
            <param name="globalOrLocal">If true, global (local) files are allowed when local (global) not found</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFileInfoWithoutBinary(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns the MetaFileInfo structure for the specified metaFile without the binary data.
            </summary>
            <param name="metaFileGuid">MetaFile guid</param>
            <param name="siteName">Site name</param>
            <param name="globalOrLocal">If true, global (local) files are allowed when local (global) not found</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.SetMetaFileInfo(CMS.SiteProvider.MetaFileInfo)">
            <summary>
            Sets (updates or inserts) specified metaFile.
            </summary>
            <param name="metaFile">MetaFile to set</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteMetaFileInfo(CMS.SiteProvider.MetaFileInfo)">
            <summary>
            Deletes specified metaFile.
            </summary>
            <param name="metaFileObj">MetaFile object</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteMetaFileInfo(System.Int32)">
            <summary>
            Deletes specified metaFile.
            </summary>
            <param name="metaFileId">MetaFile id</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFiles(System.String,System.String)">
            <summary>
            Gets all the files with specified where/order by.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order By</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFiles(System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets all the files with specified where/order by.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order By</param>
            <param name="columns">Data columns to return</param>
            <param name="topN">Specifies number of returned recordsd</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFiles(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the file list of the files for certain object.
            </summary>
            <param name="objectId">ID of specific object</param>
            <param name="objectType">Object type</param>
            <param name="group">Group name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order By</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFiles(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets the file list of the files for certain object.
            </summary>
            <param name="objectId">ID of specific object</param>
            <param name="objectType">Object type</param>
            <param name="group">Group name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order By</param>
            <param name="columns">Data columns to return</param>
            <param name="topN">Specifies number of returned recordsd</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFilesWithBinary(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the file list of the files for certain object with the binary file data. Loads the binaries from file system if the binary is missing.
            </summary>
            <param name="objectId">ID of specific object</param>
            <param name="objectType">Object type</param>
            <param name="group">Group name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order By</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFilesWithoutBinary(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the file list of the files for certain object without the binary file data.
            </summary>
            <param name="objectId">ID of specific object</param>
            <param name="objectType">Object type</param>
            <param name="group">Group name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order By</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFiles(System.Int32,System.String)">
            <summary>
            Will call the previous method will all the remaining parameters null.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteFiles(CMS.SettingsProvider.GeneralizedInfo,System.String)">
            <summary>
            Deletes all files associated to the given object.
            </summary>
            <param name="infoObject">Info object</param>
            <param name="category">Meta files category</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteFiles(System.Int32,System.String,System.String)">
            <summary>
            Deletes all files associated with the given object.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="category">Meta files category</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteFiles(System.Int32,System.String)">
            <summary>
            Delete all files associated to the given object.
            </summary>
            <param name="objectId">Object id</param>
            <param name="objectType">Meta files type</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.UpdateMetaFiles(System.Int32,System.String,System.Int32,System.Data.DataTable,System.Int32)">
            <summary>
            Updates the object meta files from the given DataTable.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="siteId">Site ID</param>
            <param name="filesDT">Table of the new files (with binaries)</param>
            <param name="filesObjectId">Object ID in the new files table</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.UpdateMetaFiles(System.Int32,System.String,System.Int32,System.Data.DataTable,System.Int32,CMS.SettingsProvider.LoadDataEventHandler)">
            <summary>
            Updates the object meta files from the given DataTable.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="siteId">Site ID</param>
            <param name="filesDT">Table of the new files (with binaries)</param>
            <param name="filesObjectId">Object ID in the new files table</param>
            <param name="onLoadData">Load data event handler</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.UpdateMetaFiles(System.Int32,System.String,System.Int32,System.Data.DataTable,System.Int32,CMS.SettingsProvider.LoadDataEventHandler,System.Boolean)">
            <summary>
            Updates the object meta files from the given DataTable.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="siteId">Site ID</param>
            <param name="filesDT">Table of the new files (with binaries)</param>
            <param name="filesObjectId">Object ID in the new files table</param>
            <param name="onLoadData">Load data event handler</param>
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.CopyMetaFiles(System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.List{System.Guid})">
            <summary>
            Duplicates metafiles for specified object. Returns old guid/new guid list.
            </summary>
            <param name="sourceObjectId">Source object</param>
            <param name="targetObjectId">Target object</param>
            <param name="objectType">Type</param>
            <param name="category">Category</param>
            <param name="convList">List containing old and new guids</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.StoreFilesInFileSystem(System.String)">
            <summary>
            Returns the current settings whether the files should be stored in the filesystem.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.StoreFilesInDatabase(System.String)">
            <summary>
            Returns the current settings whether the files should be stored in the database.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GenerateThumbnails(System.String)">
            <summary>
            Returns the current settings whether the thumbnails should be generated.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetGUIDWhereCondition(System.Guid,System.String,System.Boolean)">
            <summary>
            Gets the meta file where condition.
            </summary>
            <param name="metaFileGuid">File GUID</param>
            <param name="siteName">Site name</param>
            <param name="globalOrLocal">If true, global (local) files are allowed when local (global) not found</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.SaveFileToDisk(System.String,System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Save file to the disk.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="fileData">File data (byte[] or Stream)</param>   
            <param name="deleteOldFiles">Indicates whether files in destination folder with mask '[guid]*.*' should be deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.SaveFileToDisk(System.String,System.String,System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Saves file to the disk.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
            <param name="fileData">File data (byte[] or Stream)</param>   
            <param name="deleteOldFiles">Indicates whether files in destination folder with mask '[guid]*.*' should be deleted</param>
            <param name="synchronization">Indicates if this function is called from "ProcessTask"</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetFullFileName(System.String,System.String)">
            <summary>
            Returns full file name ([name.extension] if extension is specified) or ([name] only if extension is not specified).
            </summary>
            <param name="fileName">File name</param>
            <param name="fileExtension">File extension</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Delete all files with the same name ([name].*).
            </summary>
            <param name="siteName">Site name</param>
            <param name="fileName">Name of the file to delete</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not</param>
            <param name="synchronization">Indicates wehther the method is called due to synchronization</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetWhereCondition(System.Int32,System.String,System.String,System.String)">
            <summary>
            Gets the where condition for meta files.
            </summary>
            <param name="objectId">ID of specific object</param>
            <param name="objectType">Object type</param>
            <param name="group">Group name</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.EnsureMetaFileBinaries(System.Data.DataTable)">
            <summary>
            Ensures the binary data in the DataTable of metafiles.
            </summary>
            <param name="dt">DataTable with the data</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFilesObjectTypes(System.Int32)">
            <summary>
            Returns list of all object types which have some metafiles attached.
            </summary>
            <param name="siteId">ID of the site from which the object types should be recieved</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteFile(System.String,System.String,System.Boolean)">
            <summary>
            Delete all files with the same name ([name].*).
            </summary>
            <param name="siteName">Site name</param>
            <param name="fileName">Name of the file to delete</param>
            <param name="deleteDirectory">Determines whether delete specified directory or not</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFileInfoInternal(System.Int32)">
            <summary>
            Returns the MetaFileInfo structure for the specified metaFile.
            </summary>
            <param name="metaFileId">MetaFile id</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFileInfoInternal(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns the MetaFileInfo structure for the specified metaFile.
            </summary>
            <param name="metaFileGuid">MetaFile guid</param>
            <param name="siteName">Site name</param>
            <param name="globalOrLocal">If true, global (local) files are allowed when local (global) not found</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFileInfoWithoutBinaryInternal(System.Guid,System.String,System.Boolean)">
            <summary>
            Returns the MetaFileInfo structure for the specified metaFile without the binary data.
            </summary>
            <param name="metaFileGuid">MetaFile guid</param>
            <param name="siteName">Site name</param>
            <param name="globalOrLocal">If true, global (local) files are allowed when local (global) not found</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.SetMetaFileInfoInternal(CMS.SiteProvider.MetaFileInfo)">
            <summary>
            Sets (updates or inserts) specified metaFile.
            </summary>
            <param name="metaFile">MetaFile to set</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteMetaFileInfoInternal(CMS.SiteProvider.MetaFileInfo)">
            <summary>
            Deletes specified metaFile.
            </summary>
            <param name="metaFileObj">MetaFile object</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFilesInternal(System.String,System.String,System.String,System.Int32)">
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>       
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFilesWithoutBinaryInternal(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the file list of the files for certain object without the binary file data.
            </summary>
            <param name="objectId">ID of specific object</param>
            <param name="objectType">Object type</param>
            <param name="group">Group name</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order By</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteFilesInternal(System.Int32,System.String,System.String)">
            <summary>
            Delete all files associated to the given object.
            </summary>
            <param name="objectId">Object id</param>
            <param name="objectType">Meta files type</param>
            <param name="category">Category</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.DeleteFilesInternal(CMS.SettingsProvider.GeneralizedInfo,System.String)">
            <summary>
            Deletes all files associated to the given object.
            </summary>
            <param name="infoObject">Info object</param>
            <param name="category">Meta files category</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.RemoveObjectDependencies(CMS.SiteProvider.MetaFileInfo)">
            <summary>
            Removes object dependencies.
            </summary>
            <param name="infoObj">Object for which the dependencies should be removed</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.EnsurePhysicalFile(CMS.SiteProvider.MetaFileInfo,System.String)">
            <summary>
            Ensures the file in the file system and returns the path to the file.
            </summary>
            <param name="fileInfo">File info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.EnsureThumbnailFile(CMS.SiteProvider.MetaFileInfo,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Ensures the thumbnail file.
            </summary>
            <param name="fileInfo">File info</param>
            <param name="siteName">Site name</param>
            <param name="width">File width</param>
            <param name="height">File height</param>
            <param name="maxSideSize">Maximum side size</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetFile(System.Guid,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="guid">Guid of the file to get</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetFile(CMS.SiteProvider.MetaFileInfo,System.String)">
            <summary>
            Returns the file from disk or (if not available on the disk) from database.
            </summary>
            <param name="fileInfo">File info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetFileBinary(System.Guid,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns meta file binary and optionaly store it in file system.
            </summary>
            <param name="guid">Guid of the file to get</param>
            <param name="id">ID of the file to get</param>
            <param name="siteName">Site name</param>
            <param name="storeInFileSystem">If true, given meta file is stored in file system</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetFileBinary(System.String,System.String)">
            <summary>
            Returns the file binary from disk.
            </summary>
            <param name="siteName">Site name</param>
            <param name="fileName">Name of the file to get, including extension</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.ResolveMetaFileImages(CMS.EmailEngine.EmailMessage,System.Int32,System.String,System.String)">
            <summary>
            Appends all attached files to email.
            Replaces link 'src="...GetMetaFile.aspx..."' with link to e-mail attachments (only for images).
            </summary>
            <param name="message">E-mail message</param>
            <param name="objectId">ID of attached meta-file</param>
            <param name="objectType">Type of meta-file</param>
            <param name="category">Meta-file category</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.CanResizeImage(CMS.SiteProvider.MetaFileInfo,System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks whether the image should be processed (resized) by the Image manager (if the destination size is smaller).
            </summary>
            <param name="fileInfo">Meta file info to check</param>
            <param name="width">New width</param>
            <param name="height">New height</param>
            <param name="maxSideSize">Max side size</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetImageThumbnail(CMS.SiteProvider.MetaFileInfo,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesnt exist).
            </summary>
            <param name="fileInfo">File info</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetImageThumbnail(System.Guid,System.Byte[],System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns image thumbnail (from the disk - if already exists, or create new one and save it to disk - if doesnt exist).
            </summary>
            <param name="guid">File GUID</param>
            <param name="imageData">Image data</param>
            <param name="extension">Image extenstion</param>
            <param name="siteName">Site name</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Maximum side size</param>
            <param name="originalWidth">Original width of the image</param>
            <param name="originalHeight">Original height of the image</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetImageThumbnailFile(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the image thumbnail from the disk.
            </summary>
            <param name="guid">Guid of the file to get</param>
            <param name="siteName">Site name</param>
            <param name="height">Image thumbnail width</param>
            <param name="width">Image thumbnail height</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.ResizeMetaFiles(System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resizes specified metafiles to the required dimensions.
            </summary>
            <param name="objectId">ID of specific object</param>
            <param name="objectType">Object type</param>
            <param name="group">Group name</param>
            <param name="where">Where condition</param>        
            <param name="width">Image widht</param>
            <param name="height">Image height</param>
            <param name="maxSideSize">Image max side size</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.SetMetaFilesQuality(System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            Changes images quality using GDI+ built in JPEG encoder.
            </summary>
            <param name="objectId">ID of specific object</param>
            <param name="objectType">Object type</param>
            <param name="group">Group name</param>
            <param name="where">Where condition</param>        
            <param name="quality">New image quality, from 0 (lowest quality) to 100 (highest quality)</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetFilePhysicalPath(System.String,System.String,System.String)">
            <summary>
            Returns physical path to the file.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetThumbnailPhysicalPath(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns physical path to the thumbnail.
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">File GUID</param>
            <param name="extension">File extension</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetFileFolder(System.String,System.String)">
            <summary>
            Returns physical path to the meta file folder (meta files folder path + subfolder).
            </summary>
            <param name="siteName">Site name</param>
            <param name="guid">Meta file GUID</param>        
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetFilesFolderPath(System.String)">
            <summary>
            Returns physical path to folder with meta files which are associated with the specified site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.MetaFileInfoProvider.GetMetaFileUrl(System.Guid,System.String)">
            <summary>
            Returns meta file url.
            </summary>
            <param name="metaFileGuid">Meta file GUID</param>
            <param name="fileName">File name without extension</param>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfoProvider.WebApplicationPhysicalPath">
            <summary>
            Full path to the root of the web.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.MetaFileInfoProvider.DeletePhysicalFiles">
            <summary>
            Indicates if physical files should be deleted.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TagGroupInfo">
            <summary>
            TagGroupInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TagGroupInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfo.#ctor">
            <summary>
            Constructor - Creates an empty TagGroupInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TagGroupInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupIsAdHoc">
            <summary>
            Tag group is ad-hoc.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupLastModified">
            <summary>
            Tag group last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupDisplayName">
            <summary>
            Tag group display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupName">
            <summary>
            Tag group name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupSiteID">
            <summary>
            Tag group site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupDescription">
            <summary>
            Tag group description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupGUID">
            <summary>
            Tag group GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupID">
            <summary>
            Tag group ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagGroupInfo.TagGroupFullName">
            <summary>
            Tag group full name in format [sitename].[taggroupname].
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TagGroupInfoProvider">
            <summary>
            Class providing TagGroupInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroups(System.Int32)">
            <summary>
            Returns dataset of all tag groups from specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroups(System.String,System.String)">
            <summary>
            Returns dataset of all tag groups of the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by condition</param>        
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroups(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all tag groups according to the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by condition</param>
            <param name="topN">Top N condition</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupInfo(System.Int32)">
            <summary>
            Returns the TagGroupInfo structure for the specified tag group.
            </summary>
            <param name="tagGroupId">TagGroup id</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupInfo(System.String,System.Int32)">
            <summary>
            Returns the TagGroupInfo structure for the specified tag group.
            </summary>
            <param name="tagGroupName">TagGroup name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.SetTagGroupInfo(CMS.SiteProvider.TagGroupInfo)">
            <summary>
            Sets (updates or inserts) specified tagGroup.
            </summary>
            <param name="tagGroup">Tag group to set</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.DeleteTagGroupInfo(CMS.SiteProvider.TagGroupInfo)">
            <summary>
            Deletes specified tag group.
            </summary>
            <param name="infoObj">Tag grooup to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.DeleteTagGroupInfo(System.Int32)">
            <summary>
            Deletes specified tag group.
            </summary>
            <param name="tagGroupId">TagGroup id</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupInfo(System.Guid,System.Int32)">
            <summary>
            Returns the TagGroupInfo structure for the specified tag group.
            </summary>
            <param name="tagGroupGuid">TagGroup GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupsInternal(System.Int32)">
            <summary>
            Returns dataset of all tag groups from specified site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupsInternal(System.String,System.String,System.Int32)">
            <summary>
            Returns dataset of all tag groups of the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by condition</param>
            <param name="topN">Top N condition</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all tag groups of the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by condition</param>
            <param name="topN">Top N condition</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupInfoInternal(System.Int32)">
            <summary>
            Returns the TagGroupInfo structure for the specified TagGroup.
            </summary>
            <param name="tagGroupId">TagGroup id</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupInfoInternal(System.String,System.Int32)">
            <summary>
            Returns the TagGroupInfo structure for the specified TagGroup.
            </summary>
            <param name="tagGroupName">TagGroup name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.GetTagGroupInfoInternal(System.Guid,System.Int32)">
            <summary>
            Returns the TagGroupInfo structure for the specified tag group.
            </summary>
            <param name="tagGroupGuid">TagGroup GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.SetTagGroupInfoInternal(CMS.SiteProvider.TagGroupInfo)">
            <summary>
            Sets (updates or inserts) specified tag group.
            </summary>
            <param name="tagGroup">TagGroup to set</param>
        </member>
        <member name="M:CMS.SiteProvider.TagGroupInfoProvider.DeleteTagGroupInfoInternal(CMS.SiteProvider.TagGroupInfo)">
            <summary>
            Deletes specified tag group.
            </summary>
            <param name="infoObj">TagGroup object</param>
        </member>
        <member name="T:CMS.SiteProvider.TagInfo">
            <summary>
            TagInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TagInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagInfo.#ctor">
            <summary>
            Constructor - Creates an empty TagInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TagInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagInfo.TagCount">
            <summary>
            Number of documents tagged with this tag.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagInfo.TagName">
            <summary>
            Name of the tag.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagInfo.TagGroupID">
            <summary>
            ID of the tag group.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TagInfo.TagID">
            <summary>
            ID of the tag.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TagInfoProvider">
            <summary>
            Class providing TagInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTagInfo(System.Int32)">
            <summary>
            Returns the TagInfo structure for the specified tag.
            </summary>
            <param name="tagId">Tag id</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTags(System.String,System.String,System.Int32)">
            <summary>
            Returns all the tags filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTags(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all the tags filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTags(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all the tags for specified document filtered by where condition.
            </summary>
            <param name="documentId">ID of the document the tags of which should be returned</param>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTags(System.String,System.String)">
            <summary>
            Returns all the tags filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>        
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTags(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Returns tags set according specified criteria.
            </summary>
            <param name="tagGroupName">Code name of the tag group</param>
            <param name="siteId">Tag group site ID</param>
            <param name="where">Where condition to filter the data</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="topN">Number of records to return</param>        
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.SetTagInfo(CMS.SiteProvider.TagInfo)">
            <summary>
            Sets (updates or inserts) specified tag.
            </summary>
            <param name="tag">Tag to set</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.DeleteTagInfo(CMS.SiteProvider.TagInfo)">
            <summary>
            Deletes specified tag.
            </summary>
            <param name="infoObj">Tag object</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.DeleteTagInfo(System.Int32)">
            <summary>
            Deletes specified tag.
            </summary>
            <param name="tagId">Tag id</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTagInfoInternal(System.Int32)">
            <summary>
            Returns the TagInfo structure for the specified tag.
            </summary>
            <param name="tagId">Tag id</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTagsInternal(System.String,System.String,System.Int32)">
            <summary>
            Returns all the tags filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTagsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all the tags filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTagsInternal(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all the tags for specified document filtered by where condition.
            </summary>
            <param name="documentId">ID of the document the tags of which should be returned</param>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.GetTagsInternal(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Returns all the tags filtered by specified tag group and document properties (path, culture code, ...) which can be entered as where condition and sorted by orderBy expression.
            </summary>
            <param name="tagGroupName">Tag group name to use</param>
            <param name="siteId">Tag group site ID</param>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.SetTagInfoInternal(CMS.SiteProvider.TagInfo)">
            <summary>
            Sets (updates or inserts) specified tag.
            </summary>
            <param name="tag">Tag to set</param>
        </member>
        <member name="M:CMS.SiteProvider.TagInfoProvider.DeleteTagInfoInternal(CMS.SiteProvider.TagInfo)">
            <summary>
            Deletes specified tag.
            </summary>
            <param name="infoObj">Tag object</param>
        </member>
        <member name="T:CMS.SiteProvider.ObjectHelper">
            <summary>
            Methods for object management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ObjectHelper.GetUrlExtension">
            <summary>
            Returns URL extension used for friendly URLs for current site.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ObjectHelper.GetUrlExtension(System.String)">
            <summary>
            Returns URL extension used for friendly URLs for specified site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectHelper.GetFilesUrlExtension">
            <summary>
            Returns URL extension used for files friendly URLs for current site.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ObjectHelper.GetFilesUrlExtension(System.String)">
            <summary>
            Returns URL extension used for files friendly URLs for specified site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectHelper.SetSettingsKeyInfo(CMS.SettingsProvider.SettingsKeyInfo)">
            <summary>
            Updates the settings key object.
            </summary>
            <param name="infoObj">Settings key object</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectHelper.SetSettingsKeyValue(System.String,System.Object)">
            <summary>
            Sets the value of the given key if the key exists.
            </summary>
            <param name="keyName">Settings key to set</param>
            <param name="value">New settings value</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectHelper.SetSettingsKeyValue(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the value of the given key if the key exists.
            </summary>
            <param name="keyName">Settings key to set</param>
            <param name="value">New settings value</param>
            <param name="logSynchronization">If true, synchronization task is logged</param>
        </member>
        <member name="P:CMS.SiteProvider.ObjectHelper.FileUrlExtension">
            <summary>
            Friendly URL extension.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ObjectHelper.FriendlyUrlExtension">
            <summary>
            Friendly URL extension.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ObjectHelper.FilesFriendlyUrlExtension">
            <summary>
            Files friendly URL extension.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ObjectRelationshipInfo">
            <summary>
            ObjectRelationshipInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ObjectRelationshipInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ObjectRelationshipInfo.mCustomData">
            <summary>
            Relationship custom data.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfo.#ctor">
            <summary>
            Constructor - Creates an empty ObjectRelationshipInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ObjectRelationshipInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ObjectRelationshipInfo.RelationshipLeftObjectID">
            <summary>
            Relationship left object ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ObjectRelationshipInfo.RelationshipLeftObjectType">
            <summary>
            Relationship left object type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ObjectRelationshipInfo.RelationshipNameID">
            <summary>
            Relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ObjectRelationshipInfo.RelationshipRightObjectID">
            <summary>
            Relationship right object ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ObjectRelationshipInfo.RelationshipRightObjectType">
            <summary>
            Relationship right object type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ObjectRelationshipInfo.RelationshipCustomData">
            <summary>
            Relationship custom data.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ObjectRelationshipInfoProvider">
            <summary>
            Class providing ObjectRelationshipInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetObjectRelationshipInfo(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns the ObjectRelationshipInfo structure for the specified ObjectRelationship.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.SetObjectRelationshipInfo(CMS.SiteProvider.ObjectRelationshipInfo)">
            <summary>
            Sets (updates or inserts) specified ObjectRelationship.
            </summary>
            <param name="objectRelationship">ObjectRelationship to set</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.RemoveRelationship(CMS.SiteProvider.ObjectRelationshipInfo)">
            <summary>
            Removes the relationship.
            </summary>
            <param name="infoObj">ObjectRelationship object</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.RemoveRelationship(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Removes the relationship.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetAllRelationships(System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets all the relationships based on the given parameters.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetRelationships(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetRelationships(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipNameId">RelationshipName ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetRelationships(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipNameId">RelationshipName ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
            <param name="relatedObjectType">Type of the related object</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.DeleteRelationships(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.AddRelationshipsTranslation(System.Data.DataSet,CMS.SettingsProvider.TranslationHelper)">
            <summary>
            Adds the object translations for the given relationship table.
            </summary>
            <param name="ds">DataSet with the relationships</param>
            <param name="th">Translation helper to initialize</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.UpdateRelationships(System.Int32,System.String,System.Data.DataTable,CMS.SettingsProvider.TranslationHelper)">
            <summary>
            Updates the object relationships.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipsDT">Relationships table</param>
            <param name="th">Translation helper with the object translation data</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.UpdateRelationships(System.Int32,System.String,System.Data.DataTable,CMS.SettingsProvider.TranslationHelper,System.Boolean)">
            <summary>
            Updates the object relationships.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipsDT">Relationships table</param>
            <param name="th">Translation helper with the object translation data</param>
            <param name="logSynchronization">Indicates if staging tasks should be logged</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.RelationshipExists(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns true if the relationship exists.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.AddRelationship(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Adds the relationship to the database.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetWhereCondition(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets the relationship where condition.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetWhereCondition(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets the relationship where condition.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
            <param name="relatedObjectType">Type of the related object</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetObjectRelationshipInfoInternal(System.Int32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns the ObjectRelationshipInfo structure for the specified ObjectRelationship.
            </summary>
            <param name="leftObjectId">Relationship left object ID</param>
            <param name="leftObjectType">Relationship left object type</param>
            <param name="rightObjectId">Relationship right object ID</param>
            <param name="rightObjectType">Relationship right object type</param>
            <param name="relationshipNameId">Relationship name ID</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.SetObjectRelationshipInfoInternal(CMS.SiteProvider.ObjectRelationshipInfo)">
            <summary>
            Sets (updates or inserts) specified ObjectRelationship.
            </summary>
            <param name="objectRelationship">ObjectRelationship to set</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.RemoveRelationshipInternal(CMS.SiteProvider.ObjectRelationshipInfo)">
            <summary>
            Removes the relationship.
            </summary>
            <param name="infoObj">ObjectRelationship object</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetAllRelationshipsInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Gets all the relationships based on the given parameters.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.GetRelationshipsInternal(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="relationshipNameId">RelationshipName ID</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
            <param name="relatedObjectType">Type of the related object</param>
        </member>
        <member name="M:CMS.SiteProvider.ObjectRelationshipInfoProvider.DeleteRelationshipsInternal(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes all the relationships for the specified object.
            Left and right parameters determine whether the object can be on left or right side of the relationship.
            </summary>
            <param name="objectId">Object ID</param>
            <param name="objectType">Object type</param>
            <param name="left">Object on the left side of the relationship</param>
            <param name="right">Object on the right side of the relationship</param>
        </member>
        <member name="T:CMS.SiteProvider.RelationshipNameSiteInfo">
            <summary>
            RelationshipNameSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RelationshipNameSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty RelationshipNameSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RelationshipNameSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RelationshipNameSiteInfo.RelationshipNameID">
            <summary>
            Relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RelationshipNameSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ResourceSiteInfo">
            <summary>
            ResourceSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ResourceSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty ResourceSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ResourceSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ResourceSiteInfo.ResourceID">
            <summary>
            Resource ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ResourceSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AbuseReportStatusEnum">
            <summary>
            Abuse report status enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AbuseReportStatusEnum.New">
            <summary>
            New abuse report.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AbuseReportStatusEnum.Solved">
            <summary>
            Solved abuse report.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AbuseReportStatusEnum.Rejected">
            <summary>
            Rejected abuse report.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SiteContext">
            <summary>
            Site related context methods and variables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteContext.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteContext.GetCurrentUser">
            <summary>
            Returns information on the current user according user ID/ user name specified as an URL parameter of the current request
            </summary>        
        </member>
        <member name="M:CMS.SiteProvider.SiteContext.GetCurrentCategory">
            <summary>
            Returns information on the current category according category ID/name specified as an URL parameter of the current request
            </summary> 
        </member>
        <member name="M:CMS.SiteProvider.SiteContext.GetProperty(System.String)">
            <summary>
            Gets the context property.
            </summary>
            <param name="name">Property name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteContext.SetProperty(System.String,System.Object)">
            <summary>
            Sets the context property.
            </summary>
            <param name="name">Property name</param>
            <param name="value">New value</param>
        </member>
        <member name="P:CMS.SiteProvider.SiteContext.ContextObject">
            <summary>
            Context object.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteContext.Properties">
            <summary>
            Properties available through the context.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteContext.CurrentUser">
            <summary>
            Current user info object according the URL parameter of the current request. 
            It is available when the request contains parameters "userid", "username" or "userguid" with valid value of the user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteContext.CurrentCategory">
            <summary>
            Current category info object according the URL parameter of the current request. 
            It is available when the request contains parameters "category" or "categoryname" with valid value of the category.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SiteNameOnDemand">
            <summary>
            Encapsulates the site name but doesn't request it until it is demanded by Value.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteNameOnDemand.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SiteObjectType">
            <summary>
            System object type constants.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.GROUP_SITE">
            <summary>
            Site object types - Special constant.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.AVATAR">
            <summary>
            Code name for avatar object.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.CATEGORY">
            <summary>
            Code name for document global category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.TAGGROUP">
            <summary>
            Code name for tag group.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.CSSSTYLESHEET">
            <summary>
            Code name for CSS style sheet.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.COUNTRY">
            <summary>
            Code name for countries.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.CULTURE">
            <summary>
            Code name for cultures;.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.FORMUSERCONTROL">
            <summary>
            Code name for form user controls.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.INLINECONTROL">
            <summary>
            Code name for inline controls.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.METAFILE">
            <summary>
            Code name for meta files.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.RESOURCE">
            <summary>
            Code name for resources.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.REPORT">
            <summary>
            Code name for report.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.RELATIONSHIPNAME">
            <summary>
            Relationship name.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.UICULTURE">
            <summary>
            Code name for UI cultures.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.WEBTEMPLATE">
            <summary>
            Code name for web templates.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.USER">
            <summary>
            Code name for users;.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.USERSETTINGS">
            <summary>
            Code name for users settings.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.ROLE">
            <summary>
            Code name for roles.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SITE">
            <summary>
            Code name for sites.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SITELIST">
            <summary>
            Code name for site list.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SITEDOMAINALIAS">
            <summary>
            Code name for site domain alias.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.PERMISSION">
            <summary>
            Code name for permissions.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.UIELEMENT">
            <summary>
            Code name for UI Element.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.ROLEUIELEMENT">
            <summary>
            Code name for Role UI Element.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.STATE">
            <summary>
            Code name for states.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.CLASS">
            <summary>
            Class (document type, system table ...).
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.TAG">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.TIMEZONE">
            <summary>
            Time zone.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.BADWORD">
            <summary>
            Bad words.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.BADWORDCULTURE">
            <summary>
            Bad words.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.ABUSEREPORT">
            <summary>
            Abuse report.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SETTINGSCATEGORY">
            <summary>
            Code name for settings category.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.BANNEDIP">
            <summary>
            Code name for BannedIPs.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.BADGE">
            <summary>
            Code name of badge.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SEARCHINDEX">
            <summary>
            Code name of search index.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SEARCHINDEXSITE">
            <summary>
            Code name of search index site.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SEARCHINDEXCULTURE">
            <summary>
            Code name of search index culture.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SEARCHTASK">
            <summary>
            Code name of search task.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.MEMBERSHIP">
            <summary>
            Code name of membership.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.MEMBERSHIPROLE">
            <summary>
            Code name of membership role.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.MEMBERSHIPUSER">
            <summary>
            Code name of membership user.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.MEMBERSHIPLIST">
            <summary>
            "Virtual" info for display view in uniselector.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.USERROLELIST">
            <summary>
            "Virtual" info for display view in uniselector.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.USERLIST">
            <summary>
            "Virtual" info for display view.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.DOCUMENTTYPE">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SYSTEMTABLE">
            <summary>
            System table.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.CUSTOMTABLE">
            <summary>
            Custom table.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.CSSSTYLESHEETSITE">
            <summary>
            CSS stylesheet site binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.INLINECONTROLSITE">
            <summary>
            Inline control site binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.RESOURCESITE">
            <summary>
            Resource site binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.CULTURESITE">
            <summary>
            Culture site binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.USERSITE">
            <summary>
            User site binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.USERROLE">
            <summary>
            User site binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.USERSETTINGSROLELIST">
            <summary>
            User settings role list.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.USERCULTURE">
            <summary>
            User culture binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.ROLEPERMISSION">
            <summary>
            Role permission binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.RELATIONSHIPNAMESITE">
            <summary>
            Relationship name site binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.CLASSSITE">
            <summary>
            Class site binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.ALLOWEDCHILDCLASS">
            <summary>
            Allowed child class bindings.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.OBJECTRELATIONSHIP">
            <summary>
            Object relationship.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.OPENIDUSER">
            <summary>
            User OpenID binding.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteObjectType.SEARCHENGINE">
            <summary>
            Search engine.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteObjectType.EnsureValidType(System.String)">
            <summary>
            Returns the valid object type for given type - For backward compatibility.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteObjectType.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.SiteProvider.PermissionNameInfo">
            <summary>
            Permission info data container.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.PermissionNameInfo.TYPEINFOCLASS">
            <summary>
            Class type information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.PermissionNameInfo.TYPEINFORESOURCE">
            <summary>
            Resource type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfo.#ctor">
            <summary>
            Constructor, creates an empty PermissionNameInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty PermissionNameInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionId">
            <summary>
            Gets or sets the permission ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionDisplayName">
            <summary>
            Gets or sets the permission display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionName">
            <summary>
            Gets or sets the permission name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.ClassId">
            <summary>
            Gets or sets the class ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.ResourceId">
            <summary>
            Gets or sets the resource ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionGUID">
            <summary>
            Permission GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionDescription">
            <summary>
            The Permission Description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionDisplayInMatrix">
            <summary>
            Indicates whether the permission should be displayed in the permission matrix as well.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionOrder">
            <summary>
            Gets or sets permission order.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.PermissionEditableByGlobalAdmin">
            <summary>
            Indicates whether the permission can be assigned only by global administrators.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.PermissionNameInfo.TypeInfo">
            <summary>
            Type info.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.PermissionNameInfoProvider">
            <summary>
            Permission info data container class.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionMatrix(System.Int32,System.String,System.Int32)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionMatrix(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
            <param name="displayInMatrix">Return permission displayed in matrix</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionMatrix(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
            <param name="roleGroupId">Group ID the roles should belong to</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionMatrix(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
            <param name="roleGroupId">Group ID the roles should belong to</param>
            <param name="displayInMatrix">Return permission displayed in matrix</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfoForResource(System.String,System.String,System.String)">
            <summary>
            Returns the permission name info object for the resource.
            </summary>
            <param name="resourceName">Name of the resource which permission depends to</param>
            <param name="permissionName">Name of the permission to retrieve</param>
            <param name="siteName">Site which the permission depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfoForClass(System.String,System.String,System.String)">
            <summary>
            Returns the permission name info object for the class.
            </summary>
            <param name="className">Name of the class which permission depends to</param>
            <param name="permissionName">Name of the permission to retrieve</param>
            <param name="siteName">Site which the permission depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfo(System.String,System.String,System.String)">
            <summary>
            Returns the PermissionNameInfo object by the given parameters.
            </summary>
            <param name="permissionName">Permission name to retrieve</param>
            <param name="resourceName">Resource name (null when Class permission)</param>
            <param name="className">Class name (null when Resource permission)</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfo(System.Int32)">
            <summary>
            Returns the permission name info object.
            </summary>
            <param name="permissionId">Id of the permission to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.SetPermissionInfo(CMS.SiteProvider.PermissionNameInfo)">
            <summary>
            Sets the specified permission data.
            </summary>
            <param name="permissionObj">New permission info data</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.DeletePermissionInfo(CMS.SiteProvider.PermissionNameInfo)">
            <summary>
            Deletes the specified permission.
            </summary>
            <param name="pni">Permission object</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.DeletePermissionInfo(System.Int32)">
            <summary>
            Deletes the specified permission.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetResourcePermissions(System.Int32)">
            <summary>
            Gets the DataSet of the resource permissions.
            </summary>
            <param name="resourceId">Resource ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetClassPermissions(System.Int32)">
            <summary>
            Gets the DataSet of the class permissions.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissions(System.Int32,System.Int32)">
            <summary>
            Gets the DataSet of the permissions for specific resource and role.
            </summary>
            <param name="resourceId">ID of the resource the permissions are included in</param>
            <param name="roleId">ID of the role which is granted with requested permissions</param>           
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionsWhereCondition(System.Int32,System.Int32)">
            <summary>
            Gets the where condition to limit permissions for specific resource and role.
            </summary>
            <param name="resourceId">ID of the resource the permissions are included in</param>
            <param name="roleId">ID of the role which is granted with requested permissions</param> 
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.CreateDefaultClassPermissions(System.Int32)">
            <summary>
            Creates the default.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.CreateDefaultCustomTablePermissions(System.Int32)">
            <summary>
            Creates the default custom table permissions.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.CreateClassPermission(System.Int32,System.String,System.String)">
            <summary>
            Sets default permission for the new class.
            </summary>
            <param name="classId">Class Id</param>
            <param name="permissionName">Permission name</param>
            <param name="permissionDisplayName">Permission display name</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.CreateClassPermission(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Sets default permission for the new class.
            </summary>
            <param name="classId">Class Id</param>
            <param name="permissionName">Permission name</param>
            <param name="permissionDisplayName">Permission display name</param>
            <param name="permissionOrder">Permission order</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.CreateClassPermission(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Sets default permission for the new class.
            </summary>
            <param name="classId">Class Id</param>
            <param name="permissionName">Permission name</param>
            <param name="permissionDisplayName">Permission display name</param>
            <param name="permissionOrder">Permission order</param>
            <param name="permissionDescription">Permission description</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.DeleteResoucePermissions(System.Int32)">
            <summary>
            Deletes all resource permissions.
            </summary>
            <param name="resourceId">Resource ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.DeleteClassPermissions(System.Int32)">
            <summary>
            Deletes all class permissions.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.MovePermissionUp(System.Int32)">
            <summary>
            Moves specified permission up.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.MovePermissionDown(System.Int32)">
            <summary>
            Moves specified permission down.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetLastPermissionOrder(System.Int32,System.Int32)">
            <summary>
            Returns order of the last permission.
            </summary>
            <param name="classId">ID of the class to get last permission order for</param>
            <param name="resourceId">ID of the resource to get last permission order for</param>
            <returns>Number representing the last permission order for the class or resource.</returns>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNames(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets permissions names.
            </summary>
            <param name="where">Where condition to use</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="topN">TopN parameter</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNamesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all the permission names within the system.
            </summary>
            <param name="where">Where condition to use</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="topN">TopN parameter</param>       
            <param name="columns">Data columns to return</param>   
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionMatrixInternal(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
            <param name="displayInMatrix">Return permission displayed in matrix</param>
            <param name="roleGroupId">Group ID the roles should belong to</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfoForResourceInternal(System.String,System.String,System.String)">
            <summary>
            Returns the permission name info object for the resource.
            </summary>
            <param name="resourceName">Name of the resource which permission depends to</param>
            <param name="permissionName">Name of the permission to retrieve</param>
            <param name="siteName">Site which the permission depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfoForClassInternal(System.String,System.String,System.String)">
            <summary>
            Returns the permission name info object for the class.
            </summary>
            <param name="className">Name of the class which permission depends to</param>
            <param name="permissionName">Name of the permission to retrieve</param>
            <param name="siteName">Site which the permission depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfoInternal(System.String,System.String,System.String)">
            <summary>
            Returns the PermissionNameInfo object by the given parameters.
            </summary>
            <param name="permissionName">Permission name to retrieve</param>
            <param name="resourceName">Resource name (null when Class permission)</param>
            <param name="className">Class name (null when Resource permission)</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionNameInfoInternal(System.Int32)">
            <summary>
            Returns the permission name info object.
            </summary>
            <param name="permissionId">Id of the permission to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.SetPermissionInfoInternal(CMS.SiteProvider.PermissionNameInfo)">
            <summary>
            Sets the specified permission data.
            </summary>
            <param name="permissionObj">New permission info data</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.DeletePermissionInfoInternal(CMS.SiteProvider.PermissionNameInfo)">
            <summary>
            Deletes the specified permission.
            </summary>
            <param name="pni">Permission object</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetResourcePermissionsInternal(System.Int32)">
            <summary>
            Gets the DataSet of the resource permissions.
            </summary>
            <param name="resourceId">Resource ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetClassPermissionsInternal(System.Int32)">
            <summary>
            Gets the DataSet of the class permissions.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.GetPermissionsInternal(System.Int32,System.Int32)">
            <summary>
            Gets the DataSet of the permissions for specific resource and role.
            </summary>
            <param name="resourceId">ID of the resource the permissions are included in</param>        
            <param name="roleId">ID of the role which is granted with requested permissions</param>           
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.MovePermissionUpInternal(System.Int32)">
            <summary>
            Moves specified permission up.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.MovePermissionDownInternal(System.Int32)">
            <summary>
            Moves specified permission down.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.SiteProvider.PermissionNameInfoProvider.EnsureClassPermissionOrder(CMS.SiteProvider.PermissionNameInfo)">
            <summary>
            Method to ensure correct class default perrmissions order
            </summary>
            <param name="permission">Permission which order should be ensured</param>
        </member>
        <member name="T:CMS.SiteProvider.RelationshipNameInfo">
            <summary>
            Relationship name info data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RelationshipNameInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfo.#ctor">
            <summary>
            Constructor, creates an empty RelationshipNameInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty RelationshipNameInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfo.IsInSite(System.Int32)">
            <summary>
            Check whether relationship is in site given by id.
            </summary>
            <param name="siteId">ID of site to check</param>
            <returns>Returns true if relationship name already exists</returns>
        </member>
        <member name="P:CMS.SiteProvider.RelationshipNameInfo.RelationshipNameId">
            <summary>
            Gets or sets the relationship name ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RelationshipNameInfo.RelationshipDisplayName">
            <summary>
            Gets or sets the relationship display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RelationshipNameInfo.RelationshipName">
            <summary>
            Gets or sets the relationship name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RelationshipNameInfo.RelationshipAllowedObjects">
            <summary>
            Gets or sets the relationship allowed objects.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RelationshipNameInfo.RelationshipGUID">
            <summary>
            Relationship GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RelationshipNameInfo.RelationshipLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.RelationshipNameInfoProvider">
            <summary>
            Provides access to information about relationship names.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNameInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.SetRelationshipNameInfo(CMS.SiteProvider.RelationshipNameInfo)">
            <summary>
            Sets the specified relationship name data from info object to DB.
            </summary>
            <param name="relationshipNameInfo">Relationship name data object</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNameInfo(System.Int32)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name ID.
            </summary>
            <param name="relationshipNameId">Relationship name ID to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNameInfo(System.String)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name.
            </summary>
            <param name="relationshipName">Relationship name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.DeleteRelationshipName(CMS.SiteProvider.RelationshipNameInfo)">
            <summary>
            Deletes relationship name specified by id.
            </summary>
            <param name="ri">RelationshipName object</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.DeleteRelationshipName(System.Int32)">
            <summary>
            Deletes relationship name specified by id.
            </summary>
            <param name="relationshipNameId">ID of relationship name to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetAllRelationshipNames(System.Int32)">
            <summary>
            Returns list of all relationship names.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNames(System.String,System.String)">
            <summary>
            Returns list of relationship names specified by where condition.
            </summary>        
            <param name="where">Where condition</param>
            <param name="orderBy">Order by statement to use</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNames(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns list of relationship names specified by where condition.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetAllRelationshipNames(System.Int32,System.String)">
            <summary>
            Returns list of relationship names specified by where condition.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.RelationshipNameExists(System.String)">
            <summary>
            Check whether relationship with given name already exists.
            </summary>
            <param name="name">Relationship name to check</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
            <param name="dataText">Data</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtable.
            </summary>
            <param name="logTasks">If true, the clear tasks are logged</param>
        </member>
        <member name="F:CMS.SiteProvider.RelationshipNameInfoProvider.relationshipNamesById">
            <summary>
            Relationship names table indexed by id.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RelationshipNameInfoProvider.relationshipNamesByName">
            <summary>
            Relationship names table indexed by code name.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RelationshipNameInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.LoadRelationshipNames">
            <summary>
            Load relationship names data into ProviderHashtables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNameInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.SetRelationshipNameInfoInternal(CMS.SiteProvider.RelationshipNameInfo)">
            <summary>
            Sets the specified relationship name data from info object to DB.
            </summary>
            <param name="relationshipNameInfo">Relationship name data object</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNameInfoInternal(System.Int32)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name ID.
            </summary>
            <param name="relationshipNameId">Relationship name ID to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNameInfoFromDBInternal(System.Int32)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name ID.
            </summary>
            <param name="relationshipNameId">Relationship name ID to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNameInfoInternal(System.String)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name.
            </summary>
            <param name="relationshipName">Relationship name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNameInfoFromDBInternal(System.String)">
            <summary>
            Returns the RelationshipNameInfo structure for the specified relationship name.
            </summary>
            <param name="relationshipName">Relationship name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.DeleteRelationshipNameInternal(CMS.SiteProvider.RelationshipNameInfo)">
            <summary>
            Deletes relationship name specified by id.
            </summary>
            <param name="ri">RelationshipName object</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetAllRelationshipNamesInternal(System.Int32,System.String)">
            <summary>
            Returns list of relationship names specified by where condition.
            </summary>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNamesInternal(System.String,System.String)">
            <summary>
            Returns list of relationship names specified by where condition.
            </summary>        
            <param name="where">Where condition</param>
            <param name="orderBy">Order by statement to use</param>
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.GetRelationshipNamesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns list of relationship names specified by where condition.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.RelationshipNameInfoProvider.RelationshipNameExistsInternal(System.String)">
            <summary>
            Check whether relationship with given name already exists.
            </summary>
            <param name="name">Relationship name to check</param>
        </member>
        <member name="T:CMS.SiteProvider.ResourceInfo">
            <summary>
            Resource info data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ResourceInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfo.GetChildObject(System.String)">
            <summary>
            Gets child object info
            </summary>
            <param name="objectType">Child object type</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfo.#ctor">
            <summary>
            Constructor, creates an empty ResourceInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty ResourceInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="P:CMS.SiteProvider.ResourceInfo.ResourceId">
            <summary>
            Gets or sets the resource ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ResourceInfo.ResourceDisplayName">
            <summary>
            Gets or sets the resource display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ResourceInfo.ResourceName">
            <summary>
            Gets or sets the resource name.
            </summary>        
        </member>
        <member name="P:CMS.SiteProvider.ResourceInfo.ResourceDescription">
            <summary>
            Gets or sets the resource description.
            </summary>        
        </member>
        <member name="P:CMS.SiteProvider.ResourceInfo.ShowInDevelopment">
            <summary>
            Gets or sets the value saying if the resource is shown in Development.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ResourceInfo.ResourceUrl">
            <summary>
            Gets or sets the resource url.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ResourceInfo.ResourceGUID">
            <summary>
            Resource GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ResourceInfo.ResourceLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ResourceInfoProvider">
            <summary>
            Provides access to information about resources.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResources(System.String,System.String)">
            <summary>
            Gets all resources.
            </summary>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResources(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all resources.
            </summary>    
            <param name="where">Where condition to filter data</param>
            /// <param name="orderBy">Order by statement to use</param>
            <param name="topN">Number of data rows which should be included in the result</param>
            <param name="columns">Table columns separated by comma which should be included in the result</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResourceInfo(System.Int32)">
            <summary>
            Returns the ResourceInfo structure for the specified resource.
            </summary>
            <param name="resourceId">Id of the resource to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResourceInfo(System.String)">
            <summary>
            Returns the ResourceInfo structure for the specified resource.
            </summary>
            <param name="resourceName">Resource name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.SetResourceInfo(CMS.SiteProvider.ResourceInfo)">
            <summary>
            Sets the specified resource data.
            </summary>
            <param name="resourceObj">Resource data object</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.DeleteResourceInfo(CMS.SiteProvider.ResourceInfo)">
            <summary>
            Delete specified resource.
            </summary>
            <param name="resourceObj">Resource object</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.DeleteResourceInfo(System.Int32)">
            <summary>
            Delete specified resource.
            </summary>
            <param name="resourceId">Resource ID</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResources(System.Int32)">
            <summary>
            Gets resources for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResources(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Gets resources for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Select top N values</param>
            <param name="columns">List of columns which should be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.IsResourceAvailable(System.Int32)">
            <summary>
            Returns true if the given resource (module) is available.
            </summary>
            <param name="resourceId">Resource (module) ID</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResourcesPerSite(System.Int32)">
            <summary>
            Returns dataSet with resources of specified site.
            </summary>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.SetResourceInfoInternal(CMS.SiteProvider.ResourceInfo)">
            <summary>
            Sets the specified resource data.
            </summary>
            <param name="resourceObj">Resource data object</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResourceInfoInternal(System.String)">
            <summary>
            Returns the ResourceInfo structure for the specified resource.
            </summary>
            <param name="resourceName">Resource name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResourceInfoInternal(System.Int32)">
            <summary>
            Returns the ResourceInfo structure for the specified resource.
            </summary>
            <param name="resourceId">Id of the resource to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.DeleteResourceInfoInternal(CMS.SiteProvider.ResourceInfo)">
            <summary>
            Delete specified resource.
            </summary>
            <param name="resourceObj">Resource object</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResourcesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all resources.
            </summary>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
            <param name="topN">Number of data rows which should be included in the result</param>
            <param name="columns">Table columns which should be included in the result</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResourcesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Gets resources for specified site based on the give parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Select top N values</param>
            <param name="columns">List of columns which should be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.ResourceInfoProvider.GetResourcesPerSiteInternal(System.Int32)">
            <summary>
            Returns dataSet with resources of specified site.
            </summary>
            <param name="siteId">ID of site</param>
        </member>
        <member name="T:CMS.SiteProvider.RoleInfo">
            <summary>
            Role info data container.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RoleInfo.TYPEINFO">
            <summary>
            Type information for standard role.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RoleInfo.TYPEINFOGROUP">
            <summary>
            Type information for group role.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty RoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RoleInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.DisplayName">
            <summary>
            Role Display Name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.Description">
            <summary>
            Role Description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.RoleName">
            <summary>
            Role Name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.RoleGUID">
            <summary>
            Role GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.RoleLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.RoleGroupID">
            <summary>
            Role group ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.RoleIsGroupAdministrator">
            <summary>
            Indicates whether role is group admin.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.RoleIsDomain">
            <summary>
            Indicates whether role is domain role.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.RoleInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.RoleInfoProvider">
            <summary>
            Provides access to information about roles.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RoleInfoProvider.EVERYONE">
            <summary>
            Special role which automatically covers all users.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RoleInfoProvider.AUTHENTICATED">
            <summary>
            Special role which automatically covers all authenticated users.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.RoleInfoProvider.NOTAUTHENTICATED">
            <summary>
            Special role which automatically covers all not authenticated users.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleInfoByGUID(System.Guid,System.Int32)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleInfo(System.String,System.Int32)">
            <summary>
            Returns the role info object with specified ID.
            </summary>
            <param name="roleName">Name of role to retrieve</param>
            <param name="siteId">Site ID which the role depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetExistingRoleInfo(System.String,System.Int32)">
            <summary>
            Returns info object of role.
            </summary>
            <param name="roleName">Role code name</param>
            <param name="siteID">Role site ID - if zero all roles are picked</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleInfo(System.String,System.String)">
            <summary>
            Returns the role info object with specified ID.
            </summary>
            <param name="roleName">Name of role to retrieve</param>
            <param name="siteName">Site which the role depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleInfo(System.Int32)">
            <summary>
            Returns the RoleInfo structure for the specified role.
            </summary>
            <param name="roleId">RoleID to use for retrieving the role data</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.SetRoleInfo(CMS.SiteProvider.RoleInfo)">
            <summary>
            Sets (updates or inserts) specified role.
            </summary>
            <param name="roleInfoObj">Role to set</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.DeleteRoleInfo(CMS.SiteProvider.RoleInfo)">
            <summary>
            Deletes specified role.
            </summary>
            <param name="roleObj">Role object</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.DeleteRoleInfo(System.Int32)">
            <summary>
            Deletes specified role.
            </summary>
            <param name="roleId">Role id</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetAllRoles(System.String)">
            <summary>
            Returns DataSet with roles which meet the where condition.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetAllRoles(System.Int32)">
            <summary>
            Returns DataSet with roles of given site (if siteId > 0) or with all roles.
            </summary>
            <param name="siteId">SiteID of site which roles we want to return</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetAllRoles(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns DataSet with roles of given site (if siteId > 0) with option to display GroupRoles.
            </summary>
            <param name="siteId">SiteID of site which roles we want to return</param>
            <param name="includingGroups">If set to true then GroupRoles are also returned in DataSet</param>
            <param name="includingGeneric">If set to true then Generic roles are also returned in DataSet</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.FindUsersAndRolesForSite(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds users and roles for specified site based on phrase.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="phrase">Search phrase</param>
            <param name="getUsers">Determines if users should be involved in result</param>
            <param name="getRoles">Determines if roles should be involved in result</param>
            <returns>IDs of roles and users with 'R' or 'U' prefixes and name of object.</returns>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.FindUsersAndRolesForSite(System.Int32,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Finds users and roles for specified site based on phrase.
            </summary>
            <param name="siteId">ID of site</param>
            <param name="phrase">Search phrase</param>
            <param name="getUsers">Determines if users should be involved in result</param>
            <param name="getRoles">Determines if roles should be involved in result</param>
            <param name="where">Where condition</param>
            <returns>IDs of roles and users with 'R' or 'U' prefixes and name of object.</returns>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoles(System.String,System.String)">
            <summary>
            Returns DataSet with roles which meet the where condition.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by statement to use</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoles(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns DataSet with roles which meet the where condition.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="columns">Specifies columns of DataSet</param>
            <param name="topN">Selects only top N items</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.RoleExists(System.String,System.String)">
            <summary>
            Returns true if role of given name exists.
            </summary>
            <param name="roleName">Name of role</param>
            <param name="siteName">Site that the role belongs to</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleUsers(System.Int32)">
            <summary>
            Returns the table of the role users or null.
            </summary>
            <param name="roleId">Role ID for retrieving the table of users</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.DeleteRole(System.String,System.String)">
            <summary>
            Deletes the specified Role.
            </summary>
            <param name="roleName">Role to delete</param>
            <param name="siteName">Site that role to delete depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetGenericRoles">
            <summary>
            Returns list of generic roles.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRequiredClassRoles(System.String,System.String,System.String)">
            <summary>
            Gets the DataSet of the required roles for the specified class permission.
            </summary>
            <param name="className">Class name</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRequiredResourceRoles(System.String,System.String,System.String)">
            <summary>
            Gets the DataSet of the required roles for the specified resource permission.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleInfoByGUIDInternal(System.Guid,System.Int32)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleInfoInternal(System.String,System.Int32)">
            <summary>
            Returns the role info object with specified ID.
            </summary>
            <param name="roleName">Name of role to retrieve</param>
            <param name="siteId">Site ID which the role depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetExistingRoleInfoInternal(System.String,System.Int32)">
            <summary>
            Returns role object (not depending on sites).
            </summary>
            <param name="roleName">Role code name</param>
            <param name="siteID">Site ID - if zero all roles are picked</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleInfoInternal(System.String,System.String)">
            <summary>
            Returns the role info object with specified ID.
            </summary>
            <param name="roleName">Name of role to retrieve</param>
            <param name="siteName">Site which the role depends to</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleInfoInternal(System.Int32)">
            <summary>
            Returns the RoleInfo structure for the specified role.
            </summary>
            <param name="roleId">RoleID to use for retrieving the role data</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.SetRoleInfoInternal(CMS.SiteProvider.RoleInfo)">
            <summary>
            Sets (updates or inserts) specified role.
            </summary>
            <param name="roleInfoObj">Role to set</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.DeleteRoleInfoInternal(CMS.SiteProvider.RoleInfo)">
            <summary>
            Deletes specified role.
            </summary>
            <param name="roleObj">Role object</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRolesInternal(System.String,System.String)">
            <summary>
            Returns DataSet with roles which meet the where condition.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by statement to use</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRolesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns DataSet with roles which meet the where condition.
            </summary>
            <param name="columns">Specifies columns of DataSet</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="topN">Selects only top N items</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.RoleExistsInternal(System.String,System.String)">
            <summary>
            Returns true if role of given name exists.
            </summary>
            <param name="roleName">Name of role</param>
            <param name="siteName">Site that the role belongs to</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRoleUsersInternal(System.Int32)">
            <summary>
            Returns the table of the role users or null.
            </summary>
            <param name="roleId">Role ID for retrieving the table of users</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRequiredClassRolesInternal(System.String,System.String,System.String)">
            <summary>
            Gets the DataSet of the required roles for the specified class permission.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.RoleInfoProvider.GetRequiredResourceRolesInternal(System.String,System.String,System.String)">
            <summary>
            Gets the DataSet of the required roles for the specified resource permission.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.SiteProvider.SiteDomainAliasInfo">
            <summary>
            Site domain alias.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteDomainAliasInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfo.#ctor">
            <summary>
            Constructor - Creates an empty SiteDomainAlias object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SiteDomainAlias object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteDomainAliasInfo.SiteDomainAliasID">
            <summary>
            Gets or sets the site domain alias id.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteDomainAliasInfo.SiteDomainAliasName">
            <summary>
            Gets or sets the site domain alias name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteDomainAliasInfo.SiteID">
            <summary>
            Gets or sets the site id.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteDomainAliasInfo.SiteDefaultVisitorCulture">
            <summary>
            Gets or sets the site default visitor culture.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteDomainAliasInfo.SiteDomainGUID">
            <summary>
            Site domain GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteDomainAliasInfo.SiteDomainLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteDomainAliasInfo.SiteDomainDefaultAliasPath">
            <summary>
            Object Default alias path.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteDomainAliasInfo.SiteDomainRedirectUrl">
            <summary>
            Object Redirect URL.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SiteDomainAliasInfoProvider">
            <summary>
            Class providing SiteDomainAliasInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetSiteDomainAliasInfoByGUID(System.Guid,System.Int32)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetSiteDomainAliasInfo(System.Int32)">
            <summary>
            Returns the SiteDomainAliasInfo structure for the specified site domain alias ID.
            </summary>
            <param name="domainAliasId">Site domain alias id</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetSiteDomainAliasInfo(System.String,System.Int32)">
            <summary>
            Returns the SiteDomainAliasInfo structure for the specified site domain alias name.
            </summary>
            <param name="domainAlias">Site domain alias name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.SetSiteDomainAliasInfo(CMS.SiteProvider.SiteDomainAliasInfo,System.String)">
            <summary>
            Sets (updates or inserts) specified site domain alias.
            </summary>
            <param name="siteDomain">SiteDomainAliasInfo object to set</param>
            <param name="originalDomainAlias">Original domain alias name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.SetSiteDomainAliasInfo(CMS.SiteProvider.SiteDomainAliasInfo)">
            <summary>
            Sets (updates or inserts) specified site domain alias.
            </summary>
            <param name="siteDomain">SiteDomainAliasInfo object to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.DeleteSiteDomainAliasInfo(System.Int32)">
            <summary>
            Deletes specified site domain alias.
            </summary>
            <param name="siteDomainId">Site domain alias id</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.DeleteSiteDomainAliasInfo(CMS.SiteProvider.SiteDomainAliasInfo)">
            <summary>
            Deletes specified site domain alias.
            </summary>
            <param name="siteDomainObj">Site domain alias object</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetDomainAliases(System.Int32)">
            <summary>
            Returns all site domain aliases assigned to the selected site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetDomainAliases(System.String,System.String)">
            <summary>
            Returns all site domain aliases.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetDomainAliases(System.String,System.String,System.String)">
            <summary>
            Returns all site domain aliases.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetDomainAliases(System.String)">
            <summary>
            Returns all site domain aliases assigned to the selected site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.DomainAliasExists(System.String,System.Int32)">
            <summary>
            Checks if domain alias exists for specified site.
            </summary>
            <param name="domainAlias">Domain alias</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.DeleteSiteAliases(System.Int32)">
            <summary>
            Deletes the site domain aliases.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.Clear">
            <summary>
            Clear hashtables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.RemoveFromHash(System.Int32)">
            <summary>
            Remove domain aliases from hash.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteDomainAliasInfoProvider.domainAliasesById">
            <summary>
            Table of the domain aliases DataSets indexed by site ID.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetSiteDomainAliasInfoByGUIDInternal(System.Guid,System.Int32)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetSiteDomainAliasInfoInternal(System.Int32)">
            <summary>
            Returns the SiteDomainAliasInfo structure for the specified site domain alias ID.
            </summary>
            <param name="domainAliasId">Site domain alias id</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetSiteDomainAliasInfoInternal(System.String,System.Int32)">
            <summary>
            Returns the SiteDomainAliasInfo structure for the specified site domain alias name.
            </summary>
            <param name="domainAlias">Site domain alias name</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.SetSiteDomainAliasInfoInternal(CMS.SiteProvider.SiteDomainAliasInfo,System.String)">
            <summary>
            Sets (updates or inserts) specified site domain alias.
            </summary>
            <param name="siteDomain">SiteDomainAliasInfo object to set</param>
            <param name="originalDomainAlias">Original domain alias name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.DeleteSiteDomainAliasInfoInternal(CMS.SiteProvider.SiteDomainAliasInfo)">
            <summary>
            Deletes specified site domain alias.
            </summary>
            <param name="siteDomainObj">Site domain alias object</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetDomainAliasesInternal(System.Int32)">
            <summary>
            Returns all site domain aliases assigned to the selected site.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteDomainAliasInfoProvider.GetDomainAliasesInternal(System.String,System.String,System.String)">
            <summary>
            Returns all site domain aliases.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="T:CMS.SiteProvider.SiteStatusEnum">
            <summary>
            Site status enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteStatusEnum.Running">
            <summary>
            Running site
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteStatusEnum.Stopped">
            <summary>
            Stopped site
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SiteInfo">
            <summary>
            Represents a site.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteInfo.mSiteDomainAliases">
            <summary>
            Hash table contains domain aliases of current site [alias.ToLower()] -> [DomainAliasInfo]
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.Invalidate">
            <summary>
            Invalidates the object in the object table.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty SiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.#ctor(CMS.SiteProvider.SiteInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new SiteInfo object from the given DataClass.
            </summary>
            <param name="si">Source site info</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.CreateDomainAliasesTable(System.Data.DataSet)">
            <summary>
            Creates hashteble from given dataset.
            </summary>
            <param name="ds">Dataset contains with document aliases</param>
            <returns>Created hashtable.</returns>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.ConvertServerDateTime(System.DateTime)">
            <summary>
            Returns server date time in dependence on site time zone.
            </summary>
            <param name="dateTime">Date time</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfo.ConvertSiteDateTime(System.DateTime)">
            <summary>
            Returns site date time in dependence on site time zone.
            </summary>
            <param name="dateTime">Date time</param>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteSendOrderNotification">
            <summary>
            Indicates whether order notificatin should be sent.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteSendPaymentNotification">
            <summary>
            Indicates whether payment notificatin should be sent.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteShowOrganizationID">
            <summary>
            Site show organization ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.DomainName">
            <summary>
            Site domain name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteSendOrderNotificationTo">
            <summary>
            Site send order notification to.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteInvoiceTemplate">
            <summary>
            Site invoice template.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteDefaultEditorStylesheet">
            <summary>
            Site default editor stylesheet.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteDefaultStylesheetID">
            <summary>
            Site default stylesheet ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteDefaultCountryID">
            <summary>
            Site default country ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteShowTaxRegistrationID">
            <summary>
            Site show tax registration ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteRequireOrgTaxRegIDs">
            <summary>
            Site require organization and tax registration IDs.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.Description">
            <summary>
            Site description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteSendStoreEmailsFrom">
            <summary>
            Site send store emails from.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteStoreShippingFreeLimit">
            <summary>
            Site store shipping free limit.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteUseExtraCompanyAddress">
            <summary>
            True if extra company address should be used.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteName">
            <summary>
            Site name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.DefaultVisitorCulture">
            <summary>
            Site default visitor culture.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.DisplayName">
            <summary>
            Site display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteStoreAllowAnonymousCustomers">
            <summary>
            Allow anonymous customers in site store.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteCheckoutProcess">
            <summary>
            Site checkout process.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.Status">
            <summary>
            Site status.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteGUID">
            <summary>
            Site GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteDomainAliases">
            <summary>
            Hash table contains site's domain aliases. [alias.ToLower()] -> [DomainAliasInfo]
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteTimeZone">
            <summary>
            Returns time zone info for current site.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteIsOffline">
            <summary>
            Indicates whether site is in offline mode.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteOfflineRedirectURL">
            <summary>
            URL redirection in offline mode.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfo.SiteOfflineMessage">
            <summary>
            Offline message.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SiteInfoProvider">
            <summary>
            Class to provide the Site management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.EnsureSiteName(System.String@)">
            <summary>
            Ensures the site name value, if the value is null, sets the current site name to the value.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteInfo(System.Int32)">
            <summary>
            Returns the site info object with specified ID.
            </summary>
            <param name="siteId">Site ID for that retrieve the info structure</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteInfo(System.String)">
            <summary>
            Returns the SiteInfo structure for a specified site.
            </summary>
            <param name="siteName">Site name for that retrieve the data</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteID(System.String)">
            <summary>
            Returns ID of the specified site, or 0 if site not found.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteName(System.Int32)">
            <summary>
            Returns name of the specified site, or empty string if site not found.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.SetSiteInfo(CMS.SiteProvider.SiteInfo)">
            <summary>
            Sets the specified site data.
            </summary>
            <param name="siteInfoObj">New site info data</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.DeleteSite(CMS.SiteProvider.SiteInfo)">
            <summary>
            Deletes the specified Site.
            </summary>
            <param name="si">Site object</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.DeleteSite(System.String)">
            <summary>
            Deletes the specified Site.
            </summary>
            <param name="siteName">Site name to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSites(System.String,System.String)">
            <summary>
            Returns the DataSet of all the site records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSites(System.String,System.String,System.String)">
            <summary>
            Returns the DataSet of all the site records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="columns">Select only specified columns</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSites(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the DataSet of all the site records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="columns">Select only specified columns</param>
            <param name="topN">Restricts maximum number of rows, for all rows use 0</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetAllSites">
            <summary>
            Returns the DataSet of all the site records.
            </summary>        
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.RunSite(System.String)">
            <summary>
            Sets the specified Site running.
            </summary>
            <param name="siteName">Site name of the site to run</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetDocumentTypeClassPerSite(System.Int32)">
            <summary>
            Returns dataSet with document type classes of specified site.
            </summary>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteWhereCondition(System.String,System.String,System.String,System.String)">
            <summary>
            Returns WHERE condition for retrieving data according to the unique column and site ID column.
            </summary>
            <param name="uniqueColumn">Unique (code name or GUID) column name</param>
            <param name="uniqueColumnValue">Unique column value</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.CombineWithDefaultCulture(System.String)">
            <summary>
            Combine with default culture?
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.CombineFilesWithDefaultCulture(System.String)">
            <summary>
            Combine files with default culture?
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSitesCount">
            <summary>
            Gets number of existing sites.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetRunningSitesCount">
            <summary>
            Gets number of running sites.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetRunningSiteInfo(System.String,System.String)">
            <summary>
            Returns the running SiteInfo selected by specified domain name, if the site is not running, returns null.
            </summary>
            <param name="domainName">Domain name</param>
            <param name="applicationPath">Application path</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.StopSite(System.String)">
            <summary>
            Sets the specified Site stopped.
            </summary>
            <param name="siteName">Site name of the site to stop</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.UpdateRunningInfo(CMS.SiteProvider.SiteInfo)">
            <summary>
            Updates the information within the running sites table based on the given site.
            </summary>
            <param name="siteInfo">Site info</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteNameFromUrl(System.String)">
            <summary>
            Returns site name from url.
            </summary>
            <param name="url">Url</param>
        </member>
        <member name="F:CMS.SiteProvider.SiteInfoProvider.siteInfos">
            <summary>
            Table of the site infos indexed by site names.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteInfoProvider.siteInfosById">
            <summary>
            Table of the site infos indexed by site ID.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteInfoProvider.mRunningSites">
            <summary>
            Table of the running site infos indexed by the domain names.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SiteInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.LoadSites">
            <summary>
            Loads the sites information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetRunningSiteInfoObject(System.String,System.String)">
            <summary>
            Returns running SiteInfo object from hashtable, if not found try to find it in database.
            </summary>
            <param name="domainName">Domain name</param>
            <param name="applicationPath">Application path</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetRunningSiteInfoObject(System.String)">
            <summary>
            Returns running SiteInfo object from hashtable, if not found try to find it in database.
            </summary>
            <param name="domainName">Site alias (domain Name)</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetRunningSiteInfoFromDB(System.String)">
            <summary>
            Gets the running site info object from the database.
            </summary>
            <param name="domainName">Domain name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.RemoveObjectDependencies(CMS.SiteProvider.SiteInfo)">
            <summary>
            Ensures additional actions for site deletion.
            </summary>
            <param name="site">Site info object</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteInfoInternal(System.Int32)">
            <summary>
            Returns the site info object with specified ID.
            </summary>
            <param name="siteId">Site ID for that retrieve the info structure</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteInfoInternal(System.String)">
            <summary>
            Returns the SiteInfo structure for a specified site.
            </summary>
            <param name="siteName">Site name for that retrieve the data</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteInfoFromDBInternal(System.Int32)">
            <summary>
            Returns the SiteInfo structure for the specified site from database.
            </summary>
            <param name="siteId">Site id</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteInfoFromDBInternal(System.String)">
            <summary>
            Returns the SiteInfo structure for the specified site from database.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteIDInternal(System.String)">
            <summary>
            Returns ID of the specified site, or 0 if site not found.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteNameInternal(System.Int32)">
            <summary>
            Returns name of the specified site, or empty string if site not found.
            </summary>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSiteWhereConditionInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Returns WHERE condition for retrieving data according to the unique column and site ID column.
            </summary>
            <param name="uniqueColumn">Unique (code name or GUID) column name</param>
            <param name="uniqueColumnValue">Unique column value</param>
            <param name="siteIDColumn">Site ID column name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.SetSiteInfoInternal(CMS.SiteProvider.SiteInfo)">
            <summary>
            Sets the specified site data.
            </summary>
            <param name="siteInfoObj">New site info data</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.DeleteSiteInternal(CMS.SiteProvider.SiteInfo)">
            <summary>
            Deletes the specified Site.
            </summary>
            <param name="site">Site object</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSitesInternal(System.String,System.String)">
            <summary>
            Returns the DataSet of all the site records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetSitesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the DataSet of all the site records.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="columns">Select only specified columns</param>
            <param name="topN">Specifies number of returned records</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.RunSiteInternal(System.String)">
            <summary>
            Sets the specified Site running.
            </summary>
            <param name="siteName">Site name of the site to run</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetDocumentTypeClassPerSiteInternal(System.Int32)">
            <summary>
            Returns dataSet with document type classes of specified site.
            </summary>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears the hashtable.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
            <param name="dataText">Data</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.RemoveFromRunningSites(System.String)">
            <summary>
            Remove domain alias from running sites, and create web farm task.
            </summary>
            <param name="domainAlias">Domain alias to remove</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.RemoveFromRunningSites(System.String,System.Boolean)">
            <summary>
            Remove domain alias from running sites, and create web farm task.
            </summary>
            <param name="domainAlias">Domain alias to remove</param>
            <param name="logSynchronization">Indicates if web farm task should be logged</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.AddToRunningSites(System.String,CMS.SiteProvider.SiteInfo)">
            <summary>
            Remove domain alias from running sites, and create web farm task.
            </summary>
            <param name="domainAlias">Domain alias name</param>
            <param name="si">SiteInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.GetCurrentSite">
            <summary>
            Returns the current site.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.CheckDomainNameForCollision(System.String,System.Int32)">
            <summary>
            Checks the specified domain name(and site) for collision with another running site.
            </summary>
            <param name="domainName">Domain name to be checked</param>
            <param name="siteId">ID of the site which holds the domain name (site is excluded from result)</param>
            <returns>Dataset with data of the first site which is running under specified domain name.</returns>
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.SiteStatusToEnum(System.String)">
            <summary>
            Returns StatusEnum based on status codename.
            </summary>
            <param name="status">Status codename</param>        
        </member>
        <member name="M:CMS.SiteProvider.SiteInfoProvider.SiteStatusToString(CMS.SiteProvider.SiteStatusEnum)">
            <summary>
            Returns string code name of site status
            The codename is in uppercase!
            </summary>
            <param name="status">Site status</param>        
        </member>
        <member name="P:CMS.SiteProvider.SiteInfoProvider.CurrentSiteName">
            <summary>
            Returns current site name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SiteInfoProvider.CurrentSiteID">
            <summary>
            Returns current site ID.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.RunningSiteException">
            <summary>
            Running site exception.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RunningSiteException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.RunningSiteException.#ctor(System.String)">
            <summary>
            Constructor with message.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.StateInfo">
            <summary>
            StateInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.StateInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.StateInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.StateInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.StateInfo.#ctor">
            <summary>
            Constructor - Creates an empty StateInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.StateInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new StateInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.StateInfo.StateName">
            <summary>
            State code name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.StateInfo.StateCode">
            <summary>
            State short code.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.StateInfo.StateDisplayName">
            <summary>
            State display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.StateInfo.CountryID">
            <summary>
            Country ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.StateInfo.StateID">
            <summary>
            State ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.StateInfo.StateGUID">
            <summary>
            State GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.StateInfo.StateLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.StateInfoProvider">
            <summary>
            Class providing StateInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.GetStateInfo(System.Int32)">
            <summary>
            Returns the StateInfo structure for the specified state.
            </summary>
            <param name="stateId">State id</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.GetStateInfo(System.String)">
            <summary>
            Returns the StateInfo structure for the specified state.
            </summary>
            <param name="stateName">StateName</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.GetCountryStates(System.Int32)">
            <summary>
            Returns DataSet with states of the specified country.
            </summary>
            <param name="countryId">Country id</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.SetStateInfo(CMS.SiteProvider.StateInfo)">
            <summary>
            Sets (updates or inserts) specified state.
            </summary>
            <param name="state">State to set</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.DeleteStateInfo(CMS.SiteProvider.StateInfo)">
            <summary>
            Deletes specified state.
            </summary>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.DeleteStateInfo(System.Int32)">
            <summary>
            Deletes specified state.
            </summary>
            <param name="stateId">State id</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Check dependencies.
            </summary>
            <param name="stateId">State ID</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.DeleteCountryStates(System.Int32)">
            <summary>
            Deletes all country states.
            </summary>
            <param name="countryId">Country ID</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.GetStateInfoInternal(System.Int32)">
            <summary>
            Returns the StateInfo structure for the specified state.
            </summary>
            <param name="stateId">State id</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.GetStateInfoInternal(System.String)">
            <summary>
            Returns the StateInfo structure for the specified state.
            </summary>
            <param name="stateName">StateName</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.GetCountryStatesInternal(System.Int32)">
            <summary>
            Returns DataSet with states of the specified country.
            </summary>
            <param name="countryId">Country id</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.SetStateInfoInternal(CMS.SiteProvider.StateInfo)">
            <summary>
            Sets (updates or inserts) specified state.
            </summary>
            <param name="stateObj">State to set</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.DeleteStateInfoInternal(CMS.SiteProvider.StateInfo)">
            <summary>
            Deletes specified state.
            </summary>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.SiteProvider.StateInfoProvider.CheckDependenciesInternal(System.Int32)">
            <summary>
            Check dependencies.
            </summary>
            <param name="stateId">State ID</param>
        </member>
        <member name="T:CMS.SiteProvider.UserInfoProvider">
            <summary>
            Class providing UserInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.LIVEID_USERS_PREFIX">
            <summary>
            Registred Windows Live users will have this prefix in username.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.OPENID_USERS_PREFIX">
            <summary>
            Registered OpenID users will have this prefix in username.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.OPENID_FULLNAME_PREFIX">
            <summary>
            Registered OpenID users will have this prefix in fullname.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.FACEBOOKID_USERS_PREFIX">
            <summary>
            Registered Facebook users will have this prefix in username.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.FACEBOOKID_FULLNAME_PREFIX">
            <summary>
            Registered Facebook users will have this prefix in username.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.LINKEDIN_USERS_PREFIX">
            <summary>
            Registered LinkedIn users will have this prefix in username.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.LINKEDIN_FULLNAME_PREFIX">
            <summary>
            Registered LinkedIn users will have this prefix in fullname.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.kickUsers">
            <summary>
            Hashtable of the users which should be kicked.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.mUpdateLastLogonForExternalUsers">
            <summary>
            Indicates whether last logon information should be updated for external users
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfoProvider.mSitePrefixRegex">
            <summary>
            Static regex for site user prefixes
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.UserKicked(System.Int32)">
            <summary>
            Checks whether the given user is kicked or not.
            </summary>
            <param name="userID">User id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.CanUserLogin(System.Int32)">
            <summary>
            Checks if given user can login to system.
            </summary>
            <param name="userID">User id</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.RemoveUserFromKicked(System.Int32)">
            <summary>
            Removes user from kicked.
            </summary>
            <param name="UserID">User id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AddUserToKicked(System.Int32)">
            <summary>
            Adds user to kicked.
            </summary>
            <param name="userID">User id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.RemoveExpiredKickedUsers">
            <summary>
            Removes expired records from kickUsers hashtable.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetKickedUsers">
            <summary>
            Returns ID's of kicked users in string in format: ID1,ID2 ...
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetSearchWhereCondition(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Returns smart search where condition for indexing.
            </summary>
            <param name="srchInfo">Index info</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetSearchDocuments(CMS.SiteProvider.SearchIndexInfo,System.String,System.Int32)">
            <summary>
            Returns top 15 search documents for current scope.
            </summary>
            <param name="indexInfo">Search index info</param>
            <param name="whereCondition">Additional where condition</param>
            <param name="lastUserId">Last record user id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserName">
            <summary>
            Gets currently logged user name. The user name is safe if the UseSafeUserName is enabled.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserName(System.String)">
            <summary>
            Gets currently logged user name. The user name is safe if the UseSafeUserName is enabled.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.NameIsReserved(System.String,System.String)">
            <summary>
            Returns true if specified name is defined in reserved names.
            </summary>
            <param name="siteName">SiteName</param>
            <param name="username">User name or nickname</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsEmailUnique(System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if email doesn't exist in users table. 
            Depends on 'Unique e-mails' and 'Shared user accounts' settings
            </summary>
            <param name="email">E-mail</param>
            <param name="user">Current user which should be checked</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsUserNamePrefixUnique(System.String,System.Int32)">
            <summary>
            Test if there is no same site prefix username (f.e. 'site.{GUID}.{Name}' and '{Name}' is not allowed at the same time}
            </summary>
            <param name="userName">User name to test</param>
            <param name="userID">ID of tested user</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsEmailUnique(System.String,System.String,System.Int32)">
            <summary>
            Returns true if email doesn't exist in users table. 
            Depends on 'Unique e-mails' and 'Shared user accounts' settings
            </summary>
            <param name="email">E-mail</param>
            <param name="siteNames">One or more sitename separated by semicolon</param>
            <param name="currentUserId">Current user id, if is 0 => new user</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.ForgottenEmailRequest(System.String,System.String,System.String,System.String)">
            <summary>
            Tries to find user based on given user identificator (checks username and email) and if it finds
            the user email with forgotten password is send. It sends password directly or request for getting/regenerating password based on settings.
            </summary>
            <param name="userIdent">User identificator</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.ForgottenEmailRequest(System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver)">
            <summary>
            Tries to find user based on given user identificator (checks username and email) and if it finds
            the user email with forgotten password is send. It sends password directly or request for getting/regenerating password based on settings.
            </summary>
            <param name="userIdent">User identificator</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="resolver">Macro resolver</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.ForgottenEmailRequest(System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.String,System.Boolean@)">
            <summary>
            Tries to find user based on given user identificator (checks username and email) and if it finds
            the user email with forgotten password is send. It sends password directly or request for getting/regenerating password based on settings.
            </summary>
            <param name="userIdent">User identificator</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="resolver">Macro resolver</param>
            <param name="requestUrl">Url which processes request.</param>
            <param name="success">Returns whether sending of request was successful.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SendPassword(CMS.SiteProvider.UserInfo,System.String,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver)">
            <summary>
            Sends given user an email with forgotten/new password. (If the new password isn't provided current password is used for the plain text format or new password is generated for the SHA1/SHA2 format.)
            </summary>
            <param name="user">User</param>
            <param name="newPassword">New password (optional)</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="emailTemplateName">Email template name to be used for the email</param>
            <param name="resolver">Macro resolver</param>
            <returns>Message with result description</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SendPassword(CMS.SiteProvider.UserInfo,System.String,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.Boolean@)">
            <summary>
            Sends given user an email with forgotten/new password. (If the new password isn't provided current password is used for the plain text format or new password is generated for the SHA1/SHA2 format.)
            </summary>
            <param name="user">User</param>
            <param name="newPassword">New password (optional)</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="emailTemplateName">Email template name to be used for the email</param>
            <param name="resolver">Macro resolver</param>
            <param name="success">Returns whether sending of request was successful.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SendPasswordRequest(CMS.SiteProvider.UserInfo,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.String,System.Boolean@)">
            <summary>
            Sends e-mail to user for approval request of new password.
            </summary>
            <param name="user">User</param>        
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="emailTemplateName">Email template name to be used for the email</param>
            <param name="resolver">Macro resolver</param>        
            <param name="requestUrl">Url which processes request.</param>
            <param name="success">Returns whether sending of request was successful.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.ResetPassword(System.String,System.String,System.Int32,System.Double,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.Boolean@,System.String,System.String)">
            <summary>
            Resets password for user based on his request. 
            </summary>
            <param name="hash">Request hash (identifier).</param>
            <param name="requestTime">Request time.</param>
            <param name="userID">User id.</param>
            <param name="interval">Interval in which user can reset her password.</param>
            <param name="newPassword">New password.</param>
            <param name="siteName">Site name.</param>
            <param name="sendEmailFrom">Email address of the sender</param>       
            <param name="resolver">Macro resolver</param> 
            <param name="source">Source of calling, will be used for log event</param>
            <param name="success">Returns whether sending of request was successful.</param>
            <param name="exceededTimeText">Text returned by this method if time request is exeeded.</param>
            <param name="invalidRequestText">Text returned by this method if request is invalid.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.ValidateResetPassword(CMS.SiteProvider.UserInfo,System.String,System.String,System.Double,System.String)">
            <summary>
            Validates request of password reset. 
            </summary>
            <param name="ui">User info object.</param>
            <param name="hash">Request hash (identifier).</param>
            <param name="requestTime">Request time.</param>
            <param name="interval">Interval in which user can reset her password.</param>        
            <param name="source">Source of calling, will be used for log event</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.LicenseVersionCheck(System.String,CMS.SettingsProvider.FeatureEnum,CMS.SettingsProvider.VersionActionEnum,System.Object)">
            <summary>
            License version check.
            </summary>
            <param name="domain">Domain name</param>
            <param name="feature">Feature</param>
            <param name="action">Action</param>
            <param name="currentStatus">License status</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.UpdateUserCounts(CMS.SiteProvider.ActivityPointsEnum,System.Int32,System.Int32)">
            <summary>
            Updates user count with dependece on selected type of activity.
            </summary>
            <param name="type">Activity type</param>
            <param name="userId">User ID</param>
            <param name="points">Points</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfo(System.Int32)">
            <summary>
            Returns the UserInfo structure for the specified user.
            </summary>
            <param name="userId">User id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfo(System.String)">
            <summary>
            Returns the UserInfo structure for the specified user.
            </summary>
            <param name="userName">UserName</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SetUserInfo(CMS.SiteProvider.UserInfo)">
            <summary>
            Sets (updates or inserts) specified user.
            </summary>
            <param name="user">User to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.DeleteUser(CMS.SiteProvider.UserInfo)">
            <summary>
            Deletes specified user.
            </summary>
            <param name="userObj">User object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.DeleteUser(System.Int32)">
            <summary>
            Deletes specified user.
            </summary>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.DeleteUser(System.String)">
            <summary>
            Deletes specified user.
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SetPassword(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Sets the password for the specified user object, saves the user object.
            </summary>
            <param name="ui">User info</param>
            <param name="userPassword">User password</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SetPassword(CMS.SiteProvider.UserInfo,System.String,System.Boolean)">
            <summary>
            Sets the password for the specified user object, does not save the user object.
            </summary>
            <param name="ui">User info</param>
            <param name="userPassword">User password</param>
            <param name="saveObject">Specifies whether object is saved into database.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SetPassword(System.String,System.String)">
            <summary>
            Sets the password for the specified user. Saves object to database.
            </summary>
            <param name="userName">User name</param>
            <param name="userPassword">User password</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SetPassword(System.String,System.String,System.Boolean)">
            <summary>
            Sets the password for the specified user.
            </summary>
            <param name="userName">User name</param>
            <param name="userPassword">User password</param>
            <param name="saveObject">Specifies whether object is saved into database.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserRoles(CMS.SiteProvider.UserInfo,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the table of the user roles.
            </summary>
            <param name="userInfo">User info for retrieving the role table</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Get top N records</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserRoles(CMS.SiteProvider.UserInfo,System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the table of the user roles.
            </summary>
            <param name="userInfo">User info for retrieving the role table</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N records</param>
            <param name="columns">Columns to get</param>
            <param name="includeMembership">If true, membership roles are added</param>
            <param name="includeGlobal">If true, global roles are added</param>
            <param name="checkValidity">If true, only valid roles are selected</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserMembershipRoles(CMS.SiteProvider.UserInfo,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the table of the user roles given by membership connection.
            </summary>
            <param name="userInfo">User info for retrieving the role table</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Get top N records</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserRoles(CMS.SiteProvider.UserInfo)">
            <summary>
            Returns the table of the user roles.
            </summary>
            <param name="userInfo">User info for retrieving the role table</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserSites(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the table of the user sites.
            </summary>
            <param name="userId">User ID for site table</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Get top N records</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserSites(System.Int32)">
            <summary>
            Returns the table of the user sites.
            </summary>
            <param name="userId">User ID for site table</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserNameById(System.Int32)">
            <summary>
            Returns the UserName by the specified user ID.
            </summary>
            <param name="id">User ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerClass(System.String,System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if user is granted with specified permission for particular class.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name for which check the permissions</param>
            <param name="userInfo">User info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetRequiredResourceUsers(System.String,System.String,System.String)">
            <summary>
            Gets the DataSet of the required users for the specified resource permission.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUsers(System.String,System.String)">
            <summary>
            Returns the DataSet of all the user records with where condition and order by clause applied.
            </summary>
            <param name="where">Where condition</param>]
            <param name="orderBy">Order by clause</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUsers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the DataSet of all the user records with where condition and order by clause applied.
            </summary>
            <param name="where">Where condition</param>]
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N users</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetAllUsers">
            <summary>
            Returns the DataSet of all the user records.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.LicenseController">
            <summary>
            License check initializer, use this method only in the resonable cases.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetFullUserInfo(System.Int32)">
            <summary>
            Returns the UserInfo structure for the specified user also with UserSettings.
            </summary>
            <param name="userId">User id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetFullUserInfo(System.String)">
            <summary>
            Returns the UserInfo structure for the specified user also with UserSettings.
            </summary>
            <param name="userName">UserName</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.ClearLicenseValues">
            <summary>
            Clear license values.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateUser(System.String,System.String,System.String)">
            <summary>
            Authenticates user against the database.
            </summary>
            <param name="userName">User name to authenticate</param>
            <param name="password">Password to authenticate</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.TrimSitePrefix(System.String)">
            <summary>
            Trimes site prefix from user name (if any prefix found)
            </summary>
            <param name="username">User name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateUser(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Authenticates user against the database.
            </summary>
            <param name="userName">User name to authenticate</param>
            <param name="password">Password to authenticate</param>
            <param name="siteName">Site name</param>
            <param name="login">Indicates if methos is called during user login</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.CheckUserBelongsToSite(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Check if user belongs to specified site, considering settings key CMSSiteSharedAccounts.
            </summary>
            <param name="user">UserInfo</param>
            <param name="siteName">SiteName</param>
            <returns>Returns same userinfo if user belongs to site(if shared accounts disabled) or null if not</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SetPreferredCultures(CMS.SiteProvider.UserInfo)">
            <summary>
            Sets the preferred culture codes from given user object.
            </summary>
            <param name="user">User object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateUserAD(System.String,System.String,System.String)">
            <summary>
            Authenticates user against the database.
            </summary>
            <param name="username">User name to authenticate</param>
            <param name="password">Password to authenticate</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateUserWindows(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Authenticates the external user with Windows authentication.
            </summary>
            <param name="user">User to authenticate</param>
            <param name="siteName">Site name for authentication</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateWindowsUser(System.String,System.String,System.String[])">
            <summary>
            Authenticates the external user with Windows authentication.
            </summary>
            <param name="userName">User to authenticate</param>
            <param name="siteName">Site name for authentication</param>
            <param name="roles">User roles</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserWindowsRoles(System.String)">
            <summary>
            Gets the user roles.
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserADRoles(System.String)">
            <summary>
            Gets the user roles from AD.
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SetAuthCookieWithUserData(System.String,System.Boolean,System.Int32,System.String[])">
            <summary>
            Creates authentication cookie of user with specified custom data.
            </summary>
            <param name="username">User name</param>
            <param name="isPersistent">Persistency of cookie</param>
            <param name="timeOut">Cookie timeout</param>
            <param name="userData">Array of user data</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserDataFromAuthCookie">
            <summary>
            Returns an array with userdata from authentication cookie.
            </summary>        
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.EnsureExternalUser(CMS.SiteProvider.UserInfo)">
            <summary>
            Ensures that the external user record is present in the database.
            </summary>
            <param name="uInfo">User info object with the user data</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.UpdateLastLogonInformation(CMS.SiteProvider.UserInfo)">
            <summary>
            Updates last logon information of user = last logon time, IP address and agent.
            Doesn't call SetUserInfo!!
            </summary>
            <param name="userInfo">User info</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.EnsureRolesAndSites(CMS.SiteProvider.UserInfo)">
            <summary>
            Ensures that roles and sites for the given user are present within the database.
            </summary>
            <param name="uInfo">Source user info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AddUserToRole(System.String,System.String,System.String)">
            <summary>
            Adds the specified user to the role of site.
            </summary>
            <param name="userName">User name to add to role</param>
            <param name="roleName">Role name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AddUserToRole(System.Int32,System.Int32)">
            <summary>
            Adds the specified user to the role of site.
            </summary>
            <param name="userId">User ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.RemoveUserFromRole(System.String,System.String,System.String)">
            <summary>
            Removes specified user from the role.
            </summary>
            <param name="userName">User name to remove</param>
            <param name="roleName">Role name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.RemoveUserFromRole(System.Int32,System.Int32)">
            <summary>
            Removes specified user from the role.
            </summary>
            <param name="userId">User ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AddUserToSite(System.String,System.String)">
            <summary>
            Adds the specfied user to the site.
            </summary>
            <param name="userName">User name to add</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.RemoveUserFromSite(System.Int32,System.Int32)">
            <summary>
            Removes the user from the specified site.
            </summary>
            <param name="userId">User ID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.RemoveUserFromSite(System.String,System.String)">
            <summary>
            Removes the user from the specified site.
            </summary>
            <param name="userName">User name to remove</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerResource(System.String,System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if given user is granted with specified permission.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name</param>
            <param name="userInfo">User info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerUIElement(System.String,System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to see the specified UI element.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="elementName">Name of the UIElement</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerUIElement(System.String,System.String[],System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Indicates if user is authorized to see the specified UI element.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="elementNames">Name of the UIElement</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerUIElement(System.String,System.String[],System.String,CMS.SiteProvider.UserInfo,System.Boolean)">
            <summary>
            Indicates if user is authorized to see the specified UI element.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="elementNames">Name of the UIElement</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="checkElementsOnly">Indicates if only UI elements will be checked, not settings or special role membership</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerUIElement(System.String,System.String[],System.String,CMS.SiteProvider.UserInfo,System.Boolean,System.Boolean)">
            <summary>
            Indicates if user is authorized to see the specified UI element.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="elementNames">Name of the UIElement</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="checkElementsOnly">Indicates if only UI elements will be checked, not settings or special role membership</param>
            <param name="checkGlobalRoles">Indicates if global roles should be checked</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerUIElementInternal(System.Collections.Hashtable,System.String[],CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user is authorized to see the specified UI element.
            </summary>
            <param name="elements">Hashatable with elemenets rights</param>
            <param name="elementNames">Names of elements</param>
            <param name="userInfo">User info</param>
            <param name="resourceName">Name of resource</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerMetaFile(System.String,CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if given user is granted with specified permission.
            </summary>
            <param name="objectType">Object type</param>
            <param name="permission">Permission</param>
            <param name="siteName">Site name</param>
            <param name="userInfo">User info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerObject(CMS.SettingsProvider.BaseInfo,CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if given user is granted with specified permission.
            </summary>
            <param name="info">InfoObject to check</param>
            <param name="permission">Permission</param>
            <param name="siteName">Site name</param>
            <param name="userInfo">User info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerObject(System.String,CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if given user is granted with specified permission.
            </summary>
            <param name="objectType">Object type</param>
            <param name="permission">Permission</param>
            <param name="siteName">Site name</param>
            <param name="userInfo">User info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerObject(System.String,System.Int32,CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if given user is granted with specified permission.
            </summary>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
            <param name="permission">Permission</param>
            <param name="siteName">Site name</param>
            <param name="userInfo">User info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.CheckLicense">
            <summary>
            Checks the license.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthenticated">
            <summary>
            Returns true if the current user is authenticated.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GenerateNewPassword">
            <summary>
            Returns new 8 characters length password which contains only alphanumeric characters.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GenerateNewPassword(System.String)">
            <summary>
            Returns new password according to password policy.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetFullUsers(System.String,System.String)">
            <summary>
            Returns dataset with users with their settings according to WHERE condition sorted by ORDER BY expression.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY expression</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetFullUsers(System.String,System.String,System.Int32)">
            <summary>
            Returns dataset with users with their settings according to WHERE condition sorted by ORDER BY expression.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY expression</param> 
            <param name="topN">Top N users</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetFullUsers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset with users with ther settings according to WHERE condition sorted by ORDER BY expression.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY expression</param> 
            <param name="topN">Top N users</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetFullUserName(System.String,System.String)">
            <summary>
            Returns full user name (name combined with nickname).
            </summary>
            <param name="userName">User name</param>
            <param name="nickName">Nick name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserAuthenticationUrl(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Prepares the user authentication GUID, adds it as a query string parameter to supplied Url.
            </summary>
            <param name="user">UserInfo of particular user</param>
            <param name="targetUrl">Target Url</param>
            <returns>Target Url with authentication GUID parameter</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserResourcePermissions(CMS.SiteProvider.UserInfo,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Returns the DataSet with user permissions for specified resource.
            </summary>
            <param name="user">User info object</param>
            <param name="siteId">Site ID</param>
            <param name="resourceId">ID of the resource</param>
            <param name="displayedOnly">Indicates if only visible permissions should be get</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserDataClassPermissions(CMS.SiteProvider.UserInfo,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Returns the DataSet with user permissions for specified class.
            </summary>
            <param name="user">User info object</param>
            <param name="siteId">Site ID</param>
            <param name="classId">ID of the class</param>
            <param name="displayedOnly">Indicates if only visible permissions should be get</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.EnsureSitePrefixUserName(System.String,CMS.SiteProvider.SiteInfo)">
            <summary>
            If CMSUseSitePrefixForUserName is switched on, add site prefix to user name
            </summary>
            <param name="userName">User name</param>
            <param name="si">Site info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoForSitePrefix(System.String,CMS.SiteProvider.SiteInfo)">
            <summary>
            Return user info by codename. If Site prefix switched on - test site prefix variant of user name first
            </summary>
            <param name="userName">User name</param>
            <param name="si">Site info object</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsSitePrefixedUser(System.String)">
            <summary>
            Returns true, is user name has site prefix
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.UserNameSitePrefixEnabled(System.String)">
            <summary>
            Returns true, if site prefix for users is enabled
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetResetPasswordUrl(System.String)">
            <summary>
            Returns url of page where user can reset his password.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetPolicyViolationMessage(System.String)">
            <summary>
            Returns policy not accetable message.
            </summary>
            <param name="siteName">Sitename.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.ValidateCodeName(CMS.SiteProvider.UserInfo)">
            <summary>
            Returns always true in this provider because user names could contain special characters.
            </summary>
            <param name="info">User info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetFormattedUserName(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns formatted username in format: fullname (nickname) if nicname specified otherwise fullname (username).
            Allows you to customize how the usernames will look like throughout the admin UI. 
            </summary>
            <param name="username">Source user name</param>
            <param name="fullname">Source full name</param>
            <param name="nickname">Source user nick name</param>
            <param name="isLiveSite">Indicates if returned username should be displayed on live site</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateMembershipUser(CMS.SiteProvider.UserInfo,System.Boolean,System.String,System.Boolean,System.String@)">
            <summary>
            Authnenticates user. If new user is being created then analytics logs are recorded.
            </summary>
            <param name="ui">UserInfo of newly created or already exising user</param>
            <param name="isNew">Indicates if authenticated user is newly created</param>
            <param name="siteName">Site name</param>
            <param name="disableConfirmation">Indicates if email confirmation of newly registered user is disabled</param>
            <param name="error">Error which occurred during authentication process</param>
            <returns>Returns authenticated user</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoByFacebookConnectID(System.String)">
            <summary>
            Returns user with specified Facebook Connect ID.
            </summary>
            <param name="facebookUserId">Facebook Connect ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoByLinkedInID(System.String)">
            <summary>
            Returns user with specified LinkedIn ID.
            </summary>
            <param name="linkedInUserId">LinkedIn profile Id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateWindowsLiveUser(System.String,System.String,System.Boolean)">
            <summary>
            Authenticates the Windows Live user with user's LiveID. If user doesn't exists yet and createNew set
            to true, then it is created.
            </summary>
            <param name="userLiveId">User LiveID</param>
            <param name="siteName">Site name</param>
            <param name="createNew">If true, user which is not found is created</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateWindowsLiveUser(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            Authenticates the Windows Live user with user's LiveID. If user doesn't exists yet and createNew set
            to true, then it is created.
            </summary>
            <param name="userLiveId">User LiveID</param>
            <param name="siteName">Site name</param>
            <param name="disableConfirmation">Indicates if e-mail confirmation of newly registered user is disabled</param>
            <param name="error">Error message which will be filled when error occured</param>
            <returns>Returns UserInfo</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoByWindowsLiveID(System.String)">
            <summary>
            Returns UserInfo related to WindowsLive ID.
            </summary>
            <param name="userLiveId">Windows LiveID</param>
            <returns>Returns UserInfo if found, otherwise returns NULL</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateOpenIDUser(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Authenticate user with provided OpenID parameters. Create new user if createNew is set to TRUE and user doesn't 
            exist in DB.
            </summary>
            <param name="claimedID">OpenID Claimed Identifier</param>
            <param name="providerUrl">OpenID provider URL</param>
            <param name="siteName">Site name</param>
            <param name="createNew">Indicates if new user should be created</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateOpenIDUser(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Authenticate user with provided OpenID parameters. Create new user if createNew is set to TRUE and user doesn't 
            exist in DB.
            </summary>
            <param name="claimedID">OpenID Claimed Identifier</param>
            <param name="providerUrl">OpenID provider URL</param>
            <param name="siteName">Site name</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <param name="disableConfirmation">Indicates if e-mail confirmation of newly registered user is disabled</param>
            <param name="error">Error message which will be filled when error occured</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateLinkedInUser(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Authenticates user with LinkedID parameters. It will create new user if not found in DB.
            </summary>
            <param name="profileID">LinkedID profile identificator</param>
            <param name="firstName">User's first name</param>
            <param name="lastName">User's last name</param>
            <param name="siteName">Site name</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <param name="disableConfirmation">Indicates if e-mail confirmation of newly registered user is disabled</param>
            <param name="error">Error message which will be filled when error occured</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateFacebookConnectUser(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Authenticate user with provided Facebook Connect parameters. Create new user if createNew
            is set to TRUE and user doesn't exist in DB.
            </summary>
            <param name="facebookUserID">Facebook user ID</param>
            <param name="siteName">Site name</param>
            <param name="createNew">Indicates if new user should be created</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.AuthenticateFacebookConnectUser(System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Authenticate user with provided Facebook Connect parameters. Create new user if createNew
            is set to TRUE and user doesn't exist in DB.
            </summary>
            <param name="facebookUserID">Facebook user ID</param>
            <param name="siteName">Site name</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <param name="disableConfirmation">Indicates if e-mail confirmation of newly registered user is disabled</param>
            <param name="error">Error message which will be filled when error occured</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.CheckLicenseLimitation(CMS.SiteProvider.UserInfo,System.String@)">
            <summary>
            Checks license limitation for provider UserInfo. Checks limitations for global administrator, editor and site members.
            </summary>
            <param name="ui">UserInfo to be checked</param>
            <param name="error">Will contain error message if license check failed</param>
            <returns>Returns TRUE if limitation check is passed. Returns FALSE otherwise.</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SendRegistrationEmails(CMS.SiteProvider.UserInfo,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sends registration emails. Returns string with error if any exception occured.
            </summary>
            <param name="ui">Send e-mail to this UserInfo</param>
            <param name="approvalPage">Registration approval page URL</param>
            <param name="password">User password</param>
            <param name="requiresConfirmation">Indicates if e-mail with confirmation link should be send</param>
            <param name="sendWelcomeEmail">Indicates if user welcome e-mail should be sent</param>
            <returns>Retuns error if any exception occured during sending e-mails.</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.NotifyAdministrator(CMS.SiteProvider.UserInfo,System.String,System.String)">
            <summary>
            Sends notification e-mail to administrator about user registration.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.TrackUserRegistration(System.String,System.Double,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Track user registration into analytics
            </summary>
            <param name="trackConversionName">Tracking conversion name</param>
            <param name="conversionValue">Value of tracked conversion</param>
            <param name="siteName">Site name</param>
            <param name="ui">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.TrackUserRegistration(System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Tracks user registration into analytics.
            </summary>
            <param name="trackConversionName">Tracking conversion name</param>
            <param name="siteName">Site name</param>
            <param name="ui">UserInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoWithSettings(System.String)">
            <summary>
            Returns user info object with settings according to where condition.
            </summary>
            <param name="where">Where condition.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetPasswordHash(System.String,System.String)">
            <summary>
            Returns the hashed password representation (is hashing on).
            </summary>
            <param name="password">Password to hash</param>
            <param name="passwordFormat">Format of the password</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetPasswordHash(System.String,System.String,System.String)">
            <summary>
            Returns the hashed password representation (is hashing on).
            </summary>
            <param name="password">Password to hash</param>
            <param name="passwordFormat">Format of the password</param>
            <param name="salt">Password salt</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoInternal(System.Int32)">
            <summary>
            Returns the UserInfo structure for the specified user.
            </summary>
            <param name="userId">User id</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoInternal(System.String)">
            <summary>
            Returns the UserInfo structure for the specified user.
            </summary>
            <param name="userName">UserName</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.SetUserInfoInternal(CMS.SiteProvider.UserInfo)">
            <summary>
            Sets (updates or inserts) specified user.
            </summary>
            <param name="user">User to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.DeleteUserInternal(CMS.SiteProvider.UserInfo)">
            <summary>
            Deletes specified user.
            </summary>
            <param name="userObj">User object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoForSitePrefixInternal(System.String,CMS.SiteProvider.SiteInfo)">
            <summary>
            Return user info by codename. If Site prefix switched on - test site prefix variant of user name first
            </summary>
            <param name="userName">User name</param>
            <param name="si">Site info object</param>    
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.TrimSitePrefixInternal(System.String)">
            <summary>
            Trimes site prefix from user name (if any prefix found)
            </summary>
            <param name="username">User name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsSitePrefixedUserInternal(System.String)">
            <summary>
            Returns true, is user name has site prefix
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.EnsureSitePrefixUserNameInternal(System.String,CMS.SiteProvider.SiteInfo)">
            <summary>
            If CMSUseSitePrefixForUserName is switched on, add site prefix to user name
            </summary>
            <param name="userName">User name</param>
            <param name="si">Site info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserMembershipRolesInternal(CMS.SiteProvider.UserInfo,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the table of the user roles given by membership connection.
            </summary>
            <param name="userInfo">User info for retrieving the role table</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N records</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserRolesInternal(CMS.SiteProvider.UserInfo,System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the table of the user roles.
            </summary>
            <param name="userInfo">User info for retrieving the role table</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Top N records</param>
            <param name="columns">Columns to get</param>
            <param name="includeMembership">If true, membership roles are added</param>
            <param name="includeGlobal">If true, global roles are added</param>
            <param name="checkValidity">If true, only valid roles are selected</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserSitesInternal(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the table of the user sites.
            </summary>
            <param name="userId">User ID for site table</param>
            <param name="whereCondition">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Get top N records</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserNameByIdInternal(System.Int32)">
            <summary>
            Returns the UserName by the specified user ID.
            </summary>
            <param name="id">User ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.IsAuthorizedPerClassInternal(System.String,System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns true if user is granted with specified permission for particular class.
            </summary>
            <param name="className">Class name in format application.class</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name for which check the permissions</param>
            <param name="userInfo">User info object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetRequiredResourceUsersInternal(System.String,System.String,System.String)">
            <summary>
            Gets the DataSet of the required users for the specified resource permission.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUsersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the DataSet of all the user records with where condition and order by clause applied.
            </summary>
            <param name="where">Where condition</param>]
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N users</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserInfoWithSettingsInternal(System.String)">
            <summary>
            Returns user info object with settings according to where condition.
            </summary>
            <param name="where">Where condition.</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.GetUserPermissions(CMS.SiteProvider.UserInfo,System.Int32,System.Int32,System.String,System.Boolean,System.String)">
            <summary>
            Returns the DataSet of user permissions for permission type specified by ID.
            </summary>
            <param name="user">User info object</param>
            <param name="siteId">Site ID</param>
            <param name="permissionTypeId">ID identifying the permission</param>
            <param name="permissionType">Type of the permission(class or resource)</param>
            <param name="displayedOnly">Indicates if only visible permissions should be get</param>
            <param name="columns">Columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfoProvider.RemoveObjectDependencies(CMS.SiteProvider.UserInfo)">
            <summary>
            Removes object dependencies.
            </summary>
            <param name="infoObj">Object for which the dependencies should be removed</param>
        </member>
        <member name="E:CMS.SiteProvider.UserInfoProvider.OnFormattedUserName">
            <summary>
            Event for formatting user name
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.UpdateLastLogonForExternalUsers">
            <summary>
            Gets the value that indicates whether last logon information should be updated for external users
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.SitePrefixRegex">
            <summary>
            Get regex for detect site prefix username
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.UseSessionCookies">
            <summary>
            If true, the session cookies will be used for the authentication.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.ImportExternalRoles">
            <summary>
            If true, the system imports the external user roles.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.ImportExternalUsers">
            <summary>
            If true, the system imports the external users.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.LogUserCounts">
            <summary>
            Gets or sets the value that indicates whether user counts settings should be checked.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.UserCountsEnabled">
            <summary>
            Gets the value that indicates whether user counts are enabled.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.UseSafeUserName">
            <summary>
            Indicates whether to use safe or normal user names.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.UseSafeRoleName">
            <summary>
            Indicates whether to use safe or normal role names.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfoProvider.PasswordSalt">
            <summary>
            Gets or sets password salt.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UserInfoProvider.FormattedUserNameEventHandler">
            <summary>
            Delegate used for formatting user name
            </summary>
            <param name="username">Source user name</param>
            <param name="fullname">Source full name</param>
            <param name="nickname">Source nick name</param>
            <param name="isLiveSite">Indicates if returned username should be displayed on live site</param>
        </member>
        <member name="T:CMS.SiteProvider.UserInfo">
            <summary>
            UserInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.GLOBAL_ROLES_KEY">
            <summary>
            Constant for global roles in siteroles collection.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mUserSettings">
            <summary>
            UserSettings info object.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mSitesRoles">
            <summary>
            Table with the sites and corresponding roles.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mMemberships">
            <summary>
            Table with sites and corresponding memberships.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mMembershipsValidity">
            <summary>
            Hashtable with validity info about user's membership
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mSiteCultures">
            <summary>
            Contains allowed cultures.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mResourceUIElements">
            <summary>
            Hashtable with all UI elements within each module across all sites the user can see.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mUserLastLogonInfo">
            <summary>
            Contains information of user last logon.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mTimeZoneInfo">
            <summary>
            Time zone related to the current user.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mMembershipRoles">
            <summary>
            User membership roles.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mRolesValidity">
            <summary>
            Hashtable with temporaly roles.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mOrders">
            <summary>
            Collection of orders made by user.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mPurchasedProducts">
            <summary>
            Collection of products purchased by user.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mWishlist">
            <summary>
            Collection of users wishlist items.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserInfo.mInstantiated">
            <summary>
            Date and time when  this instance was created.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.StoreSettings">
            <summary>
            Stores local settings for object instance.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.RestoreSettings">
            <summary>
            Restores local settings for object instance.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.Invalidate">
            <summary>
            Invalidates the object in the object table.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetChildObject(System.String)">
            <summary>
            Gets child object info
            </summary>
            <param name="objectType">Child object type</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetChildWhereCondition(System.String,System.String)">
            <summary>
            Gets the child object where condition.
            </summary>
            <param name="where">Original where condition</param>
            <param name="objectType">Object type of the child object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.RegisterProperties">
            <summary>
            Registers properties of the object
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.#ctor(CMS.SiteProvider.UserInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new UserInfo object from the given DataClass.
            </summary>
            <param name="ui">Source user info</param>
            <param name="keepSourceData">If true, source data are kept</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserInfo object from the given DataRow.
            </summary>
            <param name="dr">Datarow with the user data</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.#ctor(System.Data.DataRow,System.Data.DataTable,System.Data.DataTable)">
            <summary>
            Constructor - Creates a new UserInfo object from the given DataRow.
            </summary>
            <param name="dr">Datarow with the user data</param>
            <param name="userRoles">DataTable with the user roles data</param>
            <param name="userSites">DataTable with the user sites data</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.#ctor(System.Data.DataRow,System.Data.DataTable,System.Data.DataTable,System.Data.DataTable)">
            <summary>
            Constructor - Creates a new UserInfo object from the given DataRow.
            </summary>
            <param name="dr">Datarow with the user data</param>
            <param name="userRoles">DataTable with the user roles data</param>
            <param name="userSites">DataTable with the user sites data</param>
            <param name="membershipRoles">DataTable with the user membership data</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Object serialization.
            </summary>
            <param name="info">Serialization info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.ContainsColumn(System.String)">
            <summary>
            Returns true if the object contains given column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.EnsureRolesTables">
            <summary>
            Ensures creation of role.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.CreateMembershipsTable(System.Data.DataTable)">
            <summary>
            Creates hashtable for users's memberships
            </summary>
            <param name="userSites">Table with user's sites</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.AddMembershipsToHashTable(System.Data.DataRow[],System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Add records to target hash table given in rows collection.
            </summary>
            <param name="rows">Rows with data</param>
            <param name="targetHashTable">Hash table with data</param>
            <param name="membershipValidity">Hashtable with rows with validity data for memberships</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.HasAutomaticProperty(System.String)">
            <summary>
            Returns true if the given column provides an automatic property to access it's binding.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns value of property.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets the field value (first look into CMS_User if the field is not found, set into CMS_UserSettings).
            </summary>
            <param name="columnName">Filed name</param>
            <param name="value">Value to be saved</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.MakeComplete(System.Boolean)">
            <summary>
            Makes the object data complete.
            </summary>
            <param name="loadFromDb">If true, the data to complete the object is loaded from database</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.IsInRole(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns true if the user is member of the specified role on the specified site (or on global role if check global is true).
            </summary>
            <param name="roleName">Role name to check</param>
            <param name="siteName">Site name to check</param>
            <param name="checkGlobal">If true, global roles are checked</param>
            <param name="checkMembership">If true, membership roles are checked</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.CheckRole(System.String,System.Collections.Hashtable,System.String,System.Boolean)">
            <summary>
            Returns true if role name is found in hashtable.
            </summary>
            <param name="roleName">Name of wanted role</param>
            <param name="table">Hashtable with roles to search in</param>
            <param name="siteName">Site name</param>
            <param name="checkGlobal">If true, global roles are checked</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.IsInRole(System.String,System.String)">
            <summary>
            Returns true if the user is member of the specified role on the specified site or member of global role.
            </summary>
            <param name="roleName">Role name to check</param>
            <param name="siteName">Site name to check</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.IsInMembership(System.String,System.String)">
            <summary>
            Check whether current user is in membership
            </summary>
            <param name="membership">Membership name</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.IsInMembership(System.String,System.String,System.Boolean)">
            <summary>
            Check whether current user is in membership
            </summary>
            <param name="membershipName">Membership name</param>
            <param name="siteName">Site name</param>
            <param name="checkGlobal">If true global memberships are checked</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.IsCultureAllowed(System.String,System.String)">
            <summary>
            Determines whether culture is allowed for given user on given site.
            </summary>
            <param name="cultureCode">Code of culture</param>
            <param name="siteName">Name of site</param>
            <returns>True if user can edit culture on site.</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.IsInSite(System.String)">
            <summary>
            Returns true, if the user is member of the specified site (registered on it).
            </summary>
            <param name="siteName">Sitename to check</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.IsPublic">
            <summary>
            Returns true if the user is public user record.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetGenericRoles">
            <summary>
            Gets user generic roles.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.CreateRolesTable(System.Data.DataTable,System.Data.DataTable,System.Data.DataTable)">
            <summary>
            Initializes the user sites roles HashTable by given data.
            </summary>
            <param name="userRoles">DataTable with the user roles data</param>
            <param name="userSites">DataTable with the user sites data</param>
            <param name="membershipRolesTable">DataTable with membership roles</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.AddRoleRowToHashTable(System.Data.DataRow[],System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Add records to target hash table given in rows collection.
            </summary>
            <param name="rows">Rows with data</param>
            <param name="targetHashTable">Hash table with data</param>
            <param name="unlimitedRoles">Hashtable with rows with no limit datetime</param>
            <param name="rolesValidity">Hashtable with rows with non pernament roles</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.CreateSiteCulturesTable(System.Data.DataTable,System.Data.DataTable)">
            <summary>
            Initializes the user site cultures hashtable by given data.
            </summary>
            <param name="userSites">Site data</param>
            <param name="userCultures">Culture data</param>
            <returns>Initialized hashtable</returns>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetRoleIdList(System.Boolean,System.Boolean,System.String)">
            <summary>
            Gets all roles for current user.
            </summary>
            <param name="includeGlobal">If true global roles are included</param>
            <param name="includeMembership">If true membership roles are included</param>
            <param name="siteName">Current site name</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetRoleIdListInternal(System.Collections.Hashtable,System.String,System.Boolean)">
            <summary>
            Returns roles for user included in given hash table collection.
            </summary>
            <param name="table">Hash table with specific user roles (site roles,membership roles..)</param>
            <param name="siteName">Site name</param>
            <param name="includeGlobal">If true global roles are included</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.CreateSiteUIElementsTable">
            <summary>
            Creates Hashtable for UIElements.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.ConvertUserDateTime(System.DateTime)">
            <summary>
            Returns current user date time in dependence on user time zone.
            </summary>
            <param name="dateTime">Date time</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.ConvertServerDateTime(System.DateTime)">
            <summary>
            Returns server date time in dependence on server time zone.
            </summary>
            <param name="dateTime">Date time</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetUserPreferredCurrencyID(System.String)">
            <summary>
            Returns ID of users preferred currency for given site or 0 when not found.
            </summary>
            <param name="siteName">Name of the site to get preference for</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetUserPreferredPaymentOptionID(System.String)">
            <summary>
            Returns ID of users preferred payment option for given site or 0 when not found.
            </summary>
            <param name="siteName">Name of the site to get preference for</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetUserPreferredShippingOptionID(System.String)">
            <summary>
            Returns ID of users preferred shipping option for given site or 0 when not found.
            </summary>
            <param name="siteName">Name of the site to get preference for</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetUserDiscountLevelID(System.String)">
            <summary>
            Returns ID of users discount level for given site or 0 when not found.
            </summary>
            <param name="siteName">Name of the site to get discount level for</param>
        </member>
        <member name="M:CMS.SiteProvider.UserInfo.GetSearchDocument(CMS.SettingsProvider.ISearchIndexInfo)">
            <summary>
            Returns index document for current object.
            </summary>
            <param name="info">Search index info object</param>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.SitesRoles">
            <summary>
            Returns the HashTable of the user Sites and roles.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.Memberships">
            <summary>
            Returns hashtable of user's membership
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.MembershipRoles">
            <summary>
            Returns the HashTable of the user Sites and roles got via membership.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.RolesValidity">
            <summary>
            Returns the HashTable of the temporaly user roles.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.SiteCultures">
            <summary>
            Returns the user's allowed cultures.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.ResourceUIElements">
            <summary>
            Returns UI elements within each module across all sites the user can see.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserIsHidden">
            <summary>
            Indicates whether user is hidden.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.LastName">
            <summary>
            Last name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserIsEditor">
            <summary>
            Indicates whether user is editor.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.FullName">
            <summary>
            Full name of user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.LastLogon">
            <summary>
            Last logon of user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.PreferredCultureCode">
            <summary>
            Preferred culture code.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.MiddleName">
            <summary>
            Middle name of user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserIsGlobalAdministrator">
            <summary>
            Indicates whether user is global administrator.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.PreferredUICultureCode">
            <summary>
            Preferred UI culture code.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserIsExternal">
            <summary>
            Indicated whether user is external.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserEnabled">
            <summary>
            Indicates whether user is enabled.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserSiteManagerDisabled">
            <summary>
            Indicates whether site manager is explicitly disabled for the user (global aministrator).
            Note: Does not override classic site manager security (only global admins are allowed in site manager).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.FirstName">
            <summary>
            First name of user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserCreated">
            <summary>
            When was user created.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserPasswordFormat">
            <summary>
            Format of user's password.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserName">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.Email">
            <summary>
            E-mail address.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.Enabled">
            <summary>
            Indicates if user is enabled.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.PasswordFormat">
            <summary>
            Format of the user password.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserStartingAliasPath">
            <summary>
             Starting alias path of user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserHasAllowedCultures">
            <summary>
            If user has allowed more than one culture.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserGUID">
            <summary>
            User GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserVisibility">
            <summary>
            Contains XML with user's custom form field visibility settings.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserIsDomain">
            <summary>
            Determines whether user is domain user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserAuthenticationGUID">
            <summary>
            Temporary GUID for user identification for automatic sign-in in the CMS Desk.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserPicture">
            <summary>
            User picture.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserAvatarID">
            <summary>
            User avatar ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserMessagingNotificationEmail">
            <summary>
            Messaging notification email.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserSignature">
            <summary>
            User signature.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserDescription">
            <summary>
            User description.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserNickName">
            <summary>
            User nick name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserURLReferrer">
            <summary>
            URL Referrer of user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserCampaign">
            <summary>
            User campaign.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserPasswordRequestHash">
            <summary>
            User password change request hash.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserCustomData">
            <summary>
            User custom data.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.ColumnNames">
            <summary>
            Column names.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.IsObjectValid">
            <summary>
            Returns true if the data are valid.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserLastLogonInfo">
            <summary>
             User last logon info.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserSettings">
            <summary>
            Gets the UserSettigs info object for the user.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.TimeZoneInfo">
            <summary>
            Gets the user's time zone information.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.UserSiteManagerAdmin">
            <summary>
            Gets whether current user is SiteManager admin.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.IsEditor">
            <summary>
            True if the user is editor. (Can access and work with the CMSDesk.).
            </summary>
            <remarks>This property has the same meaning as UserIsEditor property.</remarks>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.IsGlobalAdministrator">
            <summary>
            True if the user is the global administrator.
            </summary>
            <remarks>This property has the same meaning as UserIsGlobalAdministrator property.</remarks>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.IsExternal">
            <summary>
            True if the user is external.
            </summary>
            <remarks>This property has the same meaning as UserIsExternal property.</remarks>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.Orders">
            <summary>
            Collection or users orders made on current site.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.PurchasedProducts">
            <summary>
            Collection of all products purchased by user at all sites.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.Wishlist">
            <summary>
            Collection of all users wishlist items from all sites.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserInfo.SearchType">
            <summary>
            Gets the type of current object.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UserRoleInfoProvider">
            <summary>
            Class providing UserRoleInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.GetUserRoleInfo(System.Int32,System.Int32)">
            <summary>
            Returns the UserRoleInfo structure for the specified userRole.
            </summary>
            <param name="userId">UserID</param>
            <param name="roleId">RoleID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.GetUserRoles(System.String,System.String,System.Int32)">
            <summary>
            Returns all RoleID-UserID data.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
            <param name="topN">Number of items that should be returned (all if 0)</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.GetUserRoles(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all RoleID-UserID data.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
            <param name="topN">Number of items that should be returned (all if 0)</param>
            <param name="columns">Column names</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.SetUserRoleInfo(CMS.SiteProvider.UserRoleInfo)">
            <summary>
            Sets (updates or inserts) specified userRole.
            </summary>
            <param name="userRole">UserRole to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.DeleteUserRoleInfo(CMS.SiteProvider.UserRoleInfo)">
            <summary>
            Deletes specified userRole.
            </summary>
            <param name="infoObj">UserRole object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.RemoveUserFromRole(CMS.SiteProvider.UserInfo,CMS.SiteProvider.RoleInfo)">
            <summary>
            Deletes specified userRole.
            </summary>
            <param name="ui">UserInfo</param>
            <param name="ri">RoleInfo</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.RemoveUserFromRole(System.Int32,System.Int32)">
            <summary>
            Deletes specified userRole.
            </summary>
            <param name="userId">UserID</param>
            <param name="roleId">RoleID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.AddUserToRole(System.Int32,System.Int32,System.DateTime)">
            <summary>
            Adds specified user to the role.
            </summary>
            <param name="userId">UserID</param>
            <param name="roleId">RoleID</param>
            <param name="dt">Date till user role connection is valid</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.AddUserToRole(System.Int32,System.Int32)">
            <summary>
            Adds specified user to the site.
            </summary>
            <param name="userId">UserID</param>
            <param name="roleId">RoleID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.AddUserToRole(CMS.SiteProvider.UserInfo,CMS.SiteProvider.RoleInfo)">
            <summary>
            Adds specified user to the site.
            </summary>
            <param name="ui">UserInfo</param>
            <param name="ri">RoleInfo</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.AddUserToRole(CMS.SiteProvider.UserInfo,CMS.SiteProvider.RoleInfo,System.DateTime)">
            <summary>
            Adds specified user to the site.
            </summary>
            <param name="ui">UserInfo</param>
            <param name="ri">RoleInfo</param>
            <param name="dt">Date till user role connection is valid</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.IsUserInRole(System.Int32,System.Int32)">
            <summary>
            Returns true if the user is member of specified role.
            </summary>
            <param name="userId">User ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.IsSearchRequired">
            <summary>
            Returns true if exists at least one user index with role condition
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.GetUserRoleInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the UserRoleInfo structure for the specified userRole.
            </summary>
            <param name="userId">UserID</param>
            <param name="roleId">RoleID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.GetUserRolesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all role-user data.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Number of items that should be returned (all if 0)</param>
            <param name="columns">Column names</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.SetUserRoleInfoInternal(CMS.SiteProvider.UserRoleInfo)">
            <summary>
            Sets (updates or inserts) specified userRole.
            </summary>
            <param name="userRole">UserRole to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserRoleInfoProvider.DeleteUserRoleInfoInternal(CMS.SiteProvider.UserRoleInfo)">
            <summary>
            Deletes specified userRole.
            </summary>
            <param name="infoObj">UserRole object</param>
        </member>
        <member name="T:CMS.SiteProvider.UserSiteInfo">
            <summary>
            UserSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UserSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfo.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty UserSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new UserSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSiteInfo.UserSiteID">
            <summary>
            Record's site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSiteInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSiteInfo.UserPreferredCurrencyID">
            <summary>
            ID of the users's preferred currency.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSiteInfo.UserPreferredPaymentOptionID">
            <summary>
            ID of the users's preferred payment option.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSiteInfo.UserPreferredShippingOptionID">
            <summary>
            ID of the users's preferred shipping option.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UserSiteInfo.UserDiscountLevelID">
            <summary>
            ID of the users's discount level.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UserSiteInfoProvider">
            <summary>
            Class providing UserSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.GetUserSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the UserSiteInfo structure for the specified userSite.
            </summary>
            <param name="userId">UserID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.SetUserSiteInfo(CMS.SiteProvider.UserSiteInfo)">
            <summary>
            Sets (updates or inserts) specified userSite.
            </summary>
            <param name="userSite">UserSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.DeleteUserSiteInfo(CMS.SiteProvider.UserSiteInfo)">
            <summary>
            Deletes specified userSite.
            </summary>
            <param name="infoObj">UserSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.RemoveUserFromSite(System.Int32,System.Int32)">
            <summary>
            Deletes specified userSite.
            </summary>
            <param name="userId">UserID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.AddUserToSite(System.Int32,System.Int32)">
            <summary>
            Adds specified user to the site.
            </summary>
            <param name="userId">UserID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.AddUserToSite(CMS.SiteProvider.UserInfo,CMS.SiteProvider.SiteInfo)">
            <summary>
            Adds specified user to the site.
            </summary>
            <param name="ui">User info</param>
            <param name="si">Site info</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.GetUserSites(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between Users and Sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.GetUserSitesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns the bindings between Users and Sites.
            </summary>
            <param name="columns">Data columns to return</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.GetUserSitesInternal(System.String,System.String)">
            <summary>
            Returns the all user sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement to use</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.GetUserSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the UserSiteInfo structure for the specified userSite.
            </summary>
            <param name="userId">UserID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.SetUserSiteInfoInternal(CMS.SiteProvider.UserSiteInfo)">
            <summary>
            Sets (updates or inserts) specified userSite.
            </summary>
            <param name="userSite">UserSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.UserSiteInfoProvider.DeleteUserSiteInfoInternal(CMS.SiteProvider.UserSiteInfo)">
            <summary>
            Deletes specified userSite.
            </summary>
            <param name="infoObj">UserSite object</param>
        </member>
        <member name="T:CMS.SiteProvider.UICultureInfo">
            <summary>
            UICulture info data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.UICultureInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfo.#ctor(CMS.SiteProvider.UICultureInfo,System.Boolean)">
            <summary>
            Constructor, Creates a new UICultureInfo object from the given DataClass.
            </summary>
            <param name="ui">Source UICulture info</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfo.#ctor">
            <summary>
            Constructor, creates an empty UICultureInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates the UICultureInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the culture info data</param>
        </member>
        <member name="P:CMS.SiteProvider.UICultureInfo.UICultureID">
            <summary>
            Gets or sets culture ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UICultureInfo.UICultureName">
            <summary>
            Gets or sets culture name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UICultureInfo.UICultureCode">
            <summary>
            Gets or sets culture code.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UICultureInfo.UICultureGUID">
            <summary>
            UICulture GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.UICultureInfo.UICultureLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.UICultureInfoProvider">
            <summary>
            Class to provide the UI culture management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfo(System.String)">
            <summary>
            Returns UICultureInfo object for specified culture code.
            </summary>
            <param name="cultureCode">Code of culture to retrive</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfo(System.String,System.Boolean)">
            <summary>
            Returns UICultureInfo object for specified culture code.
            </summary>
            <param name="cultureCode">Code of culture to retrive</param>
            <param name="throwException">Indicates if exception should be thrown in case UIculture isn't found</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfo(System.Int32)">
            <summary>
            Returns UICultureInfo object for specified culture ID.
            </summary>
            <param name="cultureId">ID of culture to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetSafeUICulture(System.Int32)">
            <summary>
            Returns UICultureInfo object for specified culture ID or null if it does not exist.
            </summary>
            <param name="uiCultureId">UI culture ID</param>
            <returns>UICultureInfo with the specified ID or null</returns>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.SetUICultureInfo(CMS.SiteProvider.UICultureInfo)">
            <summary>
            Sets the specified culture info data.
            </summary>
            <param name="infoObj">CultureInfo object to set (save as new or update existing)</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.DeleteUICultureInfo(CMS.SiteProvider.UICultureInfo)">
            <summary>
            Delete specified culture.
            </summary>
            <param name="infoObj">Culture object</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.DeleteUICultureInfo(System.Int32)">
            <summary>
            Delete specified culture.
            </summary>
            <param name="cultureId">Culture ID</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.DeleteUICultureInfo(System.String)">
            <summary>
            Delete specified culture.
            </summary>
            <param name="cultureCode">Code name of the culture to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultures(System.String,System.String)">
            <summary>
            Gets all cultures.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultures(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets UI cultures defined by parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top records condition</param>
            <param name="columns">Columns specification</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetAllUICultures">
            <summary>
            Gets all cultures.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfoInternal(System.String)">
            <summary>
            Returns UICultureInfo object for specified culture code.
            </summary>
            <param name="cultureCode">Code of culture to retrive</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfoInternal(System.String,System.Boolean)">
            <summary>
            Returns UICultureInfo object for specified culture code.
            </summary>
            <param name="cultureCode">Code of culture to retrive</param>
            <param name="throwException">Indicates if exception should be thrown if UIculture by specified code not found</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfoInternal(System.Int32)">
            <summary>
            Returns UICultureInfo object for specified culture ID.
            </summary>
            <param name="cultureId">ID of culture to retrieve</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICultureInfoInternal(System.Int32,System.Boolean)">
            <summary>
            Returns UICultureInfo object for specified culture ID.
            </summary>
            <param name="cultureId">ID of culture to retrieve</param>
            <param name="throwException">Indicates if exception should be thrown if UIculture by specified ID not found</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.SetUICultureInfoInternal(CMS.SiteProvider.UICultureInfo)">
            <summary>
            Sets the specified culture info data.
            </summary>
            <param name="infoObj">CultureInfo object to set (save as new or update existing)</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.DeleteUICultureInfoInternal(CMS.SiteProvider.UICultureInfo)">
            <summary>
            Delete specified culture.
            </summary>
            <param name="infoObj">Culture object</param>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICulturesInternal(System.String,System.String)">
            <summary>
            Gets all cultures.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <returns>DataSet with UI cultures</returns>
        </member>
        <member name="M:CMS.SiteProvider.UICultureInfoProvider.GetUICulturesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets UI cultures according to the set of input parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top records condition</param>
            <param name="columns">Columns specification</param>
            <returns>DataSet with UI cultures</returns>
        </member>
        <member name="T:CMS.SiteProvider.WebTemplateInfo">
            <summary>
            WebPart info data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.WebTemplateInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfo.#ctor">
            <summary>
            Constructor, creates an empty WebTemplateInfo structure.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty WebTemplateInfo object from the given DataRow data.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateId">
            <summary>
            The WebTemplateId.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateName">
            <summary>
            The WebTemplateName.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateDisplayName">
            <summary>
            The WebTemplateDisplayName.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateFileName">
            <summary>
            The WebTemplateFileName.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateDescription">
            <summary>
            The WebTemplateDescription.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateLicenses">
            <summary>
            The WebTemplateLicenses.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplatePackages">
            <summary>
            The WebTemplateLicenses.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateGUID">
            <summary>
            WebTemplate GUID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.WebTemplateInfo.WebTemplateOrder">
            <summary>
            Web template order index.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.WebTemplateInfoProvider">
            <summary>
            Provides access to information about web template.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.SetWebTemplateInfo(CMS.SiteProvider.WebTemplateInfo)">
            <summary>
            Sets specified web template data.
            </summary>
            <param name="webTemplate">Web tempalte object</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.GetWebTemplateInfo(System.Int32)">
            <summary>
            Gets the web template.
            </summary>
            <param name="webTemplateId">Web template ID</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.GetWebTemplateInfo(System.String)">
            <summary>
            Gets the web template.
            </summary>
            <param name="templateName">Template code name</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.DeleteWebTemplateInfo(CMS.SiteProvider.WebTemplateInfo)">
            <summary>
            Deletes specified web template.
            </summary>
            <param name="template">Web template object</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.DeleteWebTemplateInfo(System.Int32)">
            <summary>
            Deletes specified web template.
            </summary>
            <param name="webTemplateId">Id of web template to delete</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.GetAllWebTemplates">
            <summary>
            Gets dataset with all web templates.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.GetWebTemplates(System.String,System.String)">
            <summary>
            Gets dataset with all web templates.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.GetWebTemplates(System.String,System.String,System.Boolean)">
            <summary>
            Gets dataset with all web templates.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="onlyExisting">Return only templates that exist physically on the disc</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.GetWebTemplates(System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Gets dataset with all web templates.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="columns">Select only specified columns</param>
            <param name="onlyExisting">Return only templates that exist physically on the disc</param>
            <param name="topN">Select top N rows</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.MoveTemplateUp(System.Int32)">
            <summary>
            Moves the template up in order.
            </summary>
            <param name="webTemplateId">Web template ID</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.MoveTemplateDown(System.Int32)">
            <summary>
            Moves the template down in order.
            </summary>
            <param name="webTemplateId">Web template ID</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.IsAnyTemplatePresent">
            <summary>
            Returns true if any template is physically present.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.IsAnyTemplatePresentInternal">
            <summary>
            Indicates if any template is physically present.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.GetWebTemplatesInternal(System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Gets dataset with all web templates.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns</param>
            <param name="topN">Get top N columns</param>
            <param name="columns">Select only specified columns</param>
            <param name="onlyExisting">Indicates if only web templates with existing folder should be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.MoveTemplateUpInternal(System.Int32)">
            <summary>
            Moves the template up in order.
            </summary>
            <param name="webTemplateId">Web template ID</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.MoveTemplateDownInternal(System.Int32)">
            <summary>
            Moves the template down in order.
            </summary>
            <param name="webTemplateId">Web template ID</param>
        </member>
        <member name="M:CMS.SiteProvider.WebTemplateInfoProvider.InitOrders">
            <summary>
            Initialize the templates order to the proper sequence.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AliasPathFilter">
            <summary>
            Search alias path filter.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AliasPathFilter.#ctor">
            <summary>
            Alias path filter constructor.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.AliasPathFilter.#ctor(System.String)">
            <summary>
            Alias path filter constructor.
            </summary>
            <param name="path">Alias path</param>
        </member>
        <member name="M:CMS.SiteProvider.AliasPathFilter.#ctor(System.String,System.String)">
            <summary>
            Alias path filter constructor.
            </summary>
            <param name="fieldName">Name of nodealias path field</param>
            <param name="path">Alias path</param>
        </member>
        <member name="M:CMS.SiteProvider.AliasPathFilter.Bits(Lucene.Net.Index.IndexReader)">
            <summary>
            Returns BitArray of filtered results.
            </summary>
            <param name="reader">Index reader</param>
        </member>
        <member name="P:CMS.SiteProvider.AliasPathFilter.FieldName">
            <summary>
            Field name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.AliasPathFilter.AliasPath">
            <summary>
            Alias path.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.AnalyzerTypeEnum">
            <summary>
            Search analyzer type enum.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AnalyzerTypeEnum.SimpleAnalyzer">
            <summary>
            SimpleAnalyzer - divides text at non-letters, lowercase.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AnalyzerTypeEnum.StopAnalyzer">
            <summary>
            StopAnalyzer - divides text at non-letters, use of stop words.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AnalyzerTypeEnum.WhiteSpaceAnalyzer">
            <summary>
            WhiteSpaceAnalyzer - divides text at whitespace, lowercase.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AnalyzerTypeEnum.StandardAnalyzer">
            <summary>
            StandardAnalyzer - grammar based, lowecase, good for most European-language documents.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AnalyzerTypeEnum.KeywordAnalyzer">
            <summary>
            "Tokenizes" the entire stream as a single token. This is useful for data like zip codes, ids, and some product names.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AnalyzerTypeEnum.CustomAnalyzer">
            <summary>
            Custom analyzer.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AnalyzerTypeEnum.SubsetAnalyzer">
            <summary>
            Subset analyzer - whitespace, lowercase, searched text is processed as *word*.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.AnalyzerTypeEnum.StartsWithanalyzer">
            <summary>
            Starts with analyzer - whitespace, lowercase, searched text is processed as word*.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ClauseTypeEnum">
            <summary>
            Search query clause enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ClauseTypeEnum.OR">
            <summary>
            OR clause.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ClauseTypeEnum.AND">
            <summary>
            AND clause.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.ClauseTypeEnum.AND_NOT">
            <summary>
            AND NOT clause.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.IndexStatusEnum">
            <summary>
            Enumeration for index statuses.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.IndexStatusEnum.UNKNOWN">
            <summary>
            Unknown index status.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.IndexStatusEnum.NEW">
            <summary>
            New index status.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.IndexStatusEnum.READY">
            <summary>
            Ready index/optimize status.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.IndexStatusEnum.REBUILDING">
            <summary>
            Rebuilding index status.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.IndexStatusEnum.ERROR">
            <summary>
            Error status.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.IndexStatusEnum.OPTIMIZING">
            <summary>
            Optimizing status.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchFilterModeEnum">
            <summary>
            Search filter mode enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchFilterModeEnum.DropdownList">
            <summary>
            Dropdown list.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchFilterModeEnum.Checkbox">
            <summary>
            Checkbox.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchFilterModeEnum.RadioButton">
            <summary>
            Radion button.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchHelper">
            <summary>
            Provides the smart search methods.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.GENERALINDEX">
            <summary>
            General search index constant.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CONTENT_FIELD">
            <summary>
             Name of content field in iDocument.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.ID_FIELD">
            <summary>
             Name of id field in iDocument.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.TYPE_FIELD">
            <summary>
             Name of type field in iDocument.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.SITE_FIELD">
            <summary>
             Name of the site field in iDocument.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CREATED_FIELD">
            <summary>
            Name of the created field in iDocument.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CULTURE_FIELD">
            <summary>
            Name of the culture field in iDocument.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.MOVED_FIELD">
            <summary>
            Special field for moved documents. Thos field contains sitename and path separated by semicolon.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.INVARIANT_FIELD_VALUE">
            <summary>
            Invariant field value.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.RESULTS_KEY">
            <summary>
            Key for search results stored in current request.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.MAX_INDEX_PATH">
            <summary>
            Max allowed lenght of path for place where indexes are stored.
            260 is Windows limit, -1 for NULL, -16 for index file name, -1 for index name, -1 for slash 
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.STARTING_MARKER">
            <summary>
            Higlighting's starting tag marker.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.ENDING_MARKER">
            <summary>
            Higlighting's ending tag marker.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.SEARCH_DOUBLE_MAX">
            <summary>
            Maximal value of double value.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CUSTOM_SEARCH_INDEX">
            <summary>
            Constant for custom search index.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.DOCUMENTS_CRAWLER_INDEX">
            <summary>
            Constant for custom search index.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CUSTOM_TITLE">
            <summary>
            Custom title field.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CUSTOM_CONTENT">
            <summary>
            Custom content field.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CUSTOM_DATE">
            <summary>
            Custom date field.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CUSTOM_URL">
            <summary>
            Custom URL field.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CUSTOM_IMAGEURL">
            <summary>
            Custom image URL.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.SIMPLE_ITEM_ID">
            <summary>
            Guid value of the simple search setting item.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.CUSTOM_INDEX_DATA">
            <summary>
            Constant for custom index data.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mBasicEscaperRegEx">
            <summary>
            Finds only ":" special character - basic search.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mImageContentReplacer">
            <summary>
            Regular expression for Image content.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mSearchContentXpathValue">
            <summary>
            XPath function to specifiy which webparts fields should be added to the search document content.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mHighlightingMatchEval">
            <summary>
            Highligting evaluator.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mExcludedFieldsFromConversion">
            <summary>
            List of excluded fields from conversion, semicolon is used as separator.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mRangeQuerySyntaxRegex">
            <summary>
            Range query regular expression. Converts lowercase "to" to uppercase.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mRangeQuerySyntaxEvaluator">
            <summary>
            Range query evalutor.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mIntReplacerRegex">
            <summary>
            Integer value repacer. Replaces integer values in following format (int)123.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mDoubleReplacerRegex">
            <summary>
            Double value replacer.  Replaces double values in following format (int)123.456.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mIntReplacerEvaluator">
            <summary>
            Evaluator for IntReplacer regular expression.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mDoubleReplacerEvaluator">
            <summary>
            Evaluator for DoubleReplacer regular expression.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mSortPrefixRegex">
            <summary>
            Sort prefix regular expression.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mSearchOnlyWhenContentPresent">
            <summary>
            If true, performs the search only when the content part of the search expression is present.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mCustomSearchPath">
            <summary>
            Custom search path.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mMaxFieldLength">
            <summary>
            Maximal field length.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchHelper.mStoreContentField">
            <summary>
            Indicates whether content field should be stored in the index
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.IntMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Converts regular integer value to search-friendly integer value.
            </summary>
            <param name="m">Regex match</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.DoubleMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Converts regular double value to search-friendly double value.
            </summary>
            <param name="m">Regex match</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.DoubleToString(System.Double)">
            <summary>
            Returns string representation of the double value. Returned value has always uniform format.
            </summary>
            <param name="value">Double value</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.StringToDouble(System.String)">
            <summary>
            Converts search string to the integer value.
            </summary>
            <param name="value">String representation of integer</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.IntToString(System.Int32)">
            <summary>
            Returns string representation of the integer value. Returned value has always uniform format.
            </summary>
            <param name="value">Integer value</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.StringToInt(System.String)">
            <summary>
            Converts search string to the integer value.
            </summary>
            <param name="value">String representation of integer</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.CreateDocument(System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            Creates Lucene document.
            </summary>
            <param name="type">Type of document</param>   
            <param name="id">ID value</param>
            <param name="siteName">Site name</param>
            <param name="created">Document created</param>
            <param name="culture">Document culture</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.AddField(Lucene.Net.Documents.Document,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Add field do the Lucene document.
            </summary>
            <param name="document">Document to which should be field added</param>
            <param name="name">Name of new field</param>
            <param name="value">Value of field</param>
            <param name="store">Should be value stored</param>
            <param name="tokenize">Should be value tokenized</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.PrepareContentValue(System.Object)">
            <summary>
            Prepares value to add to content field.
            </summary>
            <param name="value">Value to add</param> 
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.PrepareContentValue(System.Object,System.Boolean)">
            <summary>
            Prepares value to add to content field.
            </summary>
            <param name="value">Value to add</param> 
            <param name="stripTags">Indicates whether tags should be stripped</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.AddObjectDataToDocument(Lucene.Net.Documents.Document,System.String,System.Data.DataSet)">
            <summary>
             Adds object data to iDocument, data for content field prepares and returns.
            </summary>
            <param name="iDocument">Documnet idocument</param>
            <param name="classname">Class name</param>
            <param name="ds">Dataset with data</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetSearchOptionsEnum(System.String)">
            <summary>
            Converts search option string to enumeration.
            </summary>
            <param name="options">Options</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetSearchOptionsString(CMS.SiteProvider.SearchOptionsEnum)">
            <summary>
            Converts search option enum to string.
            </summary>
            <param name="options">Options</param>       
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetSearchFilterModeEnum(System.String)">
            <summary>
            Converts search filter mode string to enumeration.
            </summary>
            <param name="filterMode">Filter mode</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetSearchFilterModeString(CMS.SiteProvider.SearchFilterModeEnum)">
            <summary>
            Converts search option string to enumeration.
            </summary>
            <param name="filterMode">Filter mode</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.Optimize(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Optimize specified index.
            </summary>
            <param name="srchInfo">Index info object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.PartialRebuild(System.String,System.Object)">
            <summary>
            Rebuild part of the index with dependence on type and values.
            </summary>
            <param name="type">Type of the index</param>
            <param name="values">Values dependent on current type. Documents sitename;nodealiaspath. If sitename is not specified all index sites are used</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.Rebuild(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Rebuild specified index.
            </summary>
            <param name="srchInfo">Index info object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.Rebuild(CMS.SiteProvider.SearchIndexInfo,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Hashtable,System.Collections.Hashtable,System.Boolean)">
            <summary>
            Ensures full or partial index rebuild.
            </summary>
            <param name="srchInfo">Search index info</param>
            <param name="cultures">Cultures where condition</param>
            <param name="sites">List of sites</param>
            <param name="allowedNodes">List of allowed classes and paths</param>
            <param name="excludedNodes">List of excluded classes and paths</param>
            <param name="fullRebuild">Indicates whether current rebuild is full or partial</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.PrepareBuildingValues(CMS.SiteProvider.SearchIndexInfo,System.Collections.Generic.List{System.Int32}@,System.String@,System.Collections.Hashtable@,System.Collections.Hashtable@,System.String)">
            <summary>
            Prepares sites, cultures, allowed and excluded collections for partial or full rebuild.
            </summary>
            <param name="srchInfo">Search index info</param>
            <param name="sites">List of sites</param>
            <param name="cultures">List of cultures</param>
            <param name="allowedNodes">List of allowed classes</param>
            <param name="excludedNodes">List of excluded classes</param>
            <param name="nodeAliasPath">Node alias path. If is specified, all allowed nodes must be beneath this path</param>
            <returns>Returns true if values are ready</returns>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.Update(Lucene.Net.Documents.Document,CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Insert or update document for specified index.
            </summary>
            <param name="iDoc">Document</param>
            <param name="srchInfo">Index info object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.Delete(System.String,System.Collections.ICollection,CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Remove document(s) with dependence on field name and field value collection for specified index.
            </summary>
            <param name="fieldName">Field name</param>
            <param name="values">Collection of field values</param>
            <param name="srchInfo">Index info object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.Delete(System.String,System.String,CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Remove document(s) with dependence on field name and field value for specified index.
            </summary>
            <param name="fieldName">Field name</param>
            <param name="value">Field value</param>
            <param name="srchInfo">Index info object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.HighlightMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Highligting match evaluator.
            </summary>
            <param name="m">Represents the results from a single regular expression match</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.Highlight(System.String,System.String,System.String)">
            <summary>
            Highlight input text with dependence on current search key words.
            </summary>
            <param name="text">Input text</param>
            <param name="startTag">Starting HTML tag</param>
            <param name="endTag">Ending HTML tag</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.FilterResults(Lucene.Net.Search.Hits,System.Boolean,System.Boolean,System.String,System.String,System.Int32,CMS.SiteProvider.UserInfo,System.Collections.Hashtable)">
            <summary>
            Returns array list with filtered results.
            </summary>
            <param name="results">Hits collection with search results</param>
            <param name="checkPermissions">Indicates whether permission should be checked</param>
            <param name="combineWithDefaultCulture">Indicates whether combine with default culture is required</param>
            <param name="culture">Current culture</param>
            <param name="defaultCulture">Default culture</param>
            <param name="maxResults">Number of results which shuld be processed</param>
            <param name="user">Current user info</param>
            <param name="documents">Collection of documents ids which are present in filtered results</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.FilterResults(Lucene.Net.Search.Hits,System.Boolean,System.Boolean,System.String,System.String,System.Int32,CMS.SiteProvider.UserInfo,System.Collections.Hashtable,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Returns array list with filtered results.
            </summary>
            <param name="results">Hits collection with search results</param>
            <param name="checkPermissions">Indicates whether permission should be checked</param>
            <param name="combineWithDefaultCulture">Indicates whether combine with default culture is required</param>
            <param name="culture">Current culture</param>
            <param name="defaultCulture">Default culture</param>
            <param name="maxResults">Number of results which shuld be processed</param>
            <param name="user">Current user info</param>
            <param name="documents">Collection of documents ids which are present in filtered results</param>
            <param name="inRoles"></param>
            <param name="notInRoles"></param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.Search(System.String,Lucene.Net.Search.Sort,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Int32,System.Int32,CMS.SiteProvider.UserInfo,System.Int32@,System.String,System.String)">
            <summary>
            Returns dataset with search results, if search is used for non-document index, path and class name values are ignored (can be null).
            </summary>
            <param name="searchFor">Search query</param>
            <param name="searchSort">Search sort</param>
            <param name="path">Path</param>
            <param name="classNames">Class names</param>
            <param name="currentCulture">Current culture</param>
            <param name="defaultCulture">Default culture</param>
            <param name="combineWithDefaultCulture">Whether combine with default culture</param>
            <param name="checkPermissions">Indicates whether check permissions</param>
            <param name="searchInAttachments">Indicates whether search in attachments</param>
            <param name="searchIndexes">Search indexes</param>
            <param name="displayResults">Number of results which should be displayed</param>
            <param name="user">User info</param>
            <param name="numberOfResults">Number of results which (for pager settings)</param>
            <param name="numberOfProcessedResults">Number of processed results due to performance optimization</param>
            <param name="startingPosition">Starting position in searhc results (paging)</param>
            <param name="attachmentWhere">Where condition for attachments search</param>
            <param name="attachmentOrderBy">Order by attachments search results</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.CombineSearchCondition(System.String,System.String,CMS.ISearchEngine.SearchModeEnum,CMS.SiteProvider.SearchOptionsEnum,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns string with Lucene search conditions.
            </summary>
            <param name="keyWords">Search keywords</param>
            <param name="searchConditions">Search conditions</param>
            <param name="searchMode">Searcnh mode</param>
            <param name="searchOptions">Searcnh mode</param>
            <param name="classNames">Document of this classnames will be included in search</param>
            <param name="currentCulture">Current culture</param>
            <param name="defaultculture">Default site culture</param>
            <param name="combineWith">Combine with default culture</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.RangeQueryEvaluator(System.Text.RegularExpressions.Match)">
            <summary>
            Evaluator method, converts lowercase "to" to uppercase.
            </summary>
            <param name="match">Match</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.ProcessSearchKeywords(System.String,CMS.SiteProvider.SearchOptionsEnum)">
            <summary>
            Returns modified keywords string based on searchOptions.
            </summary>
            <param name="keywords">String with keyword</param>
            <param name="searchOptions">Searchoptions specifies encoding</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetSort(System.String)">
            <summary>
            With dependence on current sort condition returns Sort object, supports ##SCORE## macro.
            </summary>
            <param name="sortCondition">Sort condition</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetCustomSearchIndexAssembly(System.String)">
            <summary>
            Gets the custom search assembly.
            </summary>
            <param name="assemblyName">Assembly name</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetCustomSearchIndex(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Returns ICusromSearchIndex for specified index info.
            </summary>
            <param name="srchInfo">Search index info</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.HtmlToPlainText(System.String)">
            <summary>
            Converts html to the plain text (body part).
            </summary>
            <param name="htmlCode">HTML code</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetCrawlerCookieContainer(System.String,System.String)">
            <summary>
            Returns authentication cookie for specific user and url (domain) which is used for crawling.
            </summary>
            <param name="user">Username</param>
            <param name="url">Full url to get domain</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.GetCrawlerCredentials">
            <summary>
            Returns network credential for crawler.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.CreateRequest(System.String)">
            <summary>
            Creates HttpWebRequest for specific URL.
            </summary>
            <param name="url">Target URL</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.DownloadHtmlContent(System.String)">
            <summary>
            Downloads the html code for the specified url.
            </summary>
            <param name="url">Page url</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchHelper.IsCrawlerRequest">
            <summary>
            Returns true if current request was inicialized by smart search crawler.
            </summary>
        </member>
        <member name="E:CMS.SiteProvider.SearchHelper.OnHtmlToPlainText">
            <summary>
            Fires when html to plain text process is required.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.StoreContentField">
            <summary>
            Gets the value that indicates whether content field should be stored in the index
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.IndexDocumentCategories">
            <summary>
            Gets or sets the value that indicates whether document categories should be indexed
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.CrawlerDomainName">
            <summary>
            Gets the domain specified in app keys which should be used for crawler indexer.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.CrawlerUserAgent">
            <summary>
            Gets or sets the user agent which should be used within crawler search.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.CrawlerFormsUserName">
            <summary>
            Gets the username which should be used for crawler search.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.CrawlerUserName">
            <summary>
            Gets the crawler user name which should be used for current search.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.CrawlerPassword">
            <summary>
            Gets the scheduler user password.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.CrawlerDomain">
            <summary>
            Gets the scheduler user domain.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.SortPrefixRegex">
            <summary>
            Gets the sort field type syntax regular expression. 
            Result contains type, name and order groups.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.IntReplacerRegex">
            <summary>
            Gets the integer replacer reular expression.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.DoubleReplacerRegex">
            <summary>
            Gets the double replacer reular expression.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.IntReplacerEvaluator">
            <summary>
            Gets the integer replacer evaluator.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.DoubleReplacerEvaluator">
            <summary>
            Gets the double replacer evaluator.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.RangeQuerySyntaxRegex">
            <summary>
            Gets the regular expression for range query values.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.RangeQuerySyntaxEvaluator">
            <summary>
            Gets the Range query evaluator. Converts lowecase "to" to uppercase.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.ExcludedFieldsFromConversion">
            <summary>
            Gets or sets the fields separated by semicolon, this field will be excluded from int/double conversion
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.HighlightingMatchEval">
            <summary>
            Gets the highligting match evaluator.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.MoreCultures">
            <summary>
            Gets the value that indicates whether current search is performed for all cultures or combine current culture with default.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.HighlighsRegex">
            <summary>
            Gets the regular expression specified for highlighting.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.HighlightRegex">
            <summary>
            Gets the regular expression specified for highlighting.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.BasicSearchReplacer">
            <summary>
            Gets the regular expression for basic search replacemenmt.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.ImageContentReplacer">
            <summary>
            Gets the regular expression for image content tag.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.SearchContentXpathValue">
            <summary>
            XPath function to specifiy which webparts fields should be added to the search document content.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.SearchOnlyWhenContentPresent">
            <summary>
            If true, performs the search only when the content part of the search expression is present.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.CustomSearchPath">
            <summary>
            Custom search path.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.MaxFieldLength">
            <summary>
            Maximal field length.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchHelper.CrawlerID">
            <summary>
             Gets or sets the crawler id which is sent within the request.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchHelper.HtmlToPlainTextHandler">
            <summary>
            Html to plain text version delegate.
            </summary>
            <param name="plainText">Plain text version</param>
            <param name="originalHtml">Original HTML version</param>
        </member>
        <member name="T:CMS.SiteProvider.SearchOptionsEnum">
            <summary>
            Search task status enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchOptionsEnum.NoneSearch">
            <summary>
            No special behaviour, all special character will be escaped.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchOptionsEnum.BasicSearch">
            <summary>
            Special character ":" will be escaped.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchOptionsEnum.FullSearch">
            <summary>
            Search with all possibilities, no escaping.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchQueryHelper">
            <summary>
            Search helper class for lucene query conversion to SQL Fulltext query and results highlighting.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchQueryHelper.ProcessQuery(Lucene.Net.Search.Query,CMS.SiteProvider.ClauseTypeEnum,CMS.SiteProvider.SearchQueryClauses,System.String)">
            <summary>
            Returns SearchQueryClauses objects with query keywords and clauses.
            </summary>
            <param name="q">Query to process</param>
            <param name="type">Clause type</param>
            <param name="clauses">Current clauses collection</param>
            <param name="field">Filter for filed name</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchQueryHelper.GetQueryClauses(System.String,System.String)">
            <summary>
            Returns SQl Fulltext query.
            </summary>
            <param name="luceneQuery">Lucene query</param>
            <param name="field">Field name</param>
        </member>
        <member name="T:CMS.SiteProvider.SearchQueryClauses">
            <summary>
            Class with information about clauses and keywords.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchQueryClauses.andClauses">
            <summary>
            Collection of 'AND' clauses.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchQueryClauses.andNotClauses">
            <summary>
            Collection of 'AND NOT' clauses.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchQueryClauses.orClauses">
            <summary>
            Collection of 'OR' clauses.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchQueryClauses.mParent">
            <summary>
            Parent clause object.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchQueryClauses.mHighlightedWords">
            <summary>
            List of words which should be highlighted.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchQueryClauses.mNonAlphaNumericRegex">
            <summary>
            Non-alpha numeric characters regex.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchQueryClauses.mExactRegex">
            <summary>
            Exact phrase regular expression.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchQueryClauses.AddClause(System.Object,CMS.SiteProvider.ClauseTypeEnum)">
            <summary>
            Add clause to current object.
            </summary>
            <param name="wordOrQueryToken">KeyWord or SearchQueryToken child</param>
            <param name="type">Clause type</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchQueryClauses.GetQuery">
            <summary>
            Returns Fulltext SQL query.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchQueryClauses.GetQuery(System.Boolean,System.Boolean)">
            <summary>
            Returns Fulltext SQL query and fill collection of words which should be highlighted.
            </summary>
            <param name="generateQuery">Indicates whether query should be generated</param>
            <param name="causeType">If is true => positive cause (AND/OR), false => negative cause (NOT)</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchQueryClauses.GetQuery(System.Boolean,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Returns Fulltext SQL query and fill collection of words which should be highlighted.
            </summary>
            <param name="generateQuery">Indicates whether query should be generated</param>
            <param name="causeType">If is true => positive cause (AND/OR), false => negative cause (NOT)</param>
            <param name="highligtedWords">Collection of words which should be highlighted</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchQueryClauses.ProcessKeyWord(System.Object)">
            <summary>
            Returns string keyword without SQL Injection vulnureability.
            </summary>
            <param name="obj">Input object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchQueryClauses.ProcessHighlightedWord(System.Object)">
            <summary>
            Returns string keyword for highlighting.
            </summary>
            <param name="obj">Input object</param>
        </member>
        <member name="P:CMS.SiteProvider.SearchQueryClauses.ExactRegex">
            <summary>
            Gets the rgeular expression for exact phrase.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchQueryClauses.NonAlphaNumericRegex">
            <summary>
            Gets the non-alpha numeric characters regex.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchQueryClauses.HighlightedWords">
            <summary>
            Gets the list of words which should be highlighted.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchQueryClauses.Parent">
            <summary>
            Gets or sets the parrent of the current object.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchTaskInfo">
            <summary>
            SearchTaskInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfo.#ctor">
            <summary>
            Constructor - Creates an empty SearchTaskInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SearchTaskInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskCreated">
            <summary>
            Gets the task creation time.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskField">
            <summary>
            Search task field.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskObjectType">
            <summary>
            Object type of search task.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskType">
            <summary>
            Search task type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskStatus">
            <summary>
            Search task status.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskServerName">
            <summary>
            Search task server name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskID">
            <summary>
            Search task ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskValue">
            <summary>
            Search task value.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfo.SearchTaskPriority">
            <summary>
            SearchTaskPriority determines which task should be processed earlier, higher value = higher priority.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.ISearchFilterable">
            <summary>
            Interface for search filter.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.ISearchFilterable.ApplyFilter(System.String,System.String)">
            <summary>
            Combine search condition and order value with current values. 
            </summary>
            <param name="searchCondition">Search condition</param>
            <param name="searchSort">Sorting of search</param>
        </member>
        <member name="M:CMS.SiteProvider.ISearchFilterable.AddFilterOptionsToUrl(System.String,System.String)">
            <summary>
            Add filter options (selected item) to filter. 
            </summary>
            <param name="searchWebpartID">Filter webpart id</param>
            <param name="options">Filter option</param>
        </member>
        <member name="P:CMS.SiteProvider.ISearchFilterable.FilterSearchCondition">
            <summary>
            Seach condition.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.ISearchFilterable.FilterSearchSort">
            <summary>
            Sorting of search.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchIndexCultureInfoProvider">
            <summary>
            Class providing SearchIndexCultureInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.GetSearchIndexCultures(System.Int32)">
            <summary>
            Returns all cultures for specified search index.
            </summary>
            <param name="searchIndexId">Search index id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.GetSearchIndexCultures(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all cultures for specified search index.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">TopN items</param>
            <param name="columns">List of columns to get</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.GetSearchIndexCultureInfo(System.Int32,System.Int32)">
            <summary>
            Returns the SearchIndexCultureInfo structure for the specified searchIndexCulture id.
            </summary>
            <param name="indexId">SearchIndex id</param>
            <param name="cultureId">Culture id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.SetSearchIndexCultureInfo(CMS.SiteProvider.SearchIndexCultureInfo)">
            <summary>
            Sets specified searchIndexCulture.
            Doesn't update existing mItems.
            </summary>
            <param name="infoObj">SearchIndexCultureInfo to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.DeleteSearchIndexCultureInfo(CMS.SiteProvider.SearchIndexCultureInfo)">
            <summary>
            Deletes specified searchIndexCulture.
            </summary>
            <param name="infoObj">SearchIndexCultureInfo object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.DeleteSearchIndexCultureInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified searchIndexCulture.
            </summary>
            <param name="indexId">SearchIndex id</param>
            <param name="cultureId">Culture id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.AddSearchIndexCulture(System.Int32,System.Int32)">
            <summary>
            Adds specified sarchIndex to culture.
            </summary>
            <param name="indexId">SearchIndex id</param>
            <param name="cultureId">Culture id</param>   
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.GetSearchIndexCulturesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns dataset with all cultures for specified search index.
            </summary>
            <param name="columns">Columns</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">TOP N Rows</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.GetSearchIndexCultureInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the SearchIndexCultureInfo structure for the specified searchIndex.
            </summary>
            <param name="indexId">SearchIndex id</param>
            <param name="cultureId">Culture id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.SetSearchIndexCultureInfoInternal(CMS.SiteProvider.SearchIndexCultureInfo)">
            <summary>
            Sets specified searchIndexCulture.
            Doesn't update existing item.
            </summary>
            <param name="searchIndexCulture">SearchIndexCultureInfo to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfoProvider.DeleteSearchIndexCultureInfoInternal(CMS.SiteProvider.SearchIndexCultureInfo)">
            <summary>
            Deletes specified SearchIndexCultureInfo.
            </summary>
            <param name="infoObj">SearchIndexCultureInfo object</param>
        </member>
        <member name="T:CMS.SiteProvider.SearchIndexSiteInfoProvider">
            <summary>
            Class providing SearchIndexSiteInfo management.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetSearchIndexSites(System.Int32)">
            <summary>
            Returns all sites for specified search index.
            </summary>
            <param name="searchIndexId">Search index id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetSearchIndexSiteInfo(System.Int32)">
            <summary>
            Returns dataset with site search indexes for the specified site ID.
            </summary>
            <param name="siteId">Site id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetSiteSearchIndexes(System.Int32)">
            <summary>
            Returns dataset with site search indexes for the specified site ID.
            </summary>
            <param name="siteId">Site id</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetSearchIndexSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the SearchIndexSiteInfo structure for the specified searchIndexSite id.
            </summary>
            <param name="indexId">SearchIndex id</param>
            <param name="siteId">Site id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetIndexSites(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns index site data with dependecies on specified conditions.
            </summary>
            <param name="columns">Columns</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">TOP N Rows</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.SetSearchIndexSiteInfo(CMS.SiteProvider.SearchIndexSiteInfo)">
            <summary>
            Sets specified searchIndexSite.
            Doesn't update existing mItems.
            </summary>
            <param name="infoObj">SearchIndexSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.DeleteSearchIndexSiteInfo(CMS.SiteProvider.SearchIndexSiteInfo)">
            <summary>
            Deletes specified searchIndexSite.
            </summary>
            <param name="infoObj">SearchIndexSite object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.DeleteSearchIndexSiteInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified searchIndexSite.
            </summary>
            <param name="indexId">SearchIndex id</param>
            <param name="siteId">Site id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.AddSearchIndexToSite(System.Int32,System.Int32)">
            <summary>
            Adds specified searchIndex to site.
            </summary>
            <param name="indexId">SearchIndex id</param>
            <param name="siteId">Site id</param>   
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetSearchIndexSitesInternal(System.Int32)">
            <summary>
            Returns dataset with all sites for specified search index.
            </summary>
            <param name="searchIndexId">Search index id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetSearchIndexSiteInfoInternal(System.Int32)">
            <summary>
            Returns dataset with site search indexes for the specified site ID.
            </summary>
            <param name="siteId">ID of site</param>
            <returns>Dataset with results</returns>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetSearchIndexSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the SearchIndexSiteInfo structure for the specified searchIndex.
            </summary>
            <param name="indexId">SearchIndex id</param>
            <param name="siteId">Site id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.GetIndexSitesInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns index site data with dependecies on specified conditions.
            </summary>
            <param name="columns">Columns</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">TOP N Rows</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.SetSearchIndexSiteInfoInternal(CMS.SiteProvider.SearchIndexSiteInfo)">
            <summary>
            Sets specified searchIndexSite.
            Doesn't update existing item.
            </summary>
            <param name="searchIndexSite">SearchIndexSite to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfoProvider.DeleteSearchIndexSiteInfoInternal(CMS.SiteProvider.SearchIndexSiteInfo)">
            <summary>
            Deletes specified SearchIndexSiteInfo.
            </summary>
            <param name="infoObj">SearchIndexSiteInfo object</param>
        </member>
        <member name="T:CMS.SiteProvider.SearchIndexCultureInfo">
            <summary>
            Search index culture.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexCultureInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfo.#ctor">
            <summary>
            Constructor - Creates an empty SearchCultureInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SearchCultureInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexCultureInfo.#ctor(CMS.SiteProvider.SearchIndexCultureInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new SearchIndexCultureInfo object from the given DataClass.
            </summary>
            <param name="si">Source SearchCultureInfo info</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexCultureInfo.IndexID">
            <summary>
            Index ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexCultureInfo.IndexCultureID">
            <summary>
            Culture ID of index.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchIndexSiteInfo">
            <summary>
            Search index site.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty SearchIndexSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SearchIndexSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexSiteInfo.#ctor(CMS.SiteProvider.SearchIndexSiteInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new SearchIndexSiteInfo object from the given DataClass.
            </summary>
            <param name="si">Source SearchIndexSiteInfo info</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexSiteInfo.IndexID">
            <summary>
            Index ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexSiteInfo.IndexSiteID">
            <summary>
            Site ID of index.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchTaskInfoProvider">
            <summary>
            Class providing SearchTaskInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.MAX_NUMBER_OF_THREAD_RESTORING">
            <summary>
            Maximal number of thread restoring.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.TASK_INDEXER_RETRIEVE_ROWS_COUNT">
            <summary>
            Taskindexer will retrieve search tasks from database by count of 10.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.mEnableIndexer">
            <summary>
            Indicates whether indexing will start after import process finishes.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.mEnableTasks">
            <summary>
            Indicates whether task creation is enabled.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.mIsIndexThreadRunning">
            <summary>
            Indicates wheter thread is running.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.mWindowsIdentity">
            <summary>
            Windows identity.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.mNumberOfThreadRestoring">
            <summary>
            Current number of thread restoring.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.locker">
            <summary>
            Object used for thread locking.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskInfoProvider.mProcessSearchTasksByScheduler">
            <summary>
            If true, smart search tasks are processed by scheduler.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTaskInfo(System.Int32)">
            <summary>
            Returns the SearchTaskInfo structure for the specified searchTask.
            </summary>
            <param name="searchTaskId">SearchTask id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTasks(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns all the search tasks filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="columns">Selects only specified columns</param>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>        
            <param name="topN">Selects only TOP N rows</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTasks(System.String,System.String)">
            <summary>
            Returns all the search tasks filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.SetSearchTaskInfo(CMS.SiteProvider.SearchTaskInfo)">
            <summary>
            Sets (updates or inserts) specified searchTask.
            </summary>
            <param name="searchTaskObj">SearchTask to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.DeleteSearchTaskInfo(CMS.SiteProvider.SearchTaskInfo)">
            <summary>
            Deletes specified searchTask.
            </summary>
            <param name="searchTaskObj">SearchTask object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.DeleteSearchTaskInfo(System.Int32)">
            <summary>
            Deletes specified searchTask.
            </summary>
            <param name="searchTaskId">SearchTask id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTaskStatusEnum(System.String)">
            <summary>
            Converts search task status string to enumeration. It throws exception if status is unknown.
            </summary>
            <param name="searchTaskStatus">Search task status</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTaskStatusString(CMS.SiteProvider.SearchTaskStatusEnum)">
            <summary>
            Converts search task status enumeration to string. Default returns blank string.
            </summary>
            <param name="searchTaskStatus">Search task status</param>
            <returns></returns>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTaskTypeEnum(System.String)">
            <summary>
             Converts search task type string to enumeration. It throws exception if type is unknown.
            </summary>
            <param name="searchTaskType"></param>
            <returns></returns>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTaskTypeString(CMS.SiteProvider.SearchTaskTypeEnum)">
            <summary>
            Converts search task type enumeration to string. Default returns blank string.
            </summary>
            <param name="searchTaskType">Search task type</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.CreateTask(CMS.SiteProvider.SearchTaskTypeEnum,System.String,System.String,System.String)">
            <summary>
            Creates task in the database and start indexer.
            </summary>
            <param name="taskType">Task type</param>
            <param name="objectType">Object type</param>
            <param name="objectField">Object field</param>
            <param name="objectValue">Object value</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.CreateTask(CMS.SiteProvider.SearchTaskTypeEnum,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates task in the database and start indexer if it is required.
            </summary>
            <param name="taskType">Task type</param>
            <param name="objectType">Object type</param>
            <param name="objectField">Object field</param>
            <param name="objectValue">Object value</param>
            <param name="runIndexer">Whether indexer starts after creation</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.CreateMultiTask(CMS.SiteProvider.SearchTaskTypeEnum,System.String,System.String,System.Collections.ICollection,System.Boolean)">
            <summary>
            Creates tasks in the database and start indexer if it is required.
            </summary>
            <param name="taskType">Task type</param>
            <param name="objectType">Object type</param>
            <param name="objectField">Object field</param>
            <param name="objectValues">Object values</param>
            <param name="runIndexer">Whether indexer starts after creation</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.ProcessTasks">
            <summary>
            Processes tasks (starts indexer).
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.ProcessTasks(System.Boolean)">
            <summary>
            Processes tasks (starts indexer).
            </summary>
            <param name="createWebFarmTask">Indicates whether web farm task should be created</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.ProcessTasks(System.Boolean,System.Boolean)">
            <summary>
            Processes tasks (starts indexer).
            </summary>
            <param name="createWebFarmTask">Indicates whether web farm task should be created</param>
            <param name="workerRole">Indicates whether process tasks are run by Azure worker role</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.RunAsync(System.Security.Principal.WindowsIdentity)">
            <summary>
            Starts thread of indexer.
            </summary>
            <param name="wi">Windows identity</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.Run">
            <summary>
            Represents indexer thread. This method is not mentioned to call via API.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.TaskIndexer">
            <summary>
            Retrives search tasks from DB and processes them.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTaskInfoInternal(System.Int32)">
            <summary>
            Returns the SearchTaskInfo structure for the specified task.
            </summary>
            <param name="searchTaskId">Country id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.GetSearchTasksInternal(System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns all the search tasks filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="columns">Specifies selected columns, null for all columns</param>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return, 0 for all rows</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.SetSearchTaskInfoInternal(CMS.SiteProvider.SearchTaskInfo)">
            <summary>
            Sets (updates or inserts) specified search task.
            </summary>
            <param name="searchTask">Search task to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.DeleteSearchTaskInfoInternal(CMS.SiteProvider.SearchTaskInfo)">
            <summary>
            Deletes specified search task.
            </summary>
            <param name="searchTaskObj">Search task object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchTaskInfoProvider.CreateTask(CMS.SiteProvider.SearchTaskTypeEnum,System.String,System.String,System.String,CMS.SiteProvider.SearchTaskStatusEnum,System.Boolean)">
            <summary>
            Creates tasks in the database. Returns ids divided by comma of created tasks if createWhere is true.
            </summary>
            <param name="taskType">Task type</param>
            <param name="objectType">Object type</param>
            <param name="objectField">Object field</param>
            <param name="objectValue">Object value</param>
            <param name="taskStatus">Task status</param>
            <param name="createWhere">If where condition should be created</param>        
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfoProvider.EnableIndexer">
            <summary>
            Indicates whether indexing will start after import process finishes.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfoProvider.EnableTasks">
            <summary>
            Indicates whether task creation is enabled.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchTaskInfoProvider.ProcessSearchTasksByScheduler">
            <summary>
            If true, smart search tasks are processed by scheduler.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchTaskStatusEnum">
            <summary>
            Search task status enumeration.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskStatusEnum.Ready">
            <summary>
            Ready status.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskStatusEnum.InProgress">
            <summary>
            In progress status.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchTaskTypeEnum">
            <summary>
            Search task type enum.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskTypeEnum.Update">
            <summary>
            Update.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskTypeEnum.Delete">
            <summary>
            Delete.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskTypeEnum.Rebuild">
            <summary>
            Rebuild.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskTypeEnum.Optimize">
            <summary>
            Optimize.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchTaskTypeEnum.Process">
            <summary>
            Universal process task.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchIndexInfo">
            <summary>
            Search index.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.unlockPerformed">
            <summary>
            Indicates whether unlock on firt call of GetWriter/GetSearcher method was performed
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.mIndexLastUpdate">
            <summary>
            Last update of index.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.mIndexSettings">
            <summary>
            Contains object with search index settings, initialized by first get of IndexSettings property.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.searchers">
            <summary>
            Collection of index searchers.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.rebuild">
            <summary>
            Store actual index rebuild time.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.mIndexPathPrefix">
            <summary>
            Smart search index path prefix.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.mIndexFileSize">
            <summary>
            Size of index in filesystem.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.mNumberOfIndexedItems">
            <summary>
            Number of indexed items.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.mIndexStatus">
            <summary>
            Index status.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.mCurrentAnalyzer">
            <summary>
            Analyzer object.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfo.mCurrentSearchAnalyzer">
            <summary>
            Analyzer object for searching.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.#ctor">
            <summary>
            Constructor - Creates an empty SearchIndexInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new SearchIndexInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.#ctor(CMS.SiteProvider.SearchIndexInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new SearchIndexInfo object from the given DataClass.
            </summary>
            <param name="si">SearchIndexInfo</param>
            <param name="keepSourceData">If true, source data are kept in the object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.GetAnalyzer">
            <summary>
            Returns current object analyzer.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.GetAnalyzer(System.Boolean)">
            <summary>
            Returns current object analyzer.
            </summary>
            <param name="isSearch">Indicates whether analyzer should be used for search or indexing</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.GetCurrentStopWordsFileInfo">
            <summary>
            Returns FileInfo object of stop words file for current index.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.LoadCustomAnalyzer(System.String,System.String)">
            <summary>
            Returns analyzer object for specified analyzer name.
            </summary>
            <param name="assemblyName">Assembky name</param>
            <param name="className">Class name</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.GetWriter(System.Boolean)">
            <summary>
            Returns IndexWriter object with dependence on current index.
            </summary>
            <param name="create">Indicates whether index should be created</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.GetSearcher">
            <summary>
            Returns IndexSearcher object with dependence on current index.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.GetSearcher(System.Boolean)">
            <summary>
            Returns IndexSearcher object with dependence on current index.
            </summary>
            <param name="readOnly">Indicates whether searcher will be used for deleting (false) or searching (true)</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.GetSearcher(System.Boolean,System.Int32)">
            <summary>
            Returns IndexSearcher object with dependence on current index.
            </summary>
            <param name="readOnly">Indicates whether searcher will be used for deleting (false) or searching (true)</param>
            <param name="iteration">Iteration count</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.InvalidateSearcher(System.Guid)">
            <summary>
            Invalidate searcher.
            </summary>
            <param name="id">Searcher id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.InvalidateAnalyzer">
            <summary>
            Invalidates cached analyzer for current index.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.InvalidateIndexSizeInfo">
            <summary>
            Invalidates size of files in index and count of files in index.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.Unlock">
            <summary>
            Forcibly unlock current index.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfo.GetIncluded(System.String,System.String)">
            <summary>
            Returned value determines which objects are included in search content field.
            Every bit of returned integer is asociated with one object.
            0001 - Include forum posts. (SearchIndexInfoProvider.INCLUDE_FORUMS)
            0010 - Include blog comments. (value is defined in constant SearchIndexInfoProvider.INCLUDE_BLOGS)
            0100 - Include message board messages. (SearchIndexInfoProvider.INCLUDE_MESSAGE_BOARDS).        
            </summary>
            <param name="path">Path</param>
            <param name="classname">Class name</param>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexBatchSize">
            <summary>
            Gets or sets the batch size for data loading.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexLastUpdate">
            <summary>
            Last modification of index.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.ActualRebuildTime">
            <summary>
            Gets or sets the actual rebuild time.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexID">
            <summary>
            Index ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexName">
            <summary>
            Index name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexType">
            <summary>
            Gets or sets the index type (documents, forums, etc).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexDisplayName">
            <summary>
            Display name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexAnalyzerType">
            <summary>
            Index analyzer type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexIsCommunityGroup">
            <summary>
            Is community group.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexSettings">
            <summary>
            Index settings.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexGUID">
            <summary>
            Index guid.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexLastModified">
            <summary>
            Time of last modification.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexLastRebuildTime">
            <summary>
            Time of last rebuild of index.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexFileSize">
            <summary>
            Gets or sets index file size.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.NumberOfIndexedItems">
            <summary>
            Gets or sets number of indexed documents.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexStatus">
            <summary>
            Gets or sets index status.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.CustomAnalyzerAssemblyName">
            <summary>
            Gets or sets the custom analyzer assembly name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.CustomAnalyzerClassName">
            <summary>
            Gets or sets the custom analyzer class name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.StopWordsFile">
            <summary>
            Gets or sets the filename which should be used for stop words definition.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.IndexPathPrefix">
            <summary>
            Gets the index path prefix.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfo.CurrentIndexPath">
            <summary>
            Returns current index path.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.SearchIndexInfoProvider">
            <summary>
            Class providing SearchIndexInfo management. 
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.INCLUDE_FORUMS">
            <summary>
            Include forum post to index search.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.INCLUDE_BLOGS">
            <summary>
            Include blog comments to index search.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.INCLUDE_MESSAGE_BOARDS">
            <summary>
            Include message board messages to index search.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.searchIndexes">
            <summary>
            Table of the search index infos indexed by index names.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.searchIndexesById">
            <summary>
            Table of the search index infos indexed by index ID.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.indexedClasses">
            <summary>
            List of class names which have a general search index set.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.cachedIndexCulture">
            <summary>
            Cache containing information whether searchindex belongs to culture, key is indexid_culturecode.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.siteIndexes">
            <summary>
            Cache containing information about indexes assigned to sites. Key - siteId, Value - List(indexIds).
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.mFlatIndexes">
            <summary>
            Collection of ids of indexes.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.SearchIndexInfoProvider.tableLock">
            <summary>
            Table lock for loading.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.InvalidateIndexIDs(System.String)">
            <summary>
            Invalidates index ids collection for specified object type.
            </summary>
            <param name="type">Object type name</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetIndexIDs(System.String)">
            <summary>
            Returs list of index ids for specified object type.
            </summary>
            <param name="type">Object type name</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.SearchTypeEnabled(System.String)">
            <summary>
            Returns true if smart search is enabled and exists at least one index for specified object type.
            </summary>
            <param name="type">Object type name</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexSites(System.Int32)">
            <summary>
            Returns all sites for specified search index.
            </summary>
            <param name="searchIndexId">Search index id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexInfo(System.Int32)">
            <summary>
            Returns the SearchIndexInfo structure for the specified searchIndex.
            </summary>
            <param name="searchIndexId">SearchIndex id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexInfo(System.String)">
            <summary>
            Returns the SearchIndexInfo structure for the specified searchIndex.
            </summary>
            <param name="searchIndexName">SearchIndex name</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetLocalizedSearchIndexInfo(System.String,System.String)">
            <summary>
            Returns the SearchIndexInfo structure for the specified searchIndex. If localized SearchIndex found, then 
            it is returned insted of regular one.
            </summary>
            <param name="searchIndexName">SearchIndex name</param>
            <param name="culture">Culture code</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexes(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all the searchIndexes filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexes(System.String,System.String,System.Int32)">
            <summary>
            Returns all the searchIndexes filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexes(System.String,System.String)">
            <summary>
            Returns all the searchIndexes filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.SetSearchIndexInfo(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Sets (updates or inserts) specified searchIndex.
            </summary>
            <param name="searchIndex">SearchIndex to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.DeleteSearchIndexInfo(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Deletes specified searchIndex.
            </summary>
            <param name="infoObj">SearchIndex object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.DeleteSearchIndexInfo(System.Int32)">
            <summary>
            Deletes specified searchIndex.
            </summary>
            <param name="searchIndexId">SearchIndex id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.IsClassIndexed(System.String)">
            <summary>
            Determines whether the class has a general index.
            </summary>
            <param name="className">Name of the class</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexInfoInternal(System.Int32)">
            <summary>
            Returns the SearchIndexInfo structure for the specified searchIndex.
            </summary>
            <param name="searchIndexId">SearchIndex id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexInfoByNameInternal(System.String)">
            <summary>
            Returns the SearchIndexInfo structure for the specified searchIndex.
            </summary>
            <param name="searchIndexName">SearchIndex id</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSearchIndexesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all the searchIndexes filtered by where condition and sorted by orderBy expression.
            </summary>
            <param name="where">The WHERE condition to use</param>
            <param name="orderBy">The ORDER BY expression to use to sort the result</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Selected columns</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.SetSearchIndexInfoInternal(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Sets (updates or inserts) specified searchIndex.
            </summary>
            <param name="searchIndex">SearchIndex to set</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.DeleteSearchIndexInfoInternal(CMS.SiteProvider.SearchIndexInfo)">
            <summary>
            Deletes specified searchIndex.
            </summary>
            <param name="infoObj">SearchIndex object</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.RemoveFromIndexSiteCache(System.String,System.Boolean)">
            <summary>
            Removes key from cached site indexes.
            </summary>
            <param name="key">Cache key to be removed (site id)</param>
            <param name="logWebFarmTask">Indicates whether webfarm task should be created</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.RemoveFromIndexCultureCache(System.String,System.Boolean)">
            <summary>
            Removes key from cached index-culture relation.
            </summary>
            <param name="key">Cache key to be removed</param>
            <param name="logWebFarmTask">Indicates whether webfarm task should be created</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.IndexIsInSite(CMS.SiteProvider.SearchIndexInfo,System.Int32)">
            <summary>
            If SearchIndex has specified site assigned returns true, otherwise false.
            The result is cached for next time usage.
            </summary>
            <param name="sii">SearchIndexInfo</param>
            <param name="siteId">Site id</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetSiteIndexes(System.Int32)">
            <summary>
            Returns search indexes of specified site. Tries to load it from cache, if not found indexes are loaded from DB.
            </summary>
            <param name="siteId">Site id</param>
            <returns>List with indexes ids. Never null, if no indexes for site, empty list is returned.</returns>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.IndexIsInCulture(CMS.SiteProvider.SearchIndexInfo,System.String)">
            <summary>
            If SearchIndex has specified culture assigned returns true, otherwise false.
            The result is cached for next time usage.
            </summary>
            <param name="sii">SearchIndexInfo</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.GetRelevantIndexes(CMS.SettingsProvider.ISearchable)">
            <summary>
            Returns all indexes which are relevant to the specified ISearchable object. 
            Check ISearchable object type and with dependence on this type check index settings
            </summary>
            <param name="searchObject">Object implementing ISearchable interface</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.Clear">
            <summary>
            Clears hash tables.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hash tables.
            </summary>
            <param name="logWebFarm">Enables or disables webfarm task logging, if false no task is logged</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.AnalyzerEnumToString(CMS.SiteProvider.AnalyzerTypeEnum)">
            <summary>
            Returns codename for analyzer type enum.
            </summary>
            <param name="analyzer">Analyzer type</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.AnalyzerCodenameToEnum(System.String)">
            <summary>
            Returns AnalyzerTypeEnum from codename.
            </summary>
            <param name="analyzer">Analyzer type codename</param>        
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.ClearIndexedClassesList">
            <summary>
            Clears the indexedClass list (thread safe).
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.IndexStatusEnumToString(CMS.SiteProvider.IndexStatusEnum)">
            <summary>
            Returns converted string from IndexStatusEnum.
            </summary>
            <param name="status">Status to convert.</param>
        </member>
        <member name="M:CMS.SiteProvider.SearchIndexInfoProvider.IndexStatusStringToEnum(System.String)">
            <summary>
            Returns converted IndexStatusEnum from string.
            </summary>
            <param name="status">Status to convert.</param>        
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfoProvider.FlatIndexes">
            <summary>
            Returns hashtable of flat indexes.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.SearchIndexInfoProvider.SearchEnabled">
            <summary>
            Gets property which indicates if Smart search is enabled.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TempFileInfo">
            <summary>
            TempFileInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TempFileInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfo.#ctor">
            <summary>
            Constructor - Creates an empty TempFileInfo object.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new TempFileInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfo.EnsureBinaryData(System.Boolean)">
            <summary>
            Ensures the binary data - loads the binary data from file if available.
            </summary>
            <param name="forceLoadFromDB">If true, the data are loaded even from DB</param>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileSiteName">
            <summary>
            Temporary file site name.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileID">
            <summary>
            Temporary file ID.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileLastModified">
            <summary>
            Date and time when the temporary file was last modified.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileParentGUID">
            <summary>
            Temporary file scope unique identifier (temporary files are numbered uniquely within this scope).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileMimeType">
            <summary>
            Temporary file mime type.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileGUID">
            <summary>
            Temporary file unique identifier.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileBinary">
            <summary>
            Temporary file binary.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileNumber">
            <summary>
            Name of the temporary file.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileName">
            <summary>
            Name of the original file.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileExtension">
            <summary>
            Temporary file extension.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileDirectory">
            <summary>
            Folder within temporary files folder.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileImageWidth">
            <summary>
            Temporary file width (makes sense for images only).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileSize">
            <summary>
            Temporary files size.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileImageHeight">
            <summary>
            Temporary file height (makes sense for images only).
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileTitle">
            <summary>
            Temporary file title.
            </summary>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfo.FileDescription">
            <summary>
            Temporary file description.
            </summary>
        </member>
        <member name="T:CMS.SiteProvider.TempFileInfoProvider">
            <summary>
            Class providing TempFileInfo management.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TempFileInfoProvider.IMAGE_EDITOR_FOLDER">
            <summary>
            Name of the parent folder for image editor temporary files.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TempFileInfoProvider.MULTIFILE_UPLOADER_FOLDER">
            <summary>
            Name of the parent folder for multifile uploader temporary files.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TempFileInfoProvider.ensureFileLock">
            <summary>
            Lock object for ensuring of the physical files.
            </summary>
        </member>
        <member name="F:CMS.SiteProvider.TempFileInfoProvider.mTemporaryFilesFolderPath">
            <summary>
            Temporary files folder path.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFileInfo(System.Int32)">
            <summary>
            Returns temporary file with specified ID.
            </summary>
            <param name="tempFileId">Temporary file ID</param>        
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFileInfo(System.Guid,System.Int32)">
            <summary>
            Returns temporary file with specified number.
            </summary>
            <param name="scopeGuid">GUID of the parent scope</param>
            <param name="number">Temporary file number within the parent scope</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFiles">
            <summary>
            Returns dataset of all temporary files.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFiles(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all temporary files matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.SetTempFileInfo(CMS.SiteProvider.TempFileInfo)">
            <summary>
            Sets (updates or inserts) specified temporary file.
            </summary>
            <param name="tempFileObj">Temporary file to be set</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFileInfo(CMS.SiteProvider.TempFileInfo)">
            <summary>
            Deletes specified temporary file.
            </summary>
            <param name="tempFileObj">Temporary file to be deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFileInfo(System.Int32)">
            <summary>
            Deletes temporary file with specified ID.
            </summary>
            <param name="tempFileId">Temporary file ID</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFiles(System.String,System.Guid)">
            <summary>
            Deletes all temporary files for the given parent scope.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeGuid">GUID of the parent scope</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFiles(System.String,System.Guid,System.Int32,System.Int32)">
            <summary>
            Deletes all the temporary files with number between lower and upper boud for the given parent scope.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeGuid">GUID of the parent scope</param>
            <param name="lowerBound">Number of the temporary file which should be deleted as the first</param>
            <param name="upperBound">Number of the temporary file which should be deleted as the last</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFiles(System.String,System.DateTime)">
            <summary>
            Deletes old temporary files from the specified parent folder.`  `.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="olderThan">All temporary files older than this date/time are deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFileInfoInternal(System.Int32)">
            <summary>
            Returns temporary file with specified ID.
            </summary>
            <param name="tempFileId">Temporary file ID</param>        
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFileInfoInternal(System.Guid,System.Int32)">
            <summary>
            Returns temporary file from the specified parent scope and with specified number.
            </summary>
            <param name="scopeGuid">GUID of the parent scope</param>
            <param name="number">Number of the temporary file to return</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFilesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all temporary files matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.SetTempFileInfoInternal(CMS.SiteProvider.TempFileInfo)">
            <summary>
            Sets (updates or inserts) specified temporary file.
            </summary>
            <param name="tempFileObj">Temporary file to be set</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFileInfoInternal(CMS.SiteProvider.TempFileInfo)">
            <summary>
            Deletes specified temporary file.
            </summary>
            <param name="tempFileObj">Temporary file to be deleted</param>        
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFilesInternal(System.String,System.Guid)">
            <summary>
            Deletes all the temporary files from the given parent scope.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeGuid">GUID of the parent scope</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFilesInternal(System.String,System.Guid,System.Int32,System.Int32)">
            <summary>
            Deletes all the temporary files with number between lower and upper boud from the given parent scope.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeGuid">GUID of the parent scope</param>
            <param name="lowerBound">Number of temporary file which should be deleted as the first</param>
            <param name="upperBound">Number of the temporary file which should be deleted as the last</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.DeleteTempFilesInternal(System.String,System.DateTime)">
            <summary>
            Deletes old temporary files from the specified parent folder.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="olderThan">All temporary files older than this date/time are deleted</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.EnsurePhysicalFile(CMS.SiteProvider.TempFileInfo)">
            <summary>
            Ensures the file in the file system.
            </summary>
            <param name="fileInfo">Temporary file</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFileBinary(System.String,System.Guid,System.Int32,System.String)">
            <summary>
            Returns the temporary file binary data from disk.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeGuid">GUID of the parent scope</param>
            <param name="fileNumber">Temporary file number</param>
            <param name="fileExtension">Temporary file extension</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFileBinary(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the temporary file binary data from disk.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeFolder">Scope folder which is located under the parent folder</param>
            <param name="fileNumber">Temporary file number</param>
            <param name="fileExtension">Temporary file extension</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.StoreFilesInFileSystem(System.String)">
            <summary>
            Returns the current settings whether the files should be stored in the filesystem.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.StoreFilesInDatabase(System.String)">
            <summary>
            Returns the current settings whether the files should be stored in the database.
            </summary>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFilesFolderPath(System.String,System.Guid)">
            <summary>
            Returns physical path to the folder where temporary files are located.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeGuid">Parent scope GUID</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFilesFolderPath(System.String,System.String)">
            <summary>
            Returns physical path to the folder where temporary files are located.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeFolder">Scope folder which is located under the parent folder</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFilesRootFolderPath">
            <summary>
            Returns physical path to the root folder of all temporary files.
            </summary>        
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFilesRootFolderPath(System.String)">
            <summary>
            Returns physical path to the root folder of all temporary files.
            </summary>        
            <param name="webFullPath">Full path to the root of the web project (e.g. c:\WebProject\)</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFilePath(System.String,System.Guid,System.Int32,System.String)">
            <summary>
            Returns physical path to the specified temporary file.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeGuid">GUID of the parent scope</param>
            <param name="fileNumber">Temporary file number</param>
            <param name="fileExtension">Temporary file extension</param>
        </member>
        <member name="M:CMS.SiteProvider.TempFileInfoProvider.GetTempFilePath(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns physical path to the specified temporary file.
            </summary>
            <param name="parentFolder">Parent folder which is located under the temporary files root folder</param>
            <param name="scopeFolder">Scope folder which is located under the parent folder</param>
            <param name="fileNumber">Temporary file number</param>
            <param name="fileExtension">Temporary file extension</param>
        </member>
        <member name="P:CMS.SiteProvider.TempFileInfoProvider.TemporaryFilesFolderPath">
            <summary>
            Temporary files folder path (default: ~/App_Data/CMSTemp/)
            </summary>
        </member>
    </members>
</doc>
